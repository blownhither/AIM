
kern/vmaim.elf:     file format elf32-i386


Disassembly of section .text:

80100000 <__from_id>:
80100000:	53                   	push   %bx
80100001:	e8 82 57             	call   80105786 <__umoddi3+0x13a>
80100004:	00 00                	add    %al,(%bx,%si)
80100006:	81 c1 ba b2          	add    $0xb2ba,%cx
8010000a:	00 00                	add    %al,(%bx,%si)
8010000c:	8b 5c 24             	mov    0x24(%si),%bx
8010000f:	08 8b 81 20          	or     %cl,0x2081(%bp,%di)
80100013:	ff                   	(bad)  
80100014:	ff                   	(bad)  
80100015:	ff 8d 89 20          	decw   0x2089(%di)
80100019:	ff                   	(bad)  
8010001a:	ff                   	(bad)  
8010001b:	ff                   	(bad)  
8010001c:	39 c8                	cmp    %cx,%ax
8010001e:	74 22                	je     80100042 <__from_id+0x42>
80100020:	8d 50 fc             	lea    -0x4(%bx,%si),%dx
80100023:	8b 40 fc             	mov    -0x4(%bx,%si),%ax
80100026:	3b 58 44             	cmp    0x44(%bx,%si),%bx
80100029:	75 0d                	jne    80100038 <__from_id+0x38>
8010002b:	eb 1b                	jmp    80100048 <__from_id+0x48>
8010002d:	8d 76 00             	lea    0x0(%bp),%si
80100030:	8b 40 fc             	mov    -0x4(%bx,%si),%ax
80100033:	39 58 44             	cmp    %bx,0x44(%bx,%si)
80100036:	74 10                	je     80100048 <__from_id+0x48>
80100038:	8b 42 04             	mov    0x4(%bp,%si),%ax
8010003b:	8d 50 fc             	lea    -0x4(%bx,%si),%dx
8010003e:	39 c8                	cmp    %cx,%ax
80100040:	75 ee                	jne    80100030 <__from_id+0x30>
80100042:	31 c0                	xor    %ax,%ax
80100044:	5b                   	pop    %bx
80100045:	c3                   	ret    
80100046:	66 90                	xchg   %eax,%eax
80100048:	8b 02                	mov    (%bp,%si),%ax
8010004a:	5b                   	pop    %bx
8010004b:	c3                   	ret    

8010004c <__init>:
8010004c:	57                   	push   %di
8010004d:	56                   	push   %si
8010004e:	53                   	push   %bx
8010004f:	83 ec 2c             	sub    $0x2c,%sp
80100052:	e8 35 57             	call   8010578a <__text_end_kern+0x2>
80100055:	00 00                	add    %al,(%bx,%si)
80100057:	81 c3 69 b2          	add    $0xb269,%bx
8010005b:	00 00                	add    %al,(%bx,%si)
8010005d:	8d 83 60 a6          	lea    -0x59a0(%bp,%di),%ax
80100061:	ff                   	(bad)  
80100062:	ff 50 e8             	call   *-0x18(%bx,%si)
80100065:	df 13                	fist   (%bp,%di)
80100067:	00 00                	add    %al,(%bx,%si)
80100069:	8d 7c 24             	lea    0x24(%si),%di
8010006c:	1c 8d                	sbb    $0x8d,%al
8010006e:	b3 40                	mov    $0x40,%bl
80100070:	dd ff                	(bad)  
80100072:	ff                   	(bad)  
80100073:	b9 05 00             	mov    $0x5,%cx
80100076:	00 00                	add    %al,(%bx,%si)
80100078:	f3 a5                	rep movsw %ds:(%si),%es:(%di)
8010007a:	58                   	pop    %ax
8010007b:	8d 44 24             	lea    0x24(%si),%ax
8010007e:	18 50 e8             	sbb    %dl,-0x18(%bx,%si)
80100081:	cb                   	lret   
80100082:	14 00                	adc    $0x0,%al
80100084:	00 8d 83 fc          	add    %cl,-0x37d(%di)
80100088:	ac                   	lods   %ds:(%si),%al
80100089:	ff                   	(bad)  
8010008a:	ff 89 04 24          	decw   0x2404(%bx,%di)
8010008e:	e8 b5 13             	call   80101446 <get_default_kputs+0x12>
80100091:	00 00                	add    %al,(%bx,%si)
80100093:	31 c0                	xor    %ax,%ax
80100095:	83 c4 30             	add    $0x30,%sp
80100098:	5b                   	pop    %bx
80100099:	5e                   	pop    %si
8010009a:	5f                   	pop    %di
8010009b:	c3                   	ret    

8010009c <__from_name>:
8010009c:	55                   	push   %bp
8010009d:	57                   	push   %di
8010009e:	56                   	push   %si
8010009f:	53                   	push   %bx
801000a0:	83 ec 1c             	sub    $0x1c,%sp
801000a3:	e8 e4 56             	call   8010578a <__text_end_kern+0x2>
801000a6:	00 00                	add    %al,(%bx,%si)
801000a8:	81 c3 18 b2          	add    $0xb218,%bx
801000ac:	00 00                	add    %al,(%bx,%si)
801000ae:	8b 6c 24             	mov    0x24(%si),%bp
801000b1:	30 8b 83 20          	xor    %cl,0x2083(%bp,%di)
801000b5:	ff                   	(bad)  
801000b6:	ff                   	(bad)  
801000b7:	ff 8d 8b 20          	decw   0x208b(%di)
801000bb:	ff                   	(bad)  
801000bc:	ff                   	(bad)  
801000bd:	ff 89 4c 24          	decw   0x244c(%bx,%di)
801000c1:	0c 39                	or     $0x39,%al
801000c3:	c8 74 32 8d          	enter  $0x3274,$0x8d
801000c7:	70 fc                	jo     801000c5 <__from_name+0x29>
801000c9:	eb 0d                	jmp    801000d8 <__from_name+0x3c>
801000cb:	90                   	nop
801000cc:	8b 46 04             	mov    0x4(%bp),%ax
801000cf:	8d 70 fc             	lea    -0x4(%bx,%si),%si
801000d2:	3b 44 24             	cmp    0x24(%si),%ax
801000d5:	0c 74                	or     $0x74,%al
801000d7:	20 8b 3e 83          	and    %cl,-0x7cc2(%bp,%di)
801000db:	ec                   	in     (%dx),%al
801000dc:	08 55 57             	or     %dl,0x57(%di)
801000df:	e8 28 34             	call   8010350a <memset+0x16>
801000e2:	00 00                	add    %al,(%bx,%si)
801000e4:	83 c4 10             	add    $0x10,%sp
801000e7:	85 c0                	test   %ax,%ax
801000e9:	75 e1                	jne    801000cc <__from_name+0x30>
801000eb:	89 f8                	mov    %di,%ax
801000ed:	83 c4 1c             	add    $0x1c,%sp
801000f0:	5b                   	pop    %bx
801000f1:	5e                   	pop    %si
801000f2:	5f                   	pop    %di
801000f3:	5d                   	pop    %bp
801000f4:	c3                   	ret    
801000f5:	8d 76 00             	lea    0x0(%bp),%si
801000f8:	31 ff                	xor    %di,%di
801000fa:	89 f8                	mov    %di,%ax
801000fc:	83 c4 1c             	add    $0x1c,%sp
801000ff:	5b                   	pop    %bx
80100100:	5e                   	pop    %si
80100101:	5f                   	pop    %di
80100102:	5d                   	pop    %bp
80100103:	c3                   	ret    

80100104 <__remove>:
80100104:	57                   	push   %di
80100105:	56                   	push   %si
80100106:	53                   	push   %bx
80100107:	e8 80 56             	call   8010578a <__text_end_kern+0x2>
8010010a:	00 00                	add    %al,(%bx,%si)
8010010c:	81 c3 b4 b1          	add    $0xb1b4,%bx
80100110:	00 00                	add    %al,(%bx,%si)
80100112:	8b 4c 24             	mov    0x24(%si),%cx
80100115:	10 8b 83 20          	adc    %cl,0x2083(%bp,%di)
80100119:	ff                   	(bad)  
8010011a:	ff                   	(bad)  
8010011b:	ff 8d b3 20          	decw   0x20b3(%di)
8010011f:	ff                   	(bad)  
80100120:	ff                   	(bad)  
80100121:	ff                   	(bad)  
80100122:	39 f0                	cmp    %si,%ax
80100124:	74 5a                	je     80100180 <__remove+0x7c>
80100126:	8d 50 fc             	lea    -0x4(%bx,%si),%dx
80100129:	8b 40 fc             	mov    -0x4(%bx,%si),%ax
8010012c:	3b 48 48             	cmp    0x48(%bx,%si),%cx
8010012f:	74 4f                	je     80100180 <__remove+0x7c>
80100131:	31 ff                	xor    %di,%di
80100133:	eb 15                	jmp    8010014a <__remove+0x46>
80100135:	8d 76 00             	lea    0x0(%bp),%si
80100138:	8b 42 04             	mov    0x4(%bp,%si),%ax
8010013b:	8d 50 fc             	lea    -0x4(%bx,%si),%dx
8010013e:	39 f0                	cmp    %si,%ax
80100140:	74 1a                	je     8010015c <__remove+0x58>
80100142:	8b 40 fc             	mov    -0x4(%bx,%si),%ax
80100145:	39 48 48             	cmp    %cx,0x48(%bx,%si)
80100148:	74 36                	je     80100180 <__remove+0x7c>
8010014a:	39 c1                	cmp    %ax,%cx
8010014c:	75 ea                	jne    80100138 <__remove+0x34>
8010014e:	89 d7                	mov    %dx,%di
80100150:	8b 42 04             	mov    0x4(%bp,%si),%ax
80100153:	8d 50 fc             	lea    -0x4(%bx,%si),%dx
80100156:	39 f0                	cmp    %si,%ax
80100158:	75 e8                	jne    80100142 <__remove+0x3e>
8010015a:	66 90                	xchg   %eax,%eax
8010015c:	85 ff                	test   %di,%di
8010015e:	74 20                	je     80100180 <__remove+0x7c>
80100160:	8b 57 04             	mov    0x4(%bx),%dx
80100163:	8b 47 08             	mov    0x8(%bx),%ax
80100166:	89 42 04             	mov    %ax,0x4(%bp,%si)
80100169:	89 10                	mov    %dx,(%bx,%si)
8010016b:	83 ec 0c             	sub    $0xc,%sp
8010016e:	57                   	push   %di
8010016f:	e8 28 2f             	call   8010309a <kmalloc+0x4e>
80100172:	00 00                	add    %al,(%bx,%si)
80100174:	83 c4 10             	add    $0x10,%sp
80100177:	31 c0                	xor    %ax,%ax
80100179:	5b                   	pop    %bx
8010017a:	5e                   	pop    %si
8010017b:	5f                   	pop    %di
8010017c:	c3                   	ret    
8010017d:	8d 76 00             	lea    0x0(%bp),%si
80100180:	b8 ff ff             	mov    $0xffff,%ax
80100183:	ff                   	(bad)  
80100184:	ff 5b 5e             	lcall  *0x5e(%bp,%di)
80100187:	5f                   	pop    %di
80100188:	c3                   	ret    
80100189:	8d 76 00             	lea    0x0(%bp),%si

8010018c <__add>:
8010018c:	57                   	push   %di
8010018d:	56                   	push   %si
8010018e:	53                   	push   %bx
8010018f:	e8 f8 55             	call   8010578a <__text_end_kern+0x2>
80100192:	00 00                	add    %al,(%bx,%si)
80100194:	81 c3 2c b1          	add    $0xb12c,%bx
80100198:	00 00                	add    %al,(%bx,%si)
8010019a:	8b 7c 24             	mov    0x24(%si),%di
8010019d:	10 83 ec 08          	adc    %al,0x8ec(%bp,%di)
801001a1:	6a 00                	push   $0x0
801001a3:	6a 0c                	push   $0xc
801001a5:	e8 a2 2e             	call   8010304a <__simple_free+0x2>
801001a8:	00 00                	add    %al,(%bx,%si)
801001aa:	83 c4 10             	add    $0x10,%sp
801001ad:	85 c0                	test   %ax,%ax
801001af:	74 4e                	je     801001ff <__add+0x73>
801001b1:	89 38                	mov    %di,(%bx,%si)
801001b3:	8b 8b 20 ff          	mov    -0xe0(%bp,%di),%cx
801001b7:	ff                   	(bad)  
801001b8:	ff 8d 71 fc          	decw   -0x38f(%di)
801001bc:	8d 9b 20 ff          	lea    -0xe0(%bp,%di),%bx
801001c0:	ff                   	(bad)  
801001c1:	ff                   	(bad)  
801001c2:	39 d9                	cmp    %bx,%cx
801001c4:	74 22                	je     801001e8 <__add+0x5c>
801001c6:	8b 7f 44             	mov    0x44(%bx),%di
801001c9:	8b 51 fc             	mov    -0x4(%bx,%di),%dx
801001cc:	3b 7a 44             	cmp    0x44(%bp,%si),%di
801001cf:	72 17                	jb     801001e8 <__add+0x5c>
801001d1:	8d 76 00             	lea    0x0(%bp),%si
801001d4:	8b 56 04             	mov    0x4(%bp),%dx
801001d7:	8d 72 fc             	lea    -0x4(%bp,%si),%si
801001da:	89 d1                	mov    %dx,%cx
801001dc:	39 da                	cmp    %bx,%dx
801001de:	74 08                	je     801001e8 <__add+0x5c>
801001e0:	8b 52 fc             	mov    -0x4(%bp,%si),%dx
801001e3:	39 7a 44             	cmp    %di,0x44(%bp,%si)
801001e6:	76 ec                	jbe    801001d4 <__add+0x48>
801001e8:	8d 58 04             	lea    0x4(%bx,%si),%bx
801001eb:	8b 56 08             	mov    0x8(%bp),%dx
801001ee:	89 5e 08             	mov    %bx,0x8(%bp)
801001f1:	89 48 04             	mov    %cx,0x4(%bx,%si)
801001f4:	89 50 08             	mov    %dx,0x8(%bx,%si)
801001f7:	89 1a                	mov    %bx,(%bp,%si)
801001f9:	31 c0                	xor    %ax,%ax
801001fb:	5b                   	pop    %bx
801001fc:	5e                   	pop    %si
801001fd:	5f                   	pop    %di
801001fe:	c3                   	ret    
801001ff:	b8 ff ff             	mov    $0xffff,%ax
80100202:	ff                   	(bad)  
80100203:	ff                   	(bad)  
80100204:	eb f5                	jmp    801001fb <__add+0x6f>
80100206:	66 90                	xchg   %eax,%eax

80100208 <__next>:
80100208:	53                   	push   %bx
80100209:	83 ec 18             	sub    $0x18,%sp
8010020c:	e8 77 55             	call   80105786 <__umoddi3+0x13a>
8010020f:	00 00                	add    %al,(%bx,%si)
80100211:	81 c1 af b0          	add    $0xb0af,%cx
80100215:	00 00                	add    %al,(%bx,%si)
80100217:	8b 44 24             	mov    0x24(%si),%ax
8010021a:	20 8b 54 24          	and    %cl,0x2454(%bp,%di)
8010021e:	24 85                	and    $0x85,%al
80100220:	c0                   	(bad)  
80100221:	74 21                	je     80100244 <__next+0x3c>
80100223:	8b 1a                	mov    (%bp,%si),%bx
80100225:	3b 03                	cmp    (%bp,%di),%ax
80100227:	75 33                	jne    8010025c <__next+0x54>
80100229:	8b 43 04             	mov    0x4(%bp,%di),%ax
8010022c:	83 e8 04             	sub    $0x4,%ax
8010022f:	89 02                	mov    %ax,(%bp,%si)
80100231:	8d 91 20 ff          	lea    -0xe0(%bx,%di),%dx
80100235:	ff                   	(bad)  
80100236:	ff                   	(bad)  
80100237:	39 d0                	cmp    %dx,%ax
80100239:	74 1d                	je     80100258 <__next+0x50>
8010023b:	8b 00                	mov    (%bx,%si),%ax
8010023d:	83 c4 18             	add    $0x18,%sp
80100240:	5b                   	pop    %bx
80100241:	c3                   	ret    
80100242:	66 90                	xchg   %eax,%eax
80100244:	8b 81 20 ff          	mov    -0xe0(%bx,%di),%ax
80100248:	ff                   	(bad)  
80100249:	ff 89 44 24          	decw   0x2444(%bx,%di)
8010024d:	0c 83                	or     $0x83,%al
8010024f:	e8 04 89             	call   80108b56 <__func__.1499+0x33ae>
80100252:	02 eb                	add    %bl,%ch
80100254:	dc 8d 76 00          	fmull  0x76(%di)
80100258:	31 c0                	xor    %ax,%ax
8010025a:	eb e1                	jmp    8010023d <__next+0x35>
8010025c:	83 ec 0c             	sub    $0xc,%sp
8010025f:	8d 81 80 a6          	lea    -0x5980(%bx,%di),%ax
80100263:	ff                   	(bad)  
80100264:	ff 50 6a             	call   *0x6a(%bx,%si)
80100267:	6f                   	outsw  %ds:(%si),(%dx)
80100268:	8d 81 13 ad          	lea    -0x52ed(%bx,%di),%ax
8010026c:	ff                   	(bad)  
8010026d:	ff 50 8d             	call   *-0x73(%bx,%si)
80100270:	81 e0 a4 ff          	and    $0xffa4,%ax
80100274:	ff 50 8d             	call   *-0x73(%bx,%si)
80100277:	81 b0 a6 ff ff 50    	xorw   $0x50ff,-0x5a(%bx,%si)
8010027d:	89 cb                	mov    %cx,%bx
8010027f:	e8 48 30             	call   801032ca <__local_panic+0x2>
	...

80100284 <__global_mzy>:
80100284:	53                   	push   %bx
80100285:	83 ec 14             	sub    $0x14,%sp
80100288:	e8 ff 54             	call   8010578a <__text_end_kern+0x2>
8010028b:	00 00                	add    %al,(%bx,%si)
8010028d:	81 c3 33 b0          	add    $0xb033,%bx
80100291:	00 00                	add    %al,(%bx,%si)
80100293:	8d 83 d4 a6          	lea    -0x592c(%bp,%di),%ax
80100297:	ff                   	(bad)  
80100298:	ff 50 e8             	call   *-0x18(%bx,%si)
8010029b:	a9 11 00             	test   $0x11,%ax
8010029e:	00 83 c4 18          	add    %al,0x18c4(%bp,%di)
801002a2:	5b                   	pop    %bx
801002a3:	c3                   	ret    

801002a4 <__jump_handler>:
801002a4:	53                   	push   %bx
801002a5:	83 ec 08             	sub    $0x8,%sp
801002a8:	e8 df 54             	call   8010578a <__text_end_kern+0x2>
801002ab:	00 00                	add    %al,(%bx,%si)
801002ad:	81 c3 13 b0          	add    $0xb013,%bx
801002b1:	00 00                	add    %al,(%bx,%si)
801002b3:	8b 83 20 00          	mov    0x20(%bp,%di),%ax
801002b7:	00 00                	add    %al,(%bx,%si)
801002b9:	8b 93 24 00          	mov    0x24(%bp,%di),%dx
801002bd:	00 00                	add    %al,(%bx,%si)
801002bf:	8b 8b 28 00          	mov    0x28(%bp,%di),%cx
801002c3:	00 00                	add    %al,(%bx,%si)
801002c5:	89 8b a8 dd          	mov    %cx,-0x2258(%bp,%di)
801002c9:	ff                   	(bad)  
801002ca:	ff 89 83 ac          	decw   -0x537d(%bx,%di)
801002ce:	dd ff                	(bad)  
801002d0:	ff 89 93 b0          	decw   -0x4f6d(%bx,%di)
801002d4:	dd ff                	(bad)  
801002d6:	ff                   	(bad)  
801002d7:	e8 58 11             	call   80101432 <kputchar+0x1e>
801002da:	00 00                	add    %al,(%bx,%si)
801002dc:	83 ec 08             	sub    $0x8,%sp
801002df:	50                   	push   %ax
801002e0:	8d 83 dc 51          	lea    0x51dc(%bp,%di),%ax
801002e4:	ff                   	(bad)  
801002e5:	ff 50 e8             	call   *-0x18(%bx,%si)
801002e8:	b0 10                	mov    $0x10,%al
801002ea:	00 00                	add    %al,(%bx,%si)
801002ec:	83 c4 18             	add    $0x18,%sp
801002ef:	5b                   	pop    %bx
801002f0:	c3                   	ret    
801002f1:	8d 76 00             	lea    0x0(%bp),%si

801002f4 <console_putc>:
801002f4:	55                   	push   %bp
801002f5:	57                   	push   %di
801002f6:	56                   	push   %si
801002f7:	53                   	push   %bx
801002f8:	83 ec 38             	sub    $0x38,%sp
801002fb:	e8 8c 54             	call   8010578a <__text_end_kern+0x2>
801002fe:	00 00                	add    %al,(%bx,%si)
80100300:	81 c3 c0 af          	add    $0xafc0,%bx
80100304:	00 00                	add    %al,(%bx,%si)
80100306:	8d 83 1d ad          	lea    -0x52e3(%bp,%di),%ax
8010030a:	ff                   	(bad)  
8010030b:	ff 50 e8             	call   *-0x18(%bx,%si)
8010030e:	a2 12 00             	mov    %al,0x12
80100311:	00 89 c6 8b          	add    %cl,-0x743a(%bx,%di)
80100315:	58                   	pop    %ax
80100316:	48                   	dec    %ax
80100317:	5a                   	pop    %dx
80100318:	59                   	pop    %cx
80100319:	6a 08                	push   $0x8
8010031b:	53                   	push   %bx
8010031c:	ff 93 b4 00          	call   *0xb4(%bp,%di)
80100320:	00 00                	add    %al,(%bx,%si)
80100322:	89 c7                	mov    %ax,%di
80100324:	5d                   	pop    %bp
80100325:	58                   	pop    %ax
80100326:	6a 08                	push   $0x8
80100328:	53                   	push   %bx
80100329:	ff 93 b8 00          	call   *0xb8(%bp,%di)
8010032d:	00 00                	add    %al,(%bx,%si)
8010032f:	89 44 24             	mov    %ax,0x24(%si)
80100332:	1c 83                	sbb    $0x83,%al
80100334:	c4 10                	les    (%bx,%si),%dx
80100336:	85 ff                	test   %di,%di
80100338:	74 4d                	je     80100387 <console_putc+0x93>
8010033a:	85 c0                	test   %ax,%ax
8010033c:	74 49                	je     80100387 <console_putc+0x93>
8010033e:	8d 6c 24             	lea    0x24(%si),%bp
80100341:	18 66 90             	sbb    %ah,-0x70(%bp)
80100344:	83 ec 08             	sub    $0x8,%sp
80100347:	55                   	push   %bp
80100348:	6a 00                	push   $0x0
8010034a:	6a 05                	push   $0x5
8010034c:	ff 76 50             	pushw  0x50(%bp)
8010034f:	ff 76 4c             	pushw  0x4c(%bp)
80100352:	53                   	push   %bx
80100353:	ff d7                	call   *%di
80100355:	83 c4 20             	add    $0x20,%sp
80100358:	f6 44 24 18          	testb  $0x18,0x24(%si)
8010035c:	20 74 e5             	and    %dh,-0x1b(%si)
8010035f:	50                   	push   %ax
80100360:	0f b6 44 24          	movzbw 0x24(%si),%ax
80100364:	44                   	inc    %sp
80100365:	31 d2                	xor    %dx,%dx
80100367:	52                   	push   %dx
80100368:	50                   	push   %ax
80100369:	6a 00                	push   $0x0
8010036b:	6a 00                	push   $0x0
8010036d:	ff 76 50             	pushw  0x50(%bp)
80100370:	ff 76 4c             	pushw  0x4c(%bp)
80100373:	53                   	push   %bx
80100374:	8b 44 24             	mov    0x24(%si),%ax
80100377:	2c ff                	sub    $0xff,%al
80100379:	d0 83 c4 20          	rolb   0x20c4(%bp,%di)
8010037d:	31 c0                	xor    %ax,%ax
8010037f:	83 c4 2c             	add    $0x2c,%sp
80100382:	5b                   	pop    %bx
80100383:	5e                   	pop    %si
80100384:	5f                   	pop    %di
80100385:	5d                   	pop    %bp
80100386:	c3                   	ret    
80100387:	b8 ff ff             	mov    $0xffff,%ax
8010038a:	ff                   	(bad)  
8010038b:	ff                   	(bad)  
8010038c:	eb f1                	jmp    8010037f <console_putc+0x8b>
8010038e:	66 90                	xchg   %eax,%eax

80100390 <__driver_init>:
80100390:	57                   	push   %di
80100391:	56                   	push   %si
80100392:	53                   	push   %bx
80100393:	e8 f4 53             	call   8010578a <__text_end_kern+0x2>
80100396:	00 00                	add    %al,(%bx,%si)
80100398:	81 c3 28 af          	add    $0xaf28,%bx
8010039c:	00 00                	add    %al,(%bx,%si)
8010039e:	83 ec 0c             	sub    $0xc,%sp
801003a1:	8d 83 2a ad          	lea    -0x52d6(%bp,%di),%ax
801003a5:	ff                   	(bad)  
801003a6:	ff 50 e8             	call   *-0x18(%bx,%si)
801003a9:	07                   	pop    %es
801003aa:	12 00                	adc    (%bx,%si),%al
801003ac:	00 89 c7 58          	add    %cl,0x58c7(%bx,%di)
801003b0:	5a                   	pop    %dx
801003b1:	6a 02                	push   $0x2
801003b3:	68 cc 04             	push   $0x4cc
801003b6:	00 00                	add    %al,(%bx,%si)
801003b8:	e8 8f 2c             	call   8010304a <__simple_free+0x2>
801003bb:	00 00                	add    %al,(%bx,%si)
801003bd:	89 c6                	mov    %ax,%si
801003bf:	89 78 48             	mov    %di,0x48(%bx,%si)
801003c2:	c7 40 4c f8 03       	movw   $0x3f8,0x4c(%bx,%si)
801003c7:	00 00                	add    %al,(%bx,%si)
801003c9:	c7 40 50 00 00       	movw   $0x0,0x50(%bx,%si)
801003ce:	00 00                	add    %al,(%bx,%si)
801003d0:	59                   	pop    %cx
801003d1:	5f                   	pop    %di
801003d2:	8d bb 40 ff          	lea    -0xc0(%bp,%di),%di
801003d6:	ff                   	(bad)  
801003d7:	ff 57 6a             	call   *0x6a(%bx)
801003da:	ff                   	(bad)  
801003db:	e8 44 12             	call   80101622 <do_initcalls+0x2e>
801003de:	00 00                	add    %al,(%bx,%si)
801003e0:	89 3c                	mov    %di,(%si)
801003e2:	24 6a                	and    $0x6a,%al
801003e4:	ff 8d 83 1d          	decw   0x1d83(%di)
801003e8:	ad                   	lods   %ds:(%si),%ax
801003e9:	ff                   	(bad)  
801003ea:	ff 50 6a             	call   *0x6a(%bx,%si)
801003ed:	01 56 e8             	add    %dx,-0x18(%bp)
801003f0:	54                   	push   %sp
801003f1:	12 00                	adc    (%bx,%si),%al
801003f3:	00 83 c4 14          	add    %al,0x14c4(%bp,%di)
801003f7:	56                   	push   %si
801003f8:	e8 77 11             	call   80101572 <set_device_index+0x22>
801003fb:	00 00                	add    %al,(%bx,%si)
801003fd:	e8 32 10             	call   80101432 <kputchar+0x1e>
80100400:	00 00                	add    %al,(%bx,%si)
80100402:	5a                   	pop    %dx
80100403:	59                   	pop    %cx
80100404:	50                   	push   %ax
80100405:	8d 83 34 50          	lea    0x5034(%bp,%di),%ax
80100409:	ff                   	(bad)  
8010040a:	ff 50 e8             	call   *-0x18(%bx,%si)
8010040d:	8b 0f                	mov    (%bx),%cx
8010040f:	00 00                	add    %al,(%bx,%si)
80100411:	83 c4 10             	add    $0x10,%sp
80100414:	31 c0                	xor    %ax,%ax
80100416:	5b                   	pop    %bx
80100417:	5e                   	pop    %si
80100418:	5f                   	pop    %di
80100419:	c3                   	ret    
8010041a:	66 90                	xchg   %eax,%eax

8010041c <driver_getc>:
8010041c:	55                   	push   %bp
8010041d:	57                   	push   %di
8010041e:	56                   	push   %si
8010041f:	53                   	push   %bx
80100420:	83 ec 28             	sub    $0x28,%sp
80100423:	e8 64 53             	call   8010578a <__text_end_kern+0x2>
80100426:	00 00                	add    %al,(%bx,%si)
80100428:	81 c3 98 ae          	add    $0xae98,%bx
8010042c:	00 00                	add    %al,(%bx,%si)
8010042e:	ff 74 24             	pushw  0x24(%si)
80100431:	3c e8                	cmp    $0xe8,%al
80100433:	6d                   	insw   (%dx),%es:(%di)
80100434:	11 00                	adc    %ax,(%bx,%si)
80100436:	00 89 c7 8b          	add    %cl,-0x7439(%bx,%di)
8010043a:	58                   	pop    %ax
8010043b:	48                   	dec    %ax
8010043c:	58                   	pop    %ax
8010043d:	5a                   	pop    %dx
8010043e:	6a 08                	push   $0x8
80100440:	53                   	push   %bx
80100441:	ff 93 b4 00          	call   *0xb4(%bp,%di)
80100445:	00 00                	add    %al,(%bx,%si)
80100447:	83 c4 10             	add    $0x10,%sp
8010044a:	85 c0                	test   %ax,%ax
8010044c:	74 42                	je     80100490 <driver_getc+0x74>
8010044e:	89 c6                	mov    %ax,%si
80100450:	8d 6c 24             	lea    0x24(%si),%bp
80100453:	08 83 ec 08          	or     %al,0x8ec(%bp,%di)
80100457:	55                   	push   %bp
80100458:	6a 00                	push   $0x0
8010045a:	6a 05                	push   $0x5
8010045c:	ff 77 50             	pushw  0x50(%bx)
8010045f:	ff 77 4c             	pushw  0x4c(%bx)
80100462:	53                   	push   %bx
80100463:	ff d6                	call   *%si
80100465:	83 c4 20             	add    $0x20,%sp
80100468:	f6 44 24 08          	testb  $0x8,0x24(%si)
8010046c:	01 74 e5             	add    %si,-0x1b(%si)
8010046f:	83 ec 08             	sub    $0x8,%sp
80100472:	55                   	push   %bp
80100473:	6a 00                	push   $0x0
80100475:	6a 00                	push   $0x0
80100477:	ff 77 50             	pushw  0x50(%bx)
8010047a:	ff 77 4c             	pushw  0x4c(%bx)
8010047d:	53                   	push   %bx
8010047e:	ff d6                	call   *%si
80100480:	0f b6 44 24          	movzbw 0x24(%si),%ax
80100484:	28 83 c4 20          	sub    %al,0x20c4(%bp,%di)
80100488:	83 c4 1c             	add    $0x1c,%sp
8010048b:	5b                   	pop    %bx
8010048c:	5e                   	pop    %si
8010048d:	5f                   	pop    %di
8010048e:	5d                   	pop    %bp
8010048f:	c3                   	ret    
80100490:	31 c0                	xor    %ax,%ax
80100492:	83 c4 1c             	add    $0x1c,%sp
80100495:	5b                   	pop    %bx
80100496:	5e                   	pop    %si
80100497:	5f                   	pop    %di
80100498:	5d                   	pop    %bp
80100499:	c3                   	ret    
8010049a:	66 90                	xchg   %eax,%eax

8010049c <early_console_putchar>:
8010049c:	55                   	push   %bp
8010049d:	57                   	push   %di
8010049e:	56                   	push   %si
8010049f:	53                   	push   %bx
801004a0:	83 ec 34             	sub    $0x34,%sp
801004a3:	e8 e8 52             	call   8010578e <__x86.get_pc_thunk.bx+0x2>
801004a6:	00 00                	add    %al,(%bx,%si)
801004a8:	81 c6 18 ae          	add    $0xae18,%si
801004ac:	00 00                	add    %al,(%bx,%si)
801004ae:	8b 9e a8 dd          	mov    -0x2258(%bp),%bx
801004b2:	ff                   	(bad)  
801004b3:	ff 6a 08             	ljmp   *0x8(%bp,%si)
801004b6:	53                   	push   %bx
801004b7:	ff 93 b4 00          	call   *0xb4(%bp,%di)
801004bb:	00 00                	add    %al,(%bx,%si)
801004bd:	89 c7                	mov    %ax,%di
801004bf:	5a                   	pop    %dx
801004c0:	59                   	pop    %cx
801004c1:	6a 08                	push   $0x8
801004c3:	53                   	push   %bx
801004c4:	ff 93 b8 00          	call   *0xb8(%bp,%di)
801004c8:	00 00                	add    %al,(%bx,%si)
801004ca:	89 44 24             	mov    %ax,0x24(%si)
801004cd:	1c 83                	sbb    $0x83,%al
801004cf:	c4 10                	les    (%bx,%si),%dx
801004d1:	85 ff                	test   %di,%di
801004d3:	74 53                	je     80100528 <early_console_putchar+0x8c>
801004d5:	85 c0                	test   %ax,%ax
801004d7:	74 4f                	je     80100528 <early_console_putchar+0x8c>
801004d9:	8d 44 24             	lea    0x24(%si),%ax
801004dc:	18 89 44 24          	sbb    %cl,0x2444(%bx,%di)
801004e0:	08 8d 2d 60          	or     %cl,0x602d(%di)
801004e4:	dd ff                	(bad)  
801004e6:	ff 90 83 ec          	call   *-0x137d(%bx,%si)
801004ea:	08 ff                	or     %bh,%bh
801004ec:	74 24                	je     80100512 <early_console_putchar+0x76>
801004ee:	10 6a 00             	adc    %ch,0x0(%bp,%si)
801004f1:	6a 05                	push   $0x5
801004f3:	ff 74 35             	pushw  0x35(%si)
801004f6:	50                   	push   %ax
801004f7:	ff 74 35             	pushw  0x35(%si)
801004fa:	4c                   	dec    %sp
801004fb:	53                   	push   %bx
801004fc:	ff d7                	call   *%di
801004fe:	83 c4 20             	add    $0x20,%sp
80100501:	f6 44 24 18          	testb  $0x18,0x24(%si)
80100505:	20 74 e0             	and    %dh,-0x20(%si)
80100508:	50                   	push   %ax
80100509:	0f b6 44 24          	movzbw 0x24(%si),%ax
8010050d:	44                   	inc    %sp
8010050e:	31 d2                	xor    %dx,%dx
80100510:	52                   	push   %dx
80100511:	50                   	push   %ax
80100512:	6a 00                	push   $0x0
80100514:	6a 00                	push   $0x0
80100516:	ff 74 35             	pushw  0x35(%si)
80100519:	50                   	push   %ax
8010051a:	ff 74 35             	pushw  0x35(%si)
8010051d:	4c                   	dec    %sp
8010051e:	53                   	push   %bx
8010051f:	8b 44 24             	mov    0x24(%si),%ax
80100522:	2c ff                	sub    $0xff,%al
80100524:	d0 83 c4 20          	rolb   0x20c4(%bp,%di)
80100528:	31 c0                	xor    %ax,%ax
8010052a:	83 c4 2c             	add    $0x2c,%sp
8010052d:	5b                   	pop    %bx
8010052e:	5e                   	pop    %si
8010052f:	5f                   	pop    %di
80100530:	5d                   	pop    %bp
80100531:	c3                   	ret    
80100532:	66 90                	xchg   %eax,%eax

80100534 <driver_putc>:
80100534:	55                   	push   %bp
80100535:	57                   	push   %di
80100536:	56                   	push   %si
80100537:	53                   	push   %bx
80100538:	83 ec 38             	sub    $0x38,%sp
8010053b:	e8 4c 52             	call   8010578a <__text_end_kern+0x2>
8010053e:	00 00                	add    %al,(%bx,%si)
80100540:	81 c3 80 ad          	add    $0xad80,%bx
80100544:	00 00                	add    %al,(%bx,%si)
80100546:	ff 74 24             	pushw  0x24(%si)
80100549:	4c                   	dec    %sp
8010054a:	e8 55 10             	call   801015a2 <dev_next+0xe>
8010054d:	00 00                	add    %al,(%bx,%si)
8010054f:	89 c6                	mov    %ax,%si
80100551:	8b 58 48             	mov    0x48(%bx,%si),%bx
80100554:	5a                   	pop    %dx
80100555:	59                   	pop    %cx
80100556:	6a 08                	push   $0x8
80100558:	53                   	push   %bx
80100559:	ff 93 b4 00          	call   *0xb4(%bp,%di)
8010055d:	00 00                	add    %al,(%bx,%si)
8010055f:	89 c7                	mov    %ax,%di
80100561:	5d                   	pop    %bp
80100562:	58                   	pop    %ax
80100563:	6a 08                	push   $0x8
80100565:	53                   	push   %bx
80100566:	ff 93 b8 00          	call   *0xb8(%bp,%di)
8010056a:	00 00                	add    %al,(%bx,%si)
8010056c:	89 44 24             	mov    %ax,0x24(%si)
8010056f:	1c 83                	sbb    $0x83,%al
80100571:	c4 10                	les    (%bx,%si),%dx
80100573:	85 ff                	test   %di,%di
80100575:	74 4c                	je     801005c3 <driver_putc+0x8f>
80100577:	85 c0                	test   %ax,%ax
80100579:	74 48                	je     801005c3 <driver_putc+0x8f>
8010057b:	8d 6c 24             	lea    0x24(%si),%bp
8010057e:	18 90 83 ec          	sbb    %dl,-0x137d(%bx,%si)
80100582:	08 55 6a             	or     %dl,0x6a(%di)
80100585:	00 6a 05             	add    %ch,0x5(%bp,%si)
80100588:	ff 76 50             	pushw  0x50(%bp)
8010058b:	ff 76 4c             	pushw  0x4c(%bp)
8010058e:	53                   	push   %bx
8010058f:	ff d7                	call   *%di
80100591:	83 c4 20             	add    $0x20,%sp
80100594:	f6 44 24 18          	testb  $0x18,0x24(%si)
80100598:	20 74 e5             	and    %dh,-0x1b(%si)
8010059b:	50                   	push   %ax
8010059c:	0f b6 44 24          	movzbw 0x24(%si),%ax
801005a0:	48                   	dec    %ax
801005a1:	31 d2                	xor    %dx,%dx
801005a3:	52                   	push   %dx
801005a4:	50                   	push   %ax
801005a5:	6a 00                	push   $0x0
801005a7:	6a 00                	push   $0x0
801005a9:	ff 76 50             	pushw  0x50(%bp)
801005ac:	ff 76 4c             	pushw  0x4c(%bp)
801005af:	53                   	push   %bx
801005b0:	8b 44 24             	mov    0x24(%si),%ax
801005b3:	2c ff                	sub    $0xff,%al
801005b5:	d0 83 c4 20          	rolb   0x20c4(%bp,%di)
801005b9:	31 c0                	xor    %ax,%ax
801005bb:	83 c4 2c             	add    $0x2c,%sp
801005be:	5b                   	pop    %bx
801005bf:	5e                   	pop    %si
801005c0:	5f                   	pop    %di
801005c1:	5d                   	pop    %bp
801005c2:	c3                   	ret    
801005c3:	b8 ff ff             	mov    $0xffff,%ax
801005c6:	ff                   	(bad)  
801005c7:	ff                   	(bad)  
801005c8:	eb f1                	jmp    801005bb <driver_putc+0x87>
801005ca:	66 90                	xchg   %eax,%eax

801005cc <__early_console_init>:
801005cc:	55                   	push   %bp
801005cd:	57                   	push   %di
801005ce:	56                   	push   %si
801005cf:	53                   	push   %bx
801005d0:	83 ec 0c             	sub    $0xc,%sp
801005d3:	e8 b4 51             	call   8010578a <__text_end_kern+0x2>
801005d6:	00 00                	add    %al,(%bx,%si)
801005d8:	81 c3 e8 ac          	add    $0xace8,%bx
801005dc:	00 00                	add    %al,(%bx,%si)
801005de:	8b 74 24             	mov    0x24(%si),%si
801005e1:	20 8b 44 24          	and    %cl,0x2444(%bp,%di)
801005e5:	2c 8b                	sub    $0x8b,%al
801005e7:	54                   	push   %sp
801005e8:	24 30                	and    $0x30,%al
801005ea:	89 b3 a8 dd          	mov    %si,-0x2258(%bp,%di)
801005ee:	ff                   	(bad)  
801005ef:	ff 8b 7c 24          	decw   0x247c(%bp,%di)
801005f3:	24 8b                	and    $0x8b,%al
801005f5:	6c                   	insb   (%dx),%es:(%di)
801005f6:	24 28                	and    $0x28,%al
801005f8:	89 bb ac dd          	mov    %di,-0x2254(%bp,%di)
801005fc:	ff                   	(bad)  
801005fd:	ff 89 ab b0          	decw   -0x4f55(%bx,%di)
80100601:	dd ff                	(bad)  
80100603:	ff 85 f6 0f          	incw   0xff6(%di)
80100607:	88 28                	mov    %ch,(%bx,%si)
80100609:	01 00                	add    %ax,(%bx,%si)
8010060b:	00 8d 8e 00          	add    %cl,0x8e(%di)
8010060f:	00 00                	add    %al,(%bx,%si)
80100611:	80 89 8b 28 00       	orb    $0x0,0x288b(%bx,%di)
80100616:	00 00                	add    %al,(%bx,%si)
80100618:	89 83 20 00          	mov    %ax,0x20(%bp,%di)
8010061c:	00 00                	add    %al,(%bx,%si)
8010061e:	89 93 24 00          	mov    %dx,0x24(%bp,%di)
80100622:	00 00                	add    %al,(%bx,%si)
80100624:	83 ec 08             	sub    $0x8,%sp
80100627:	6a 08                	push   $0x8
80100629:	56                   	push   %si
8010062a:	ff 96 b8 00          	call   *0xb8(%bp)
8010062e:	00 00                	add    %al,(%bx,%si)
80100630:	89 c7                	mov    %ax,%di
80100632:	83 c4 10             	add    $0x10,%sp
80100635:	85 c0                	test   %ax,%ax
80100637:	0f 84 86 00          	je     801006c1 <__early_console_init+0xf5>
8010063b:	00 00                	add    %al,(%bx,%si)
8010063d:	51                   	push   %cx
8010063e:	6a 00                	push   $0x0
80100640:	6a 47                	push   $0x47
80100642:	6a 00                	push   $0x0
80100644:	6a 02                	push   $0x2
80100646:	ff b3 b0 dd          	pushw  -0x2250(%bp,%di)
8010064a:	ff                   	(bad)  
8010064b:	ff                   	(bad)  
8010064c:	ff b3 ac dd          	pushw  -0x2254(%bp,%di)
80100650:	ff                   	(bad)  
80100651:	ff 56 ff             	call   *-0x1(%bp)
80100654:	d7                   	xlat   %ds:(%bx)
80100655:	83 c4 1c             	add    $0x1c,%sp
80100658:	6a 00                	push   $0x0
8010065a:	68 80 00             	push   $0x80
8010065d:	00 00                	add    %al,(%bx,%si)
8010065f:	6a 00                	push   $0x0
80100661:	6a 03                	push   $0x3
80100663:	ff b3 b0 dd          	pushw  -0x2250(%bp,%di)
80100667:	ff                   	(bad)  
80100668:	ff                   	(bad)  
80100669:	ff b3 ac dd          	pushw  -0x2254(%bp,%di)
8010066d:	ff                   	(bad)  
8010066e:	ff 56 ff             	call   *-0x1(%bp)
80100671:	d7                   	xlat   %ds:(%bx)
80100672:	83 c4 1c             	add    $0x1c,%sp
80100675:	6a 00                	push   $0x0
80100677:	6a 10                	push   $0x10
80100679:	6a 00                	push   $0x0
8010067b:	6a 00                	push   $0x0
8010067d:	ff b3 b0 dd          	pushw  -0x2250(%bp,%di)
80100681:	ff                   	(bad)  
80100682:	ff                   	(bad)  
80100683:	ff b3 ac dd          	pushw  -0x2254(%bp,%di)
80100687:	ff                   	(bad)  
80100688:	ff 56 ff             	call   *-0x1(%bp)
8010068b:	d7                   	xlat   %ds:(%bx)
8010068c:	83 c4 1c             	add    $0x1c,%sp
8010068f:	6a 00                	push   $0x0
80100691:	6a 00                	push   $0x0
80100693:	6a 00                	push   $0x0
80100695:	6a 01                	push   $0x1
80100697:	ff b3 b0 dd          	pushw  -0x2250(%bp,%di)
8010069b:	ff                   	(bad)  
8010069c:	ff                   	(bad)  
8010069d:	ff b3 ac dd          	pushw  -0x2254(%bp,%di)
801006a1:	ff                   	(bad)  
801006a2:	ff 56 ff             	call   *-0x1(%bp)
801006a5:	d7                   	xlat   %ds:(%bx)
801006a6:	83 c4 1c             	add    $0x1c,%sp
801006a9:	6a 00                	push   $0x0
801006ab:	6a 03                	push   $0x3
801006ad:	6a 00                	push   $0x0
801006af:	6a 03                	push   $0x3
801006b1:	ff b3 b0 dd          	pushw  -0x2250(%bp,%di)
801006b5:	ff                   	(bad)  
801006b6:	ff                   	(bad)  
801006b7:	ff b3 ac dd          	pushw  -0x2254(%bp,%di)
801006bb:	ff                   	(bad)  
801006bc:	ff 56 ff             	call   *-0x1(%bp)
801006bf:	d7                   	xlat   %ds:(%bx)
801006c0:	83 c4 20             	add    $0x20,%sp
801006c3:	8b b3 a8 dd          	mov    -0x2258(%bp,%di),%si
801006c7:	ff                   	(bad)  
801006c8:	ff 83 ec 08          	incw   0x8ec(%bp,%di)
801006cc:	6a 08                	push   $0x8
801006ce:	56                   	push   %si
801006cf:	ff 96 b8 00          	call   *0xb8(%bp)
801006d3:	00 00                	add    %al,(%bx,%si)
801006d5:	83 c4 10             	add    $0x10,%sp
801006d8:	85 c0                	test   %ax,%ax
801006da:	74 1b                	je     801006f7 <__early_console_init+0x12b>
801006dc:	52                   	push   %dx
801006dd:	6a 00                	push   $0x0
801006df:	6a 03                	push   $0x3
801006e1:	6a 00                	push   $0x0
801006e3:	6a 04                	push   $0x4
801006e5:	ff b3 b0 dd          	pushw  -0x2250(%bp,%di)
801006e9:	ff                   	(bad)  
801006ea:	ff                   	(bad)  
801006eb:	ff b3 ac dd          	pushw  -0x2254(%bp,%di)
801006ef:	ff                   	(bad)  
801006f0:	ff 56 ff             	call   *-0x1(%bp)
801006f3:	d0 83 c4 20          	rolb   0x20c4(%bp,%di)
801006f7:	e8 38 0d             	call   80101432 <kputchar+0x1e>
801006fa:	00 00                	add    %al,(%bx,%si)
801006fc:	85 c0                	test   %ax,%ax
801006fe:	78 3c                	js     8010073c <__early_console_init+0x170>
80100700:	83 ec 08             	sub    $0x8,%sp
80100703:	50                   	push   %ax
80100704:	8d 83 dc 51          	lea    0x51dc(%bp,%di),%ax
80100708:	ff                   	(bad)  
80100709:	ff 50 e8             	call   *-0x18(%bx,%si)
8010070c:	8c 0c                	mov    %cs,(%si)
8010070e:	00 00                	add    %al,(%bx,%si)
80100710:	8d 83 e4 4f          	lea    0x4fe4(%bp,%di),%ax
80100714:	ff                   	(bad)  
80100715:	ff 89 04 24          	decw   0x2404(%bx,%di)
80100719:	e8 aa 16             	call   80101dc6 <jump_handlers_clear+0x16>
8010071c:	00 00                	add    %al,(%bx,%si)
8010071e:	83 c4 10             	add    $0x10,%sp
80100721:	85 c0                	test   %ax,%ax
80100723:	74 03                	je     80100728 <__early_console_init+0x15c>
80100725:	eb fe                	jmp    80100725 <__early_console_init+0x159>
80100727:	90                   	nop
80100728:	31 c0                	xor    %ax,%ax
8010072a:	83 c4 0c             	add    $0xc,%sp
8010072d:	5b                   	pop    %bx
8010072e:	5e                   	pop    %si
8010072f:	5f                   	pop    %di
80100730:	5d                   	pop    %bp
80100731:	c3                   	ret    
80100732:	66 90                	xchg   %eax,%eax
80100734:	89 f1                	mov    %si,%cx
80100736:	e9 d7 fe             	jmp    80100610 <__early_console_init+0x44>
80100739:	ff                   	(bad)  
8010073a:	ff 90 05 00          	call   *0x5(%bx,%si)
8010073e:	00 00                	add    %al,(%bx,%si)
80100740:	80 eb bd             	sub    $0xbd,%bl
80100743:	90                   	nop

80100744 <__console_init>:
80100744:	55                   	push   %bp
80100745:	57                   	push   %di
80100746:	56                   	push   %si
80100747:	53                   	push   %bx
80100748:	83 ec 0c             	sub    $0xc,%sp
8010074b:	e8 3c 50             	call   8010578a <__text_end_kern+0x2>
8010074e:	00 00                	add    %al,(%bx,%si)
80100750:	81 c3 70 ab          	add    $0xab70,%bx
80100754:	00 00                	add    %al,(%bx,%si)
80100756:	8b 74 24             	mov    0x24(%si),%si
80100759:	20 8b 44 24          	and    %cl,0x2444(%bp,%di)
8010075d:	2c 8b                	sub    $0x8b,%al
8010075f:	54                   	push   %sp
80100760:	24 30                	and    $0x30,%al
80100762:	89 b3 a8 dd          	mov    %si,-0x2258(%bp,%di)
80100766:	ff                   	(bad)  
80100767:	ff 8b 7c 24          	decw   0x247c(%bp,%di)
8010076b:	24 8b                	and    $0x8b,%al
8010076d:	6c                   	insb   (%dx),%es:(%di)
8010076e:	24 28                	and    $0x28,%al
80100770:	89 bb ac dd          	mov    %di,-0x2254(%bp,%di)
80100774:	ff                   	(bad)  
80100775:	ff 89 ab b0          	decw   -0x4f55(%bx,%di)
80100779:	dd ff                	(bad)  
8010077b:	ff 85 f6 0f          	incw   0xff6(%di)
8010077f:	88 24                	mov    %ah,(%si)
80100781:	01 00                	add    %ax,(%bx,%si)
80100783:	00 8d 8e 00          	add    %cl,0x8e(%di)
80100787:	00 00                	add    %al,(%bx,%si)
80100789:	80 89 8b 28 00       	orb    $0x0,0x288b(%bx,%di)
8010078e:	00 00                	add    %al,(%bx,%si)
80100790:	89 83 20 00          	mov    %ax,0x20(%bp,%di)
80100794:	00 00                	add    %al,(%bx,%si)
80100796:	89 93 24 00          	mov    %dx,0x24(%bp,%di)
8010079a:	00 00                	add    %al,(%bx,%si)
8010079c:	83 ec 08             	sub    $0x8,%sp
8010079f:	6a 08                	push   $0x8
801007a1:	56                   	push   %si
801007a2:	ff 96 b8 00          	call   *0xb8(%bp)
801007a6:	00 00                	add    %al,(%bx,%si)
801007a8:	89 c7                	mov    %ax,%di
801007aa:	83 c4 10             	add    $0x10,%sp
801007ad:	85 c0                	test   %ax,%ax
801007af:	0f 84 86 00          	je     80100839 <__console_init+0xf5>
801007b3:	00 00                	add    %al,(%bx,%si)
801007b5:	51                   	push   %cx
801007b6:	6a 00                	push   $0x0
801007b8:	6a 47                	push   $0x47
801007ba:	6a 00                	push   $0x0
801007bc:	6a 02                	push   $0x2
801007be:	ff b3 b0 dd          	pushw  -0x2250(%bp,%di)
801007c2:	ff                   	(bad)  
801007c3:	ff                   	(bad)  
801007c4:	ff b3 ac dd          	pushw  -0x2254(%bp,%di)
801007c8:	ff                   	(bad)  
801007c9:	ff 56 ff             	call   *-0x1(%bp)
801007cc:	d7                   	xlat   %ds:(%bx)
801007cd:	83 c4 1c             	add    $0x1c,%sp
801007d0:	6a 00                	push   $0x0
801007d2:	68 80 00             	push   $0x80
801007d5:	00 00                	add    %al,(%bx,%si)
801007d7:	6a 00                	push   $0x0
801007d9:	6a 03                	push   $0x3
801007db:	ff b3 b0 dd          	pushw  -0x2250(%bp,%di)
801007df:	ff                   	(bad)  
801007e0:	ff                   	(bad)  
801007e1:	ff b3 ac dd          	pushw  -0x2254(%bp,%di)
801007e5:	ff                   	(bad)  
801007e6:	ff 56 ff             	call   *-0x1(%bp)
801007e9:	d7                   	xlat   %ds:(%bx)
801007ea:	83 c4 1c             	add    $0x1c,%sp
801007ed:	6a 00                	push   $0x0
801007ef:	6a 10                	push   $0x10
801007f1:	6a 00                	push   $0x0
801007f3:	6a 00                	push   $0x0
801007f5:	ff b3 b0 dd          	pushw  -0x2250(%bp,%di)
801007f9:	ff                   	(bad)  
801007fa:	ff                   	(bad)  
801007fb:	ff b3 ac dd          	pushw  -0x2254(%bp,%di)
801007ff:	ff                   	(bad)  
80100800:	ff 56 ff             	call   *-0x1(%bp)
80100803:	d7                   	xlat   %ds:(%bx)
80100804:	83 c4 1c             	add    $0x1c,%sp
80100807:	6a 00                	push   $0x0
80100809:	6a 00                	push   $0x0
8010080b:	6a 00                	push   $0x0
8010080d:	6a 01                	push   $0x1
8010080f:	ff b3 b0 dd          	pushw  -0x2250(%bp,%di)
80100813:	ff                   	(bad)  
80100814:	ff                   	(bad)  
80100815:	ff b3 ac dd          	pushw  -0x2254(%bp,%di)
80100819:	ff                   	(bad)  
8010081a:	ff 56 ff             	call   *-0x1(%bp)
8010081d:	d7                   	xlat   %ds:(%bx)
8010081e:	83 c4 1c             	add    $0x1c,%sp
80100821:	6a 00                	push   $0x0
80100823:	6a 03                	push   $0x3
80100825:	6a 00                	push   $0x0
80100827:	6a 03                	push   $0x3
80100829:	ff b3 b0 dd          	pushw  -0x2250(%bp,%di)
8010082d:	ff                   	(bad)  
8010082e:	ff                   	(bad)  
8010082f:	ff b3 ac dd          	pushw  -0x2254(%bp,%di)
80100833:	ff                   	(bad)  
80100834:	ff 56 ff             	call   *-0x1(%bp)
80100837:	d7                   	xlat   %ds:(%bx)
80100838:	83 c4 20             	add    $0x20,%sp
8010083b:	8b b3 a8 dd          	mov    -0x2258(%bp,%di),%si
8010083f:	ff                   	(bad)  
80100840:	ff 83 ec 08          	incw   0x8ec(%bp,%di)
80100844:	6a 08                	push   $0x8
80100846:	56                   	push   %si
80100847:	ff 96 b8 00          	call   *0xb8(%bp)
8010084b:	00 00                	add    %al,(%bx,%si)
8010084d:	83 c4 10             	add    $0x10,%sp
80100850:	85 c0                	test   %ax,%ax
80100852:	74 1b                	je     8010086f <__console_init+0x12b>
80100854:	52                   	push   %dx
80100855:	6a 00                	push   $0x0
80100857:	6a 03                	push   $0x3
80100859:	6a 00                	push   $0x0
8010085b:	6a 04                	push   $0x4
8010085d:	ff b3 b0 dd          	pushw  -0x2250(%bp,%di)
80100861:	ff                   	(bad)  
80100862:	ff                   	(bad)  
80100863:	ff b3 ac dd          	pushw  -0x2254(%bp,%di)
80100867:	ff                   	(bad)  
80100868:	ff 56 ff             	call   *-0x1(%bp)
8010086b:	d0 83 c4 20          	rolb   0x20c4(%bp,%di)
8010086f:	e8 c0 0b             	call   80101432 <kputchar+0x1e>
80100872:	00 00                	add    %al,(%bx,%si)
80100874:	83 ec 08             	sub    $0x8,%sp
80100877:	50                   	push   %ax
80100878:	8d 83 dc 51          	lea    0x51dc(%bp,%di),%ax
8010087c:	ff                   	(bad)  
8010087d:	ff 50 e8             	call   *-0x18(%bx,%si)
80100880:	18 0b                	sbb    %cl,(%bp,%di)
80100882:	00 00                	add    %al,(%bx,%si)
80100884:	8d 83 e4 4f          	lea    0x4fe4(%bp,%di),%ax
80100888:	ff                   	(bad)  
80100889:	ff 89 04 24          	decw   0x2404(%bx,%di)
8010088d:	e8 36 15             	call   80101dc6 <jump_handlers_clear+0x16>
80100890:	00 00                	add    %al,(%bx,%si)
80100892:	83 c4 10             	add    $0x10,%sp
80100895:	85 c0                	test   %ax,%ax
80100897:	74 03                	je     8010089c <__console_init+0x158>
80100899:	eb fe                	jmp    80100899 <__console_init+0x155>
8010089b:	90                   	nop
8010089c:	31 c0                	xor    %ax,%ax
8010089e:	83 c4 0c             	add    $0xc,%sp
801008a1:	5b                   	pop    %bx
801008a2:	5e                   	pop    %si
801008a3:	5f                   	pop    %di
801008a4:	5d                   	pop    %bp
801008a5:	c3                   	ret    
801008a6:	66 90                	xchg   %eax,%eax
801008a8:	89 f1                	mov    %si,%cx
801008aa:	e9 db fe             	jmp    80100788 <__console_init+0x44>
801008ad:	ff                   	(bad)  
801008ae:	ff                   	.byte 0xff

801008af <master_early_entry>:
801008af:	fa                   	cli    
801008b0:	fc                   	cld    
801008b1:	bc 00 70             	mov    $0x7000,%sp
801008b4:	11 00                	adc    %ax,(%bx,%si)
801008b6:	31 c0                	xor    %ax,%ax
801008b8:	50                   	push   %ax
801008b9:	50                   	push   %ax
801008ba:	89 e5                	mov    %sp,%bp
801008bc:	e8 73 2a             	call   80103332 <panic+0x66>
801008bf:	00 00                	add    %al,(%bx,%si)
801008c1:	e8 82 0e             	call   80101746 <get_mem_config+0x7a>
801008c4:	00 00                	add    %al,(%bx,%si)
801008c6:	5d                   	pop    %bp
801008c7:	c3                   	ret    

801008c8 <alltraps>:
801008c8:	1e                   	push   %ds
801008c9:	06                   	push   %es
801008ca:	0f a0                	push   %fs
801008cc:	0f a8                	push   %gs
801008ce:	60                   	pusha  
801008cf:	66 b8 10 00 8e d8    	mov    $0xd88e0010,%eax
801008d5:	8e c0                	mov    %ax,%es
801008d7:	66 b8 18 00 8e e0    	mov    $0xe08e0018,%eax
801008dd:	8e e8                	mov    %ax,%gs
801008df:	54                   	push   %sp
801008e0:	e8 af 31             	call   80103a92 <idt_init+0x8e>
801008e3:	00 00                	add    %al,(%bx,%si)
801008e5:	83 c4 04             	add    $0x4,%sp

801008e8 <trap_return>:
801008e8:	61                   	popa   
801008e9:	0f a9                	pop    %gs
801008eb:	0f a1                	pop    %fs
801008ed:	07                   	pop    %es
801008ee:	1f                   	pop    %ds
801008ef:	83 c4 08             	add    $0x8,%sp
801008f2:	cf                   	iret   

801008f3 <vector0>:
801008f3:	6a 00                	push   $0x0
801008f5:	6a 00                	push   $0x0
801008f7:	eb cf                	jmp    801008c8 <alltraps>

801008f9 <vector1>:
801008f9:	6a 00                	push   $0x0
801008fb:	6a 01                	push   $0x1
801008fd:	eb c9                	jmp    801008c8 <alltraps>

801008ff <vector2>:
801008ff:	6a 00                	push   $0x0
80100901:	6a 02                	push   $0x2
80100903:	eb c3                	jmp    801008c8 <alltraps>

80100905 <vector3>:
80100905:	6a 00                	push   $0x0
80100907:	6a 03                	push   $0x3
80100909:	eb bd                	jmp    801008c8 <alltraps>

8010090b <vector4>:
8010090b:	6a 00                	push   $0x0
8010090d:	6a 04                	push   $0x4
8010090f:	eb b7                	jmp    801008c8 <alltraps>

80100911 <vector5>:
80100911:	6a 00                	push   $0x0
80100913:	6a 05                	push   $0x5
80100915:	eb b1                	jmp    801008c8 <alltraps>

80100917 <vector6>:
80100917:	6a 00                	push   $0x0
80100919:	6a 06                	push   $0x6
8010091b:	eb ab                	jmp    801008c8 <alltraps>

8010091d <vector7>:
8010091d:	6a 00                	push   $0x0
8010091f:	6a 07                	push   $0x7
80100921:	eb a5                	jmp    801008c8 <alltraps>

80100923 <vector8>:
80100923:	6a 08                	push   $0x8
80100925:	eb a1                	jmp    801008c8 <alltraps>

80100927 <vector9>:
80100927:	6a 00                	push   $0x0
80100929:	6a 09                	push   $0x9
8010092b:	eb 9b                	jmp    801008c8 <alltraps>

8010092d <vector10>:
8010092d:	6a 0a                	push   $0xa
8010092f:	eb 97                	jmp    801008c8 <alltraps>

80100931 <vector11>:
80100931:	6a 0b                	push   $0xb
80100933:	eb 93                	jmp    801008c8 <alltraps>

80100935 <vector12>:
80100935:	6a 0c                	push   $0xc
80100937:	eb 8f                	jmp    801008c8 <alltraps>

80100939 <vector13>:
80100939:	6a 0d                	push   $0xd
8010093b:	eb 8b                	jmp    801008c8 <alltraps>

8010093d <vector14>:
8010093d:	6a 0e                	push   $0xe
8010093f:	eb 87                	jmp    801008c8 <alltraps>

80100941 <vector15>:
80100941:	6a 00                	push   $0x0
80100943:	6a 0f                	push   $0xf
80100945:	eb 81                	jmp    801008c8 <alltraps>

80100947 <vector16>:
80100947:	6a 00                	push   $0x0
80100949:	6a 10                	push   $0x10
8010094b:	e9 78 ff             	jmp    801008c6 <master_early_entry+0x17>
8010094e:	ff                   	(bad)  
8010094f:	ff                   	.byte 0xff

80100950 <vector17>:
80100950:	6a 11                	push   $0x11
80100952:	e9 71 ff             	jmp    801008c6 <master_early_entry+0x17>
80100955:	ff                   	(bad)  
80100956:	ff                   	.byte 0xff

80100957 <vector18>:
80100957:	6a 00                	push   $0x0
80100959:	6a 12                	push   $0x12
8010095b:	e9 68 ff             	jmp    801008c6 <master_early_entry+0x17>
8010095e:	ff                   	(bad)  
8010095f:	ff                   	.byte 0xff

80100960 <vector19>:
80100960:	6a 00                	push   $0x0
80100962:	6a 13                	push   $0x13
80100964:	e9 5f ff             	jmp    801008c6 <master_early_entry+0x17>
80100967:	ff                   	(bad)  
80100968:	ff                   	.byte 0xff

80100969 <vector20>:
80100969:	6a 00                	push   $0x0
8010096b:	6a 14                	push   $0x14
8010096d:	e9 56 ff             	jmp    801008c6 <master_early_entry+0x17>
80100970:	ff                   	(bad)  
80100971:	ff                   	.byte 0xff

80100972 <vector21>:
80100972:	6a 00                	push   $0x0
80100974:	6a 15                	push   $0x15
80100976:	e9 4d ff             	jmp    801008c6 <master_early_entry+0x17>
80100979:	ff                   	(bad)  
8010097a:	ff                   	.byte 0xff

8010097b <vector22>:
8010097b:	6a 00                	push   $0x0
8010097d:	6a 16                	push   $0x16
8010097f:	e9 44 ff             	jmp    801008c6 <master_early_entry+0x17>
80100982:	ff                   	(bad)  
80100983:	ff                   	.byte 0xff

80100984 <vector23>:
80100984:	6a 00                	push   $0x0
80100986:	6a 17                	push   $0x17
80100988:	e9 3b ff             	jmp    801008c6 <master_early_entry+0x17>
8010098b:	ff                   	(bad)  
8010098c:	ff                   	.byte 0xff

8010098d <vector24>:
8010098d:	6a 00                	push   $0x0
8010098f:	6a 18                	push   $0x18
80100991:	e9 32 ff             	jmp    801008c6 <master_early_entry+0x17>
80100994:	ff                   	(bad)  
80100995:	ff                   	.byte 0xff

80100996 <vector25>:
80100996:	6a 00                	push   $0x0
80100998:	6a 19                	push   $0x19
8010099a:	e9 29 ff             	jmp    801008c6 <master_early_entry+0x17>
8010099d:	ff                   	(bad)  
8010099e:	ff                   	.byte 0xff

8010099f <vector26>:
8010099f:	6a 00                	push   $0x0
801009a1:	6a 1a                	push   $0x1a
801009a3:	e9 20 ff             	jmp    801008c6 <master_early_entry+0x17>
801009a6:	ff                   	(bad)  
801009a7:	ff                   	.byte 0xff

801009a8 <vector27>:
801009a8:	6a 00                	push   $0x0
801009aa:	6a 1b                	push   $0x1b
801009ac:	e9 17 ff             	jmp    801008c6 <master_early_entry+0x17>
801009af:	ff                   	(bad)  
801009b0:	ff                   	.byte 0xff

801009b1 <vector28>:
801009b1:	6a 00                	push   $0x0
801009b3:	6a 1c                	push   $0x1c
801009b5:	e9 0e ff             	jmp    801008c6 <master_early_entry+0x17>
801009b8:	ff                   	(bad)  
801009b9:	ff                   	.byte 0xff

801009ba <vector29>:
801009ba:	6a 00                	push   $0x0
801009bc:	6a 1d                	push   $0x1d
801009be:	e9 05 ff             	jmp    801008c6 <master_early_entry+0x17>
801009c1:	ff                   	(bad)  
801009c2:	ff                   	.byte 0xff

801009c3 <vector30>:
801009c3:	6a 00                	push   $0x0
801009c5:	6a 1e                	push   $0x1e
801009c7:	e9 fc fe             	jmp    801008c6 <master_early_entry+0x17>
801009ca:	ff                   	(bad)  
801009cb:	ff                   	.byte 0xff

801009cc <vector31>:
801009cc:	6a 00                	push   $0x0
801009ce:	6a 1f                	push   $0x1f
801009d0:	e9 f3 fe             	jmp    801008c6 <master_early_entry+0x17>
801009d3:	ff                   	(bad)  
801009d4:	ff                   	.byte 0xff

801009d5 <vector32>:
801009d5:	6a 00                	push   $0x0
801009d7:	6a 20                	push   $0x20
801009d9:	e9 ea fe             	jmp    801008c6 <master_early_entry+0x17>
801009dc:	ff                   	(bad)  
801009dd:	ff                   	.byte 0xff

801009de <vector33>:
801009de:	6a 00                	push   $0x0
801009e0:	6a 21                	push   $0x21
801009e2:	e9 e1 fe             	jmp    801008c6 <master_early_entry+0x17>
801009e5:	ff                   	(bad)  
801009e6:	ff                   	.byte 0xff

801009e7 <vector34>:
801009e7:	6a 00                	push   $0x0
801009e9:	6a 22                	push   $0x22
801009eb:	e9 d8 fe             	jmp    801008c6 <master_early_entry+0x17>
801009ee:	ff                   	(bad)  
801009ef:	ff                   	.byte 0xff

801009f0 <vector35>:
801009f0:	6a 00                	push   $0x0
801009f2:	6a 23                	push   $0x23
801009f4:	e9 cf fe             	jmp    801008c6 <master_early_entry+0x17>
801009f7:	ff                   	(bad)  
801009f8:	ff                   	.byte 0xff

801009f9 <vector36>:
801009f9:	6a 00                	push   $0x0
801009fb:	6a 24                	push   $0x24
801009fd:	e9 c6 fe             	jmp    801008c6 <master_early_entry+0x17>
80100a00:	ff                   	(bad)  
80100a01:	ff                   	.byte 0xff

80100a02 <vector37>:
80100a02:	6a 00                	push   $0x0
80100a04:	6a 25                	push   $0x25
80100a06:	e9 bd fe             	jmp    801008c6 <master_early_entry+0x17>
80100a09:	ff                   	(bad)  
80100a0a:	ff                   	.byte 0xff

80100a0b <vector38>:
80100a0b:	6a 00                	push   $0x0
80100a0d:	6a 26                	push   $0x26
80100a0f:	e9 b4 fe             	jmp    801008c6 <master_early_entry+0x17>
80100a12:	ff                   	(bad)  
80100a13:	ff                   	.byte 0xff

80100a14 <vector39>:
80100a14:	6a 00                	push   $0x0
80100a16:	6a 27                	push   $0x27
80100a18:	e9 ab fe             	jmp    801008c6 <master_early_entry+0x17>
80100a1b:	ff                   	(bad)  
80100a1c:	ff                   	.byte 0xff

80100a1d <vector40>:
80100a1d:	6a 00                	push   $0x0
80100a1f:	6a 28                	push   $0x28
80100a21:	e9 a2 fe             	jmp    801008c6 <master_early_entry+0x17>
80100a24:	ff                   	(bad)  
80100a25:	ff                   	.byte 0xff

80100a26 <vector41>:
80100a26:	6a 00                	push   $0x0
80100a28:	6a 29                	push   $0x29
80100a2a:	e9 99 fe             	jmp    801008c6 <master_early_entry+0x17>
80100a2d:	ff                   	(bad)  
80100a2e:	ff                   	.byte 0xff

80100a2f <vector42>:
80100a2f:	6a 00                	push   $0x0
80100a31:	6a 2a                	push   $0x2a
80100a33:	e9 90 fe             	jmp    801008c6 <master_early_entry+0x17>
80100a36:	ff                   	(bad)  
80100a37:	ff                   	.byte 0xff

80100a38 <vector43>:
80100a38:	6a 00                	push   $0x0
80100a3a:	6a 2b                	push   $0x2b
80100a3c:	e9 87 fe             	jmp    801008c6 <master_early_entry+0x17>
80100a3f:	ff                   	(bad)  
80100a40:	ff                   	.byte 0xff

80100a41 <vector44>:
80100a41:	6a 00                	push   $0x0
80100a43:	6a 2c                	push   $0x2c
80100a45:	e9 7e fe             	jmp    801008c6 <master_early_entry+0x17>
80100a48:	ff                   	(bad)  
80100a49:	ff                   	.byte 0xff

80100a4a <vector45>:
80100a4a:	6a 00                	push   $0x0
80100a4c:	6a 2d                	push   $0x2d
80100a4e:	e9 75 fe             	jmp    801008c6 <master_early_entry+0x17>
80100a51:	ff                   	(bad)  
80100a52:	ff                   	.byte 0xff

80100a53 <vector46>:
80100a53:	6a 00                	push   $0x0
80100a55:	6a 2e                	push   $0x2e
80100a57:	e9 6c fe             	jmp    801008c6 <master_early_entry+0x17>
80100a5a:	ff                   	(bad)  
80100a5b:	ff                   	.byte 0xff

80100a5c <vector47>:
80100a5c:	6a 00                	push   $0x0
80100a5e:	6a 2f                	push   $0x2f
80100a60:	e9 63 fe             	jmp    801008c6 <master_early_entry+0x17>
80100a63:	ff                   	(bad)  
80100a64:	ff                   	.byte 0xff

80100a65 <vector48>:
80100a65:	6a 00                	push   $0x0
80100a67:	6a 30                	push   $0x30
80100a69:	e9 5a fe             	jmp    801008c6 <master_early_entry+0x17>
80100a6c:	ff                   	(bad)  
80100a6d:	ff                   	.byte 0xff

80100a6e <vector49>:
80100a6e:	6a 00                	push   $0x0
80100a70:	6a 31                	push   $0x31
80100a72:	e9 51 fe             	jmp    801008c6 <master_early_entry+0x17>
80100a75:	ff                   	(bad)  
80100a76:	ff                   	.byte 0xff

80100a77 <vector50>:
80100a77:	6a 00                	push   $0x0
80100a79:	6a 32                	push   $0x32
80100a7b:	e9 48 fe             	jmp    801008c6 <master_early_entry+0x17>
80100a7e:	ff                   	(bad)  
80100a7f:	ff                   	.byte 0xff

80100a80 <vector51>:
80100a80:	6a 00                	push   $0x0
80100a82:	6a 33                	push   $0x33
80100a84:	e9 3f fe             	jmp    801008c6 <master_early_entry+0x17>
80100a87:	ff                   	(bad)  
80100a88:	ff                   	.byte 0xff

80100a89 <vector52>:
80100a89:	6a 00                	push   $0x0
80100a8b:	6a 34                	push   $0x34
80100a8d:	e9 36 fe             	jmp    801008c6 <master_early_entry+0x17>
80100a90:	ff                   	(bad)  
80100a91:	ff                   	.byte 0xff

80100a92 <vector53>:
80100a92:	6a 00                	push   $0x0
80100a94:	6a 35                	push   $0x35
80100a96:	e9 2d fe             	jmp    801008c6 <master_early_entry+0x17>
80100a99:	ff                   	(bad)  
80100a9a:	ff                   	.byte 0xff

80100a9b <vector54>:
80100a9b:	6a 00                	push   $0x0
80100a9d:	6a 36                	push   $0x36
80100a9f:	e9 24 fe             	jmp    801008c6 <master_early_entry+0x17>
80100aa2:	ff                   	(bad)  
80100aa3:	ff                   	.byte 0xff

80100aa4 <vector55>:
80100aa4:	6a 00                	push   $0x0
80100aa6:	6a 37                	push   $0x37
80100aa8:	e9 1b fe             	jmp    801008c6 <master_early_entry+0x17>
80100aab:	ff                   	(bad)  
80100aac:	ff                   	.byte 0xff

80100aad <vector56>:
80100aad:	6a 00                	push   $0x0
80100aaf:	6a 38                	push   $0x38
80100ab1:	e9 12 fe             	jmp    801008c6 <master_early_entry+0x17>
80100ab4:	ff                   	(bad)  
80100ab5:	ff                   	.byte 0xff

80100ab6 <vector57>:
80100ab6:	6a 00                	push   $0x0
80100ab8:	6a 39                	push   $0x39
80100aba:	e9 09 fe             	jmp    801008c6 <master_early_entry+0x17>
80100abd:	ff                   	(bad)  
80100abe:	ff                   	.byte 0xff

80100abf <vector58>:
80100abf:	6a 00                	push   $0x0
80100ac1:	6a 3a                	push   $0x3a
80100ac3:	e9 00 fe             	jmp    801008c6 <master_early_entry+0x17>
80100ac6:	ff                   	(bad)  
80100ac7:	ff                   	.byte 0xff

80100ac8 <vector59>:
80100ac8:	6a 00                	push   $0x0
80100aca:	6a 3b                	push   $0x3b
80100acc:	e9 f7 fd             	jmp    801008c6 <master_early_entry+0x17>
80100acf:	ff                   	(bad)  
80100ad0:	ff                   	.byte 0xff

80100ad1 <vector60>:
80100ad1:	6a 00                	push   $0x0
80100ad3:	6a 3c                	push   $0x3c
80100ad5:	e9 ee fd             	jmp    801008c6 <master_early_entry+0x17>
80100ad8:	ff                   	(bad)  
80100ad9:	ff                   	.byte 0xff

80100ada <vector61>:
80100ada:	6a 00                	push   $0x0
80100adc:	6a 3d                	push   $0x3d
80100ade:	e9 e5 fd             	jmp    801008c6 <master_early_entry+0x17>
80100ae1:	ff                   	(bad)  
80100ae2:	ff                   	.byte 0xff

80100ae3 <vector62>:
80100ae3:	6a 00                	push   $0x0
80100ae5:	6a 3e                	push   $0x3e
80100ae7:	e9 dc fd             	jmp    801008c6 <master_early_entry+0x17>
80100aea:	ff                   	(bad)  
80100aeb:	ff                   	.byte 0xff

80100aec <vector63>:
80100aec:	6a 00                	push   $0x0
80100aee:	6a 3f                	push   $0x3f
80100af0:	e9 d3 fd             	jmp    801008c6 <master_early_entry+0x17>
80100af3:	ff                   	(bad)  
80100af4:	ff                   	.byte 0xff

80100af5 <vector64>:
80100af5:	6a 00                	push   $0x0
80100af7:	6a 40                	push   $0x40
80100af9:	e9 ca fd             	jmp    801008c6 <master_early_entry+0x17>
80100afc:	ff                   	(bad)  
80100afd:	ff                   	.byte 0xff

80100afe <vector65>:
80100afe:	6a 00                	push   $0x0
80100b00:	6a 41                	push   $0x41
80100b02:	e9 c1 fd             	jmp    801008c6 <master_early_entry+0x17>
80100b05:	ff                   	(bad)  
80100b06:	ff                   	.byte 0xff

80100b07 <vector66>:
80100b07:	6a 00                	push   $0x0
80100b09:	6a 42                	push   $0x42
80100b0b:	e9 b8 fd             	jmp    801008c6 <master_early_entry+0x17>
80100b0e:	ff                   	(bad)  
80100b0f:	ff                   	.byte 0xff

80100b10 <vector67>:
80100b10:	6a 00                	push   $0x0
80100b12:	6a 43                	push   $0x43
80100b14:	e9 af fd             	jmp    801008c6 <master_early_entry+0x17>
80100b17:	ff                   	(bad)  
80100b18:	ff                   	.byte 0xff

80100b19 <vector68>:
80100b19:	6a 00                	push   $0x0
80100b1b:	6a 44                	push   $0x44
80100b1d:	e9 a6 fd             	jmp    801008c6 <master_early_entry+0x17>
80100b20:	ff                   	(bad)  
80100b21:	ff                   	.byte 0xff

80100b22 <vector69>:
80100b22:	6a 00                	push   $0x0
80100b24:	6a 45                	push   $0x45
80100b26:	e9 9d fd             	jmp    801008c6 <master_early_entry+0x17>
80100b29:	ff                   	(bad)  
80100b2a:	ff                   	.byte 0xff

80100b2b <vector70>:
80100b2b:	6a 00                	push   $0x0
80100b2d:	6a 46                	push   $0x46
80100b2f:	e9 94 fd             	jmp    801008c6 <master_early_entry+0x17>
80100b32:	ff                   	(bad)  
80100b33:	ff                   	.byte 0xff

80100b34 <vector71>:
80100b34:	6a 00                	push   $0x0
80100b36:	6a 47                	push   $0x47
80100b38:	e9 8b fd             	jmp    801008c6 <master_early_entry+0x17>
80100b3b:	ff                   	(bad)  
80100b3c:	ff                   	.byte 0xff

80100b3d <vector72>:
80100b3d:	6a 00                	push   $0x0
80100b3f:	6a 48                	push   $0x48
80100b41:	e9 82 fd             	jmp    801008c6 <master_early_entry+0x17>
80100b44:	ff                   	(bad)  
80100b45:	ff                   	.byte 0xff

80100b46 <vector73>:
80100b46:	6a 00                	push   $0x0
80100b48:	6a 49                	push   $0x49
80100b4a:	e9 79 fd             	jmp    801008c6 <master_early_entry+0x17>
80100b4d:	ff                   	(bad)  
80100b4e:	ff                   	.byte 0xff

80100b4f <vector74>:
80100b4f:	6a 00                	push   $0x0
80100b51:	6a 4a                	push   $0x4a
80100b53:	e9 70 fd             	jmp    801008c6 <master_early_entry+0x17>
80100b56:	ff                   	(bad)  
80100b57:	ff                   	.byte 0xff

80100b58 <vector75>:
80100b58:	6a 00                	push   $0x0
80100b5a:	6a 4b                	push   $0x4b
80100b5c:	e9 67 fd             	jmp    801008c6 <master_early_entry+0x17>
80100b5f:	ff                   	(bad)  
80100b60:	ff                   	.byte 0xff

80100b61 <vector76>:
80100b61:	6a 00                	push   $0x0
80100b63:	6a 4c                	push   $0x4c
80100b65:	e9 5e fd             	jmp    801008c6 <master_early_entry+0x17>
80100b68:	ff                   	(bad)  
80100b69:	ff                   	.byte 0xff

80100b6a <vector77>:
80100b6a:	6a 00                	push   $0x0
80100b6c:	6a 4d                	push   $0x4d
80100b6e:	e9 55 fd             	jmp    801008c6 <master_early_entry+0x17>
80100b71:	ff                   	(bad)  
80100b72:	ff                   	.byte 0xff

80100b73 <vector78>:
80100b73:	6a 00                	push   $0x0
80100b75:	6a 4e                	push   $0x4e
80100b77:	e9 4c fd             	jmp    801008c6 <master_early_entry+0x17>
80100b7a:	ff                   	(bad)  
80100b7b:	ff                   	.byte 0xff

80100b7c <vector79>:
80100b7c:	6a 00                	push   $0x0
80100b7e:	6a 4f                	push   $0x4f
80100b80:	e9 43 fd             	jmp    801008c6 <master_early_entry+0x17>
80100b83:	ff                   	(bad)  
80100b84:	ff                   	.byte 0xff

80100b85 <vector80>:
80100b85:	6a 00                	push   $0x0
80100b87:	6a 50                	push   $0x50
80100b89:	e9 3a fd             	jmp    801008c6 <master_early_entry+0x17>
80100b8c:	ff                   	(bad)  
80100b8d:	ff                   	.byte 0xff

80100b8e <vector81>:
80100b8e:	6a 00                	push   $0x0
80100b90:	6a 51                	push   $0x51
80100b92:	e9 31 fd             	jmp    801008c6 <master_early_entry+0x17>
80100b95:	ff                   	(bad)  
80100b96:	ff                   	.byte 0xff

80100b97 <vector82>:
80100b97:	6a 00                	push   $0x0
80100b99:	6a 52                	push   $0x52
80100b9b:	e9 28 fd             	jmp    801008c6 <master_early_entry+0x17>
80100b9e:	ff                   	(bad)  
80100b9f:	ff                   	.byte 0xff

80100ba0 <vector83>:
80100ba0:	6a 00                	push   $0x0
80100ba2:	6a 53                	push   $0x53
80100ba4:	e9 1f fd             	jmp    801008c6 <master_early_entry+0x17>
80100ba7:	ff                   	(bad)  
80100ba8:	ff                   	.byte 0xff

80100ba9 <vector84>:
80100ba9:	6a 00                	push   $0x0
80100bab:	6a 54                	push   $0x54
80100bad:	e9 16 fd             	jmp    801008c6 <master_early_entry+0x17>
80100bb0:	ff                   	(bad)  
80100bb1:	ff                   	.byte 0xff

80100bb2 <vector85>:
80100bb2:	6a 00                	push   $0x0
80100bb4:	6a 55                	push   $0x55
80100bb6:	e9 0d fd             	jmp    801008c6 <master_early_entry+0x17>
80100bb9:	ff                   	(bad)  
80100bba:	ff                   	.byte 0xff

80100bbb <vector86>:
80100bbb:	6a 00                	push   $0x0
80100bbd:	6a 56                	push   $0x56
80100bbf:	e9 04 fd             	jmp    801008c6 <master_early_entry+0x17>
80100bc2:	ff                   	(bad)  
80100bc3:	ff                   	.byte 0xff

80100bc4 <vector87>:
80100bc4:	6a 00                	push   $0x0
80100bc6:	6a 57                	push   $0x57
80100bc8:	e9 fb fc             	jmp    801008c6 <master_early_entry+0x17>
80100bcb:	ff                   	(bad)  
80100bcc:	ff                   	.byte 0xff

80100bcd <vector88>:
80100bcd:	6a 00                	push   $0x0
80100bcf:	6a 58                	push   $0x58
80100bd1:	e9 f2 fc             	jmp    801008c6 <master_early_entry+0x17>
80100bd4:	ff                   	(bad)  
80100bd5:	ff                   	.byte 0xff

80100bd6 <vector89>:
80100bd6:	6a 00                	push   $0x0
80100bd8:	6a 59                	push   $0x59
80100bda:	e9 e9 fc             	jmp    801008c6 <master_early_entry+0x17>
80100bdd:	ff                   	(bad)  
80100bde:	ff                   	.byte 0xff

80100bdf <vector90>:
80100bdf:	6a 00                	push   $0x0
80100be1:	6a 5a                	push   $0x5a
80100be3:	e9 e0 fc             	jmp    801008c6 <master_early_entry+0x17>
80100be6:	ff                   	(bad)  
80100be7:	ff                   	.byte 0xff

80100be8 <vector91>:
80100be8:	6a 00                	push   $0x0
80100bea:	6a 5b                	push   $0x5b
80100bec:	e9 d7 fc             	jmp    801008c6 <master_early_entry+0x17>
80100bef:	ff                   	(bad)  
80100bf0:	ff                   	.byte 0xff

80100bf1 <vector92>:
80100bf1:	6a 00                	push   $0x0
80100bf3:	6a 5c                	push   $0x5c
80100bf5:	e9 ce fc             	jmp    801008c6 <master_early_entry+0x17>
80100bf8:	ff                   	(bad)  
80100bf9:	ff                   	.byte 0xff

80100bfa <vector93>:
80100bfa:	6a 00                	push   $0x0
80100bfc:	6a 5d                	push   $0x5d
80100bfe:	e9 c5 fc             	jmp    801008c6 <master_early_entry+0x17>
80100c01:	ff                   	(bad)  
80100c02:	ff                   	.byte 0xff

80100c03 <vector94>:
80100c03:	6a 00                	push   $0x0
80100c05:	6a 5e                	push   $0x5e
80100c07:	e9 bc fc             	jmp    801008c6 <master_early_entry+0x17>
80100c0a:	ff                   	(bad)  
80100c0b:	ff                   	.byte 0xff

80100c0c <vector95>:
80100c0c:	6a 00                	push   $0x0
80100c0e:	6a 5f                	push   $0x5f
80100c10:	e9 b3 fc             	jmp    801008c6 <master_early_entry+0x17>
80100c13:	ff                   	(bad)  
80100c14:	ff                   	.byte 0xff

80100c15 <vector96>:
80100c15:	6a 00                	push   $0x0
80100c17:	6a 60                	push   $0x60
80100c19:	e9 aa fc             	jmp    801008c6 <master_early_entry+0x17>
80100c1c:	ff                   	(bad)  
80100c1d:	ff                   	.byte 0xff

80100c1e <vector97>:
80100c1e:	6a 00                	push   $0x0
80100c20:	6a 61                	push   $0x61
80100c22:	e9 a1 fc             	jmp    801008c6 <master_early_entry+0x17>
80100c25:	ff                   	(bad)  
80100c26:	ff                   	.byte 0xff

80100c27 <vector98>:
80100c27:	6a 00                	push   $0x0
80100c29:	6a 62                	push   $0x62
80100c2b:	e9 98 fc             	jmp    801008c6 <master_early_entry+0x17>
80100c2e:	ff                   	(bad)  
80100c2f:	ff                   	.byte 0xff

80100c30 <vector99>:
80100c30:	6a 00                	push   $0x0
80100c32:	6a 63                	push   $0x63
80100c34:	e9 8f fc             	jmp    801008c6 <master_early_entry+0x17>
80100c37:	ff                   	(bad)  
80100c38:	ff                   	.byte 0xff

80100c39 <vector100>:
80100c39:	6a 00                	push   $0x0
80100c3b:	6a 64                	push   $0x64
80100c3d:	e9 86 fc             	jmp    801008c6 <master_early_entry+0x17>
80100c40:	ff                   	(bad)  
80100c41:	ff                   	.byte 0xff

80100c42 <vector101>:
80100c42:	6a 00                	push   $0x0
80100c44:	6a 65                	push   $0x65
80100c46:	e9 7d fc             	jmp    801008c6 <master_early_entry+0x17>
80100c49:	ff                   	(bad)  
80100c4a:	ff                   	.byte 0xff

80100c4b <vector102>:
80100c4b:	6a 00                	push   $0x0
80100c4d:	6a 66                	push   $0x66
80100c4f:	e9 74 fc             	jmp    801008c6 <master_early_entry+0x17>
80100c52:	ff                   	(bad)  
80100c53:	ff                   	.byte 0xff

80100c54 <vector103>:
80100c54:	6a 00                	push   $0x0
80100c56:	6a 67                	push   $0x67
80100c58:	e9 6b fc             	jmp    801008c6 <master_early_entry+0x17>
80100c5b:	ff                   	(bad)  
80100c5c:	ff                   	.byte 0xff

80100c5d <vector104>:
80100c5d:	6a 00                	push   $0x0
80100c5f:	6a 68                	push   $0x68
80100c61:	e9 62 fc             	jmp    801008c6 <master_early_entry+0x17>
80100c64:	ff                   	(bad)  
80100c65:	ff                   	.byte 0xff

80100c66 <vector105>:
80100c66:	6a 00                	push   $0x0
80100c68:	6a 69                	push   $0x69
80100c6a:	e9 59 fc             	jmp    801008c6 <master_early_entry+0x17>
80100c6d:	ff                   	(bad)  
80100c6e:	ff                   	.byte 0xff

80100c6f <vector106>:
80100c6f:	6a 00                	push   $0x0
80100c71:	6a 6a                	push   $0x6a
80100c73:	e9 50 fc             	jmp    801008c6 <master_early_entry+0x17>
80100c76:	ff                   	(bad)  
80100c77:	ff                   	.byte 0xff

80100c78 <vector107>:
80100c78:	6a 00                	push   $0x0
80100c7a:	6a 6b                	push   $0x6b
80100c7c:	e9 47 fc             	jmp    801008c6 <master_early_entry+0x17>
80100c7f:	ff                   	(bad)  
80100c80:	ff                   	.byte 0xff

80100c81 <vector108>:
80100c81:	6a 00                	push   $0x0
80100c83:	6a 6c                	push   $0x6c
80100c85:	e9 3e fc             	jmp    801008c6 <master_early_entry+0x17>
80100c88:	ff                   	(bad)  
80100c89:	ff                   	.byte 0xff

80100c8a <vector109>:
80100c8a:	6a 00                	push   $0x0
80100c8c:	6a 6d                	push   $0x6d
80100c8e:	e9 35 fc             	jmp    801008c6 <master_early_entry+0x17>
80100c91:	ff                   	(bad)  
80100c92:	ff                   	.byte 0xff

80100c93 <vector110>:
80100c93:	6a 00                	push   $0x0
80100c95:	6a 6e                	push   $0x6e
80100c97:	e9 2c fc             	jmp    801008c6 <master_early_entry+0x17>
80100c9a:	ff                   	(bad)  
80100c9b:	ff                   	.byte 0xff

80100c9c <vector111>:
80100c9c:	6a 00                	push   $0x0
80100c9e:	6a 6f                	push   $0x6f
80100ca0:	e9 23 fc             	jmp    801008c6 <master_early_entry+0x17>
80100ca3:	ff                   	(bad)  
80100ca4:	ff                   	.byte 0xff

80100ca5 <vector112>:
80100ca5:	6a 00                	push   $0x0
80100ca7:	6a 70                	push   $0x70
80100ca9:	e9 1a fc             	jmp    801008c6 <master_early_entry+0x17>
80100cac:	ff                   	(bad)  
80100cad:	ff                   	.byte 0xff

80100cae <vector113>:
80100cae:	6a 00                	push   $0x0
80100cb0:	6a 71                	push   $0x71
80100cb2:	e9 11 fc             	jmp    801008c6 <master_early_entry+0x17>
80100cb5:	ff                   	(bad)  
80100cb6:	ff                   	.byte 0xff

80100cb7 <vector114>:
80100cb7:	6a 00                	push   $0x0
80100cb9:	6a 72                	push   $0x72
80100cbb:	e9 08 fc             	jmp    801008c6 <master_early_entry+0x17>
80100cbe:	ff                   	(bad)  
80100cbf:	ff                   	.byte 0xff

80100cc0 <vector115>:
80100cc0:	6a 00                	push   $0x0
80100cc2:	6a 73                	push   $0x73
80100cc4:	e9 ff fb             	jmp    801008c6 <master_early_entry+0x17>
80100cc7:	ff                   	(bad)  
80100cc8:	ff                   	.byte 0xff

80100cc9 <vector116>:
80100cc9:	6a 00                	push   $0x0
80100ccb:	6a 74                	push   $0x74
80100ccd:	e9 f6 fb             	jmp    801008c6 <master_early_entry+0x17>
80100cd0:	ff                   	(bad)  
80100cd1:	ff                   	.byte 0xff

80100cd2 <vector117>:
80100cd2:	6a 00                	push   $0x0
80100cd4:	6a 75                	push   $0x75
80100cd6:	e9 ed fb             	jmp    801008c6 <master_early_entry+0x17>
80100cd9:	ff                   	(bad)  
80100cda:	ff                   	.byte 0xff

80100cdb <vector118>:
80100cdb:	6a 00                	push   $0x0
80100cdd:	6a 76                	push   $0x76
80100cdf:	e9 e4 fb             	jmp    801008c6 <master_early_entry+0x17>
80100ce2:	ff                   	(bad)  
80100ce3:	ff                   	.byte 0xff

80100ce4 <vector119>:
80100ce4:	6a 00                	push   $0x0
80100ce6:	6a 77                	push   $0x77
80100ce8:	e9 db fb             	jmp    801008c6 <master_early_entry+0x17>
80100ceb:	ff                   	(bad)  
80100cec:	ff                   	.byte 0xff

80100ced <vector120>:
80100ced:	6a 00                	push   $0x0
80100cef:	6a 78                	push   $0x78
80100cf1:	e9 d2 fb             	jmp    801008c6 <master_early_entry+0x17>
80100cf4:	ff                   	(bad)  
80100cf5:	ff                   	.byte 0xff

80100cf6 <vector121>:
80100cf6:	6a 00                	push   $0x0
80100cf8:	6a 79                	push   $0x79
80100cfa:	e9 c9 fb             	jmp    801008c6 <master_early_entry+0x17>
80100cfd:	ff                   	(bad)  
80100cfe:	ff                   	.byte 0xff

80100cff <vector122>:
80100cff:	6a 00                	push   $0x0
80100d01:	6a 7a                	push   $0x7a
80100d03:	e9 c0 fb             	jmp    801008c6 <master_early_entry+0x17>
80100d06:	ff                   	(bad)  
80100d07:	ff                   	.byte 0xff

80100d08 <vector123>:
80100d08:	6a 00                	push   $0x0
80100d0a:	6a 7b                	push   $0x7b
80100d0c:	e9 b7 fb             	jmp    801008c6 <master_early_entry+0x17>
80100d0f:	ff                   	(bad)  
80100d10:	ff                   	.byte 0xff

80100d11 <vector124>:
80100d11:	6a 00                	push   $0x0
80100d13:	6a 7c                	push   $0x7c
80100d15:	e9 ae fb             	jmp    801008c6 <master_early_entry+0x17>
80100d18:	ff                   	(bad)  
80100d19:	ff                   	.byte 0xff

80100d1a <vector125>:
80100d1a:	6a 00                	push   $0x0
80100d1c:	6a 7d                	push   $0x7d
80100d1e:	e9 a5 fb             	jmp    801008c6 <master_early_entry+0x17>
80100d21:	ff                   	(bad)  
80100d22:	ff                   	.byte 0xff

80100d23 <vector126>:
80100d23:	6a 00                	push   $0x0
80100d25:	6a 7e                	push   $0x7e
80100d27:	e9 9c fb             	jmp    801008c6 <master_early_entry+0x17>
80100d2a:	ff                   	(bad)  
80100d2b:	ff                   	.byte 0xff

80100d2c <vector127>:
80100d2c:	6a 00                	push   $0x0
80100d2e:	6a 7f                	push   $0x7f
80100d30:	e9 93 fb             	jmp    801008c6 <master_early_entry+0x17>
80100d33:	ff                   	(bad)  
80100d34:	ff                   	.byte 0xff

80100d35 <vector128>:
80100d35:	6a 00                	push   $0x0
80100d37:	68 80 00             	push   $0x80
80100d3a:	00 00                	add    %al,(%bx,%si)
80100d3c:	e9 87 fb             	jmp    801008c6 <master_early_entry+0x17>
80100d3f:	ff                   	(bad)  
80100d40:	ff                   	.byte 0xff

80100d41 <vector129>:
80100d41:	6a 00                	push   $0x0
80100d43:	68 81 00             	push   $0x81
80100d46:	00 00                	add    %al,(%bx,%si)
80100d48:	e9 7b fb             	jmp    801008c6 <master_early_entry+0x17>
80100d4b:	ff                   	(bad)  
80100d4c:	ff                   	.byte 0xff

80100d4d <vector130>:
80100d4d:	6a 00                	push   $0x0
80100d4f:	68 82 00             	push   $0x82
80100d52:	00 00                	add    %al,(%bx,%si)
80100d54:	e9 6f fb             	jmp    801008c6 <master_early_entry+0x17>
80100d57:	ff                   	(bad)  
80100d58:	ff                   	.byte 0xff

80100d59 <vector131>:
80100d59:	6a 00                	push   $0x0
80100d5b:	68 83 00             	push   $0x83
80100d5e:	00 00                	add    %al,(%bx,%si)
80100d60:	e9 63 fb             	jmp    801008c6 <master_early_entry+0x17>
80100d63:	ff                   	(bad)  
80100d64:	ff                   	.byte 0xff

80100d65 <vector132>:
80100d65:	6a 00                	push   $0x0
80100d67:	68 84 00             	push   $0x84
80100d6a:	00 00                	add    %al,(%bx,%si)
80100d6c:	e9 57 fb             	jmp    801008c6 <master_early_entry+0x17>
80100d6f:	ff                   	(bad)  
80100d70:	ff                   	.byte 0xff

80100d71 <vector133>:
80100d71:	6a 00                	push   $0x0
80100d73:	68 85 00             	push   $0x85
80100d76:	00 00                	add    %al,(%bx,%si)
80100d78:	e9 4b fb             	jmp    801008c6 <master_early_entry+0x17>
80100d7b:	ff                   	(bad)  
80100d7c:	ff                   	.byte 0xff

80100d7d <vector134>:
80100d7d:	6a 00                	push   $0x0
80100d7f:	68 86 00             	push   $0x86
80100d82:	00 00                	add    %al,(%bx,%si)
80100d84:	e9 3f fb             	jmp    801008c6 <master_early_entry+0x17>
80100d87:	ff                   	(bad)  
80100d88:	ff                   	.byte 0xff

80100d89 <vector135>:
80100d89:	6a 00                	push   $0x0
80100d8b:	68 87 00             	push   $0x87
80100d8e:	00 00                	add    %al,(%bx,%si)
80100d90:	e9 33 fb             	jmp    801008c6 <master_early_entry+0x17>
80100d93:	ff                   	(bad)  
80100d94:	ff                   	.byte 0xff

80100d95 <vector136>:
80100d95:	6a 00                	push   $0x0
80100d97:	68 88 00             	push   $0x88
80100d9a:	00 00                	add    %al,(%bx,%si)
80100d9c:	e9 27 fb             	jmp    801008c6 <master_early_entry+0x17>
80100d9f:	ff                   	(bad)  
80100da0:	ff                   	.byte 0xff

80100da1 <vector137>:
80100da1:	6a 00                	push   $0x0
80100da3:	68 89 00             	push   $0x89
80100da6:	00 00                	add    %al,(%bx,%si)
80100da8:	e9 1b fb             	jmp    801008c6 <master_early_entry+0x17>
80100dab:	ff                   	(bad)  
80100dac:	ff                   	.byte 0xff

80100dad <vector138>:
80100dad:	6a 00                	push   $0x0
80100daf:	68 8a 00             	push   $0x8a
80100db2:	00 00                	add    %al,(%bx,%si)
80100db4:	e9 0f fb             	jmp    801008c6 <master_early_entry+0x17>
80100db7:	ff                   	(bad)  
80100db8:	ff                   	.byte 0xff

80100db9 <vector139>:
80100db9:	6a 00                	push   $0x0
80100dbb:	68 8b 00             	push   $0x8b
80100dbe:	00 00                	add    %al,(%bx,%si)
80100dc0:	e9 03 fb             	jmp    801008c6 <master_early_entry+0x17>
80100dc3:	ff                   	(bad)  
80100dc4:	ff                   	.byte 0xff

80100dc5 <vector140>:
80100dc5:	6a 00                	push   $0x0
80100dc7:	68 8c 00             	push   $0x8c
80100dca:	00 00                	add    %al,(%bx,%si)
80100dcc:	e9 f7 fa             	jmp    801008c6 <master_early_entry+0x17>
80100dcf:	ff                   	(bad)  
80100dd0:	ff                   	.byte 0xff

80100dd1 <vector141>:
80100dd1:	6a 00                	push   $0x0
80100dd3:	68 8d 00             	push   $0x8d
80100dd6:	00 00                	add    %al,(%bx,%si)
80100dd8:	e9 eb fa             	jmp    801008c6 <master_early_entry+0x17>
80100ddb:	ff                   	(bad)  
80100ddc:	ff                   	.byte 0xff

80100ddd <vector142>:
80100ddd:	6a 00                	push   $0x0
80100ddf:	68 8e 00             	push   $0x8e
80100de2:	00 00                	add    %al,(%bx,%si)
80100de4:	e9 df fa             	jmp    801008c6 <master_early_entry+0x17>
80100de7:	ff                   	(bad)  
80100de8:	ff                   	.byte 0xff

80100de9 <vector143>:
80100de9:	6a 00                	push   $0x0
80100deb:	68 8f 00             	push   $0x8f
80100dee:	00 00                	add    %al,(%bx,%si)
80100df0:	e9 d3 fa             	jmp    801008c6 <master_early_entry+0x17>
80100df3:	ff                   	(bad)  
80100df4:	ff                   	.byte 0xff

80100df5 <vector144>:
80100df5:	6a 00                	push   $0x0
80100df7:	68 90 00             	push   $0x90
80100dfa:	00 00                	add    %al,(%bx,%si)
80100dfc:	e9 c7 fa             	jmp    801008c6 <master_early_entry+0x17>
80100dff:	ff                   	(bad)  
80100e00:	ff                   	.byte 0xff

80100e01 <vector145>:
80100e01:	6a 00                	push   $0x0
80100e03:	68 91 00             	push   $0x91
80100e06:	00 00                	add    %al,(%bx,%si)
80100e08:	e9 bb fa             	jmp    801008c6 <master_early_entry+0x17>
80100e0b:	ff                   	(bad)  
80100e0c:	ff                   	.byte 0xff

80100e0d <vector146>:
80100e0d:	6a 00                	push   $0x0
80100e0f:	68 92 00             	push   $0x92
80100e12:	00 00                	add    %al,(%bx,%si)
80100e14:	e9 af fa             	jmp    801008c6 <master_early_entry+0x17>
80100e17:	ff                   	(bad)  
80100e18:	ff                   	.byte 0xff

80100e19 <vector147>:
80100e19:	6a 00                	push   $0x0
80100e1b:	68 93 00             	push   $0x93
80100e1e:	00 00                	add    %al,(%bx,%si)
80100e20:	e9 a3 fa             	jmp    801008c6 <master_early_entry+0x17>
80100e23:	ff                   	(bad)  
80100e24:	ff                   	.byte 0xff

80100e25 <vector148>:
80100e25:	6a 00                	push   $0x0
80100e27:	68 94 00             	push   $0x94
80100e2a:	00 00                	add    %al,(%bx,%si)
80100e2c:	e9 97 fa             	jmp    801008c6 <master_early_entry+0x17>
80100e2f:	ff                   	(bad)  
80100e30:	ff                   	.byte 0xff

80100e31 <vector149>:
80100e31:	6a 00                	push   $0x0
80100e33:	68 95 00             	push   $0x95
80100e36:	00 00                	add    %al,(%bx,%si)
80100e38:	e9 8b fa             	jmp    801008c6 <master_early_entry+0x17>
80100e3b:	ff                   	(bad)  
80100e3c:	ff                   	.byte 0xff

80100e3d <vector150>:
80100e3d:	6a 00                	push   $0x0
80100e3f:	68 96 00             	push   $0x96
80100e42:	00 00                	add    %al,(%bx,%si)
80100e44:	e9 7f fa             	jmp    801008c6 <master_early_entry+0x17>
80100e47:	ff                   	(bad)  
80100e48:	ff                   	.byte 0xff

80100e49 <vector151>:
80100e49:	6a 00                	push   $0x0
80100e4b:	68 97 00             	push   $0x97
80100e4e:	00 00                	add    %al,(%bx,%si)
80100e50:	e9 73 fa             	jmp    801008c6 <master_early_entry+0x17>
80100e53:	ff                   	(bad)  
80100e54:	ff                   	.byte 0xff

80100e55 <vector152>:
80100e55:	6a 00                	push   $0x0
80100e57:	68 98 00             	push   $0x98
80100e5a:	00 00                	add    %al,(%bx,%si)
80100e5c:	e9 67 fa             	jmp    801008c6 <master_early_entry+0x17>
80100e5f:	ff                   	(bad)  
80100e60:	ff                   	.byte 0xff

80100e61 <vector153>:
80100e61:	6a 00                	push   $0x0
80100e63:	68 99 00             	push   $0x99
80100e66:	00 00                	add    %al,(%bx,%si)
80100e68:	e9 5b fa             	jmp    801008c6 <master_early_entry+0x17>
80100e6b:	ff                   	(bad)  
80100e6c:	ff                   	.byte 0xff

80100e6d <vector154>:
80100e6d:	6a 00                	push   $0x0
80100e6f:	68 9a 00             	push   $0x9a
80100e72:	00 00                	add    %al,(%bx,%si)
80100e74:	e9 4f fa             	jmp    801008c6 <master_early_entry+0x17>
80100e77:	ff                   	(bad)  
80100e78:	ff                   	.byte 0xff

80100e79 <vector155>:
80100e79:	6a 00                	push   $0x0
80100e7b:	68 9b 00             	push   $0x9b
80100e7e:	00 00                	add    %al,(%bx,%si)
80100e80:	e9 43 fa             	jmp    801008c6 <master_early_entry+0x17>
80100e83:	ff                   	(bad)  
80100e84:	ff                   	.byte 0xff

80100e85 <vector156>:
80100e85:	6a 00                	push   $0x0
80100e87:	68 9c 00             	push   $0x9c
80100e8a:	00 00                	add    %al,(%bx,%si)
80100e8c:	e9 37 fa             	jmp    801008c6 <master_early_entry+0x17>
80100e8f:	ff                   	(bad)  
80100e90:	ff                   	.byte 0xff

80100e91 <vector157>:
80100e91:	6a 00                	push   $0x0
80100e93:	68 9d 00             	push   $0x9d
80100e96:	00 00                	add    %al,(%bx,%si)
80100e98:	e9 2b fa             	jmp    801008c6 <master_early_entry+0x17>
80100e9b:	ff                   	(bad)  
80100e9c:	ff                   	.byte 0xff

80100e9d <vector158>:
80100e9d:	6a 00                	push   $0x0
80100e9f:	68 9e 00             	push   $0x9e
80100ea2:	00 00                	add    %al,(%bx,%si)
80100ea4:	e9 1f fa             	jmp    801008c6 <master_early_entry+0x17>
80100ea7:	ff                   	(bad)  
80100ea8:	ff                   	.byte 0xff

80100ea9 <vector159>:
80100ea9:	6a 00                	push   $0x0
80100eab:	68 9f 00             	push   $0x9f
80100eae:	00 00                	add    %al,(%bx,%si)
80100eb0:	e9 13 fa             	jmp    801008c6 <master_early_entry+0x17>
80100eb3:	ff                   	(bad)  
80100eb4:	ff                   	.byte 0xff

80100eb5 <vector160>:
80100eb5:	6a 00                	push   $0x0
80100eb7:	68 a0 00             	push   $0xa0
80100eba:	00 00                	add    %al,(%bx,%si)
80100ebc:	e9 07 fa             	jmp    801008c6 <master_early_entry+0x17>
80100ebf:	ff                   	(bad)  
80100ec0:	ff                   	.byte 0xff

80100ec1 <vector161>:
80100ec1:	6a 00                	push   $0x0
80100ec3:	68 a1 00             	push   $0xa1
80100ec6:	00 00                	add    %al,(%bx,%si)
80100ec8:	e9 fb f9             	jmp    801008c6 <master_early_entry+0x17>
80100ecb:	ff                   	(bad)  
80100ecc:	ff                   	.byte 0xff

80100ecd <vector162>:
80100ecd:	6a 00                	push   $0x0
80100ecf:	68 a2 00             	push   $0xa2
80100ed2:	00 00                	add    %al,(%bx,%si)
80100ed4:	e9 ef f9             	jmp    801008c6 <master_early_entry+0x17>
80100ed7:	ff                   	(bad)  
80100ed8:	ff                   	.byte 0xff

80100ed9 <vector163>:
80100ed9:	6a 00                	push   $0x0
80100edb:	68 a3 00             	push   $0xa3
80100ede:	00 00                	add    %al,(%bx,%si)
80100ee0:	e9 e3 f9             	jmp    801008c6 <master_early_entry+0x17>
80100ee3:	ff                   	(bad)  
80100ee4:	ff                   	.byte 0xff

80100ee5 <vector164>:
80100ee5:	6a 00                	push   $0x0
80100ee7:	68 a4 00             	push   $0xa4
80100eea:	00 00                	add    %al,(%bx,%si)
80100eec:	e9 d7 f9             	jmp    801008c6 <master_early_entry+0x17>
80100eef:	ff                   	(bad)  
80100ef0:	ff                   	.byte 0xff

80100ef1 <vector165>:
80100ef1:	6a 00                	push   $0x0
80100ef3:	68 a5 00             	push   $0xa5
80100ef6:	00 00                	add    %al,(%bx,%si)
80100ef8:	e9 cb f9             	jmp    801008c6 <master_early_entry+0x17>
80100efb:	ff                   	(bad)  
80100efc:	ff                   	.byte 0xff

80100efd <vector166>:
80100efd:	6a 00                	push   $0x0
80100eff:	68 a6 00             	push   $0xa6
80100f02:	00 00                	add    %al,(%bx,%si)
80100f04:	e9 bf f9             	jmp    801008c6 <master_early_entry+0x17>
80100f07:	ff                   	(bad)  
80100f08:	ff                   	.byte 0xff

80100f09 <vector167>:
80100f09:	6a 00                	push   $0x0
80100f0b:	68 a7 00             	push   $0xa7
80100f0e:	00 00                	add    %al,(%bx,%si)
80100f10:	e9 b3 f9             	jmp    801008c6 <master_early_entry+0x17>
80100f13:	ff                   	(bad)  
80100f14:	ff                   	.byte 0xff

80100f15 <vector168>:
80100f15:	6a 00                	push   $0x0
80100f17:	68 a8 00             	push   $0xa8
80100f1a:	00 00                	add    %al,(%bx,%si)
80100f1c:	e9 a7 f9             	jmp    801008c6 <master_early_entry+0x17>
80100f1f:	ff                   	(bad)  
80100f20:	ff                   	.byte 0xff

80100f21 <vector169>:
80100f21:	6a 00                	push   $0x0
80100f23:	68 a9 00             	push   $0xa9
80100f26:	00 00                	add    %al,(%bx,%si)
80100f28:	e9 9b f9             	jmp    801008c6 <master_early_entry+0x17>
80100f2b:	ff                   	(bad)  
80100f2c:	ff                   	.byte 0xff

80100f2d <vector170>:
80100f2d:	6a 00                	push   $0x0
80100f2f:	68 aa 00             	push   $0xaa
80100f32:	00 00                	add    %al,(%bx,%si)
80100f34:	e9 8f f9             	jmp    801008c6 <master_early_entry+0x17>
80100f37:	ff                   	(bad)  
80100f38:	ff                   	.byte 0xff

80100f39 <vector171>:
80100f39:	6a 00                	push   $0x0
80100f3b:	68 ab 00             	push   $0xab
80100f3e:	00 00                	add    %al,(%bx,%si)
80100f40:	e9 83 f9             	jmp    801008c6 <master_early_entry+0x17>
80100f43:	ff                   	(bad)  
80100f44:	ff                   	.byte 0xff

80100f45 <vector172>:
80100f45:	6a 00                	push   $0x0
80100f47:	68 ac 00             	push   $0xac
80100f4a:	00 00                	add    %al,(%bx,%si)
80100f4c:	e9 77 f9             	jmp    801008c6 <master_early_entry+0x17>
80100f4f:	ff                   	(bad)  
80100f50:	ff                   	.byte 0xff

80100f51 <vector173>:
80100f51:	6a 00                	push   $0x0
80100f53:	68 ad 00             	push   $0xad
80100f56:	00 00                	add    %al,(%bx,%si)
80100f58:	e9 6b f9             	jmp    801008c6 <master_early_entry+0x17>
80100f5b:	ff                   	(bad)  
80100f5c:	ff                   	.byte 0xff

80100f5d <vector174>:
80100f5d:	6a 00                	push   $0x0
80100f5f:	68 ae 00             	push   $0xae
80100f62:	00 00                	add    %al,(%bx,%si)
80100f64:	e9 5f f9             	jmp    801008c6 <master_early_entry+0x17>
80100f67:	ff                   	(bad)  
80100f68:	ff                   	.byte 0xff

80100f69 <vector175>:
80100f69:	6a 00                	push   $0x0
80100f6b:	68 af 00             	push   $0xaf
80100f6e:	00 00                	add    %al,(%bx,%si)
80100f70:	e9 53 f9             	jmp    801008c6 <master_early_entry+0x17>
80100f73:	ff                   	(bad)  
80100f74:	ff                   	.byte 0xff

80100f75 <vector176>:
80100f75:	6a 00                	push   $0x0
80100f77:	68 b0 00             	push   $0xb0
80100f7a:	00 00                	add    %al,(%bx,%si)
80100f7c:	e9 47 f9             	jmp    801008c6 <master_early_entry+0x17>
80100f7f:	ff                   	(bad)  
80100f80:	ff                   	.byte 0xff

80100f81 <vector177>:
80100f81:	6a 00                	push   $0x0
80100f83:	68 b1 00             	push   $0xb1
80100f86:	00 00                	add    %al,(%bx,%si)
80100f88:	e9 3b f9             	jmp    801008c6 <master_early_entry+0x17>
80100f8b:	ff                   	(bad)  
80100f8c:	ff                   	.byte 0xff

80100f8d <vector178>:
80100f8d:	6a 00                	push   $0x0
80100f8f:	68 b2 00             	push   $0xb2
80100f92:	00 00                	add    %al,(%bx,%si)
80100f94:	e9 2f f9             	jmp    801008c6 <master_early_entry+0x17>
80100f97:	ff                   	(bad)  
80100f98:	ff                   	.byte 0xff

80100f99 <vector179>:
80100f99:	6a 00                	push   $0x0
80100f9b:	68 b3 00             	push   $0xb3
80100f9e:	00 00                	add    %al,(%bx,%si)
80100fa0:	e9 23 f9             	jmp    801008c6 <master_early_entry+0x17>
80100fa3:	ff                   	(bad)  
80100fa4:	ff                   	.byte 0xff

80100fa5 <vector180>:
80100fa5:	6a 00                	push   $0x0
80100fa7:	68 b4 00             	push   $0xb4
80100faa:	00 00                	add    %al,(%bx,%si)
80100fac:	e9 17 f9             	jmp    801008c6 <master_early_entry+0x17>
80100faf:	ff                   	(bad)  
80100fb0:	ff                   	.byte 0xff

80100fb1 <vector181>:
80100fb1:	6a 00                	push   $0x0
80100fb3:	68 b5 00             	push   $0xb5
80100fb6:	00 00                	add    %al,(%bx,%si)
80100fb8:	e9 0b f9             	jmp    801008c6 <master_early_entry+0x17>
80100fbb:	ff                   	(bad)  
80100fbc:	ff                   	.byte 0xff

80100fbd <vector182>:
80100fbd:	6a 00                	push   $0x0
80100fbf:	68 b6 00             	push   $0xb6
80100fc2:	00 00                	add    %al,(%bx,%si)
80100fc4:	e9 ff f8             	jmp    801008c6 <master_early_entry+0x17>
80100fc7:	ff                   	(bad)  
80100fc8:	ff                   	.byte 0xff

80100fc9 <vector183>:
80100fc9:	6a 00                	push   $0x0
80100fcb:	68 b7 00             	push   $0xb7
80100fce:	00 00                	add    %al,(%bx,%si)
80100fd0:	e9 f3 f8             	jmp    801008c6 <master_early_entry+0x17>
80100fd3:	ff                   	(bad)  
80100fd4:	ff                   	.byte 0xff

80100fd5 <vector184>:
80100fd5:	6a 00                	push   $0x0
80100fd7:	68 b8 00             	push   $0xb8
80100fda:	00 00                	add    %al,(%bx,%si)
80100fdc:	e9 e7 f8             	jmp    801008c6 <master_early_entry+0x17>
80100fdf:	ff                   	(bad)  
80100fe0:	ff                   	.byte 0xff

80100fe1 <vector185>:
80100fe1:	6a 00                	push   $0x0
80100fe3:	68 b9 00             	push   $0xb9
80100fe6:	00 00                	add    %al,(%bx,%si)
80100fe8:	e9 db f8             	jmp    801008c6 <master_early_entry+0x17>
80100feb:	ff                   	(bad)  
80100fec:	ff                   	.byte 0xff

80100fed <vector186>:
80100fed:	6a 00                	push   $0x0
80100fef:	68 ba 00             	push   $0xba
80100ff2:	00 00                	add    %al,(%bx,%si)
80100ff4:	e9 cf f8             	jmp    801008c6 <master_early_entry+0x17>
80100ff7:	ff                   	(bad)  
80100ff8:	ff                   	.byte 0xff

80100ff9 <vector187>:
80100ff9:	6a 00                	push   $0x0
80100ffb:	68 bb 00             	push   $0xbb
80100ffe:	00 00                	add    %al,(%bx,%si)
80101000:	e9 c3 f8             	jmp    801008c6 <master_early_entry+0x17>
80101003:	ff                   	(bad)  
80101004:	ff                   	.byte 0xff

80101005 <vector188>:
80101005:	6a 00                	push   $0x0
80101007:	68 bc 00             	push   $0xbc
8010100a:	00 00                	add    %al,(%bx,%si)
8010100c:	e9 b7 f8             	jmp    801008c6 <master_early_entry+0x17>
8010100f:	ff                   	(bad)  
80101010:	ff                   	.byte 0xff

80101011 <vector189>:
80101011:	6a 00                	push   $0x0
80101013:	68 bd 00             	push   $0xbd
80101016:	00 00                	add    %al,(%bx,%si)
80101018:	e9 ab f8             	jmp    801008c6 <master_early_entry+0x17>
8010101b:	ff                   	(bad)  
8010101c:	ff                   	.byte 0xff

8010101d <vector190>:
8010101d:	6a 00                	push   $0x0
8010101f:	68 be 00             	push   $0xbe
80101022:	00 00                	add    %al,(%bx,%si)
80101024:	e9 9f f8             	jmp    801008c6 <master_early_entry+0x17>
80101027:	ff                   	(bad)  
80101028:	ff                   	.byte 0xff

80101029 <vector191>:
80101029:	6a 00                	push   $0x0
8010102b:	68 bf 00             	push   $0xbf
8010102e:	00 00                	add    %al,(%bx,%si)
80101030:	e9 93 f8             	jmp    801008c6 <master_early_entry+0x17>
80101033:	ff                   	(bad)  
80101034:	ff                   	.byte 0xff

80101035 <vector192>:
80101035:	6a 00                	push   $0x0
80101037:	68 c0 00             	push   $0xc0
8010103a:	00 00                	add    %al,(%bx,%si)
8010103c:	e9 87 f8             	jmp    801008c6 <master_early_entry+0x17>
8010103f:	ff                   	(bad)  
80101040:	ff                   	.byte 0xff

80101041 <vector193>:
80101041:	6a 00                	push   $0x0
80101043:	68 c1 00             	push   $0xc1
80101046:	00 00                	add    %al,(%bx,%si)
80101048:	e9 7b f8             	jmp    801008c6 <master_early_entry+0x17>
8010104b:	ff                   	(bad)  
8010104c:	ff                   	.byte 0xff

8010104d <vector194>:
8010104d:	6a 00                	push   $0x0
8010104f:	68 c2 00             	push   $0xc2
80101052:	00 00                	add    %al,(%bx,%si)
80101054:	e9 6f f8             	jmp    801008c6 <master_early_entry+0x17>
80101057:	ff                   	(bad)  
80101058:	ff                   	.byte 0xff

80101059 <vector195>:
80101059:	6a 00                	push   $0x0
8010105b:	68 c3 00             	push   $0xc3
8010105e:	00 00                	add    %al,(%bx,%si)
80101060:	e9 63 f8             	jmp    801008c6 <master_early_entry+0x17>
80101063:	ff                   	(bad)  
80101064:	ff                   	.byte 0xff

80101065 <vector196>:
80101065:	6a 00                	push   $0x0
80101067:	68 c4 00             	push   $0xc4
8010106a:	00 00                	add    %al,(%bx,%si)
8010106c:	e9 57 f8             	jmp    801008c6 <master_early_entry+0x17>
8010106f:	ff                   	(bad)  
80101070:	ff                   	.byte 0xff

80101071 <vector197>:
80101071:	6a 00                	push   $0x0
80101073:	68 c5 00             	push   $0xc5
80101076:	00 00                	add    %al,(%bx,%si)
80101078:	e9 4b f8             	jmp    801008c6 <master_early_entry+0x17>
8010107b:	ff                   	(bad)  
8010107c:	ff                   	.byte 0xff

8010107d <vector198>:
8010107d:	6a 00                	push   $0x0
8010107f:	68 c6 00             	push   $0xc6
80101082:	00 00                	add    %al,(%bx,%si)
80101084:	e9 3f f8             	jmp    801008c6 <master_early_entry+0x17>
80101087:	ff                   	(bad)  
80101088:	ff                   	.byte 0xff

80101089 <vector199>:
80101089:	6a 00                	push   $0x0
8010108b:	68 c7 00             	push   $0xc7
8010108e:	00 00                	add    %al,(%bx,%si)
80101090:	e9 33 f8             	jmp    801008c6 <master_early_entry+0x17>
80101093:	ff                   	(bad)  
80101094:	ff                   	.byte 0xff

80101095 <vector200>:
80101095:	6a 00                	push   $0x0
80101097:	68 c8 00             	push   $0xc8
8010109a:	00 00                	add    %al,(%bx,%si)
8010109c:	e9 27 f8             	jmp    801008c6 <master_early_entry+0x17>
8010109f:	ff                   	(bad)  
801010a0:	ff                   	.byte 0xff

801010a1 <vector201>:
801010a1:	6a 00                	push   $0x0
801010a3:	68 c9 00             	push   $0xc9
801010a6:	00 00                	add    %al,(%bx,%si)
801010a8:	e9 1b f8             	jmp    801008c6 <master_early_entry+0x17>
801010ab:	ff                   	(bad)  
801010ac:	ff                   	.byte 0xff

801010ad <vector202>:
801010ad:	6a 00                	push   $0x0
801010af:	68 ca 00             	push   $0xca
801010b2:	00 00                	add    %al,(%bx,%si)
801010b4:	e9 0f f8             	jmp    801008c6 <master_early_entry+0x17>
801010b7:	ff                   	(bad)  
801010b8:	ff                   	.byte 0xff

801010b9 <vector203>:
801010b9:	6a 00                	push   $0x0
801010bb:	68 cb 00             	push   $0xcb
801010be:	00 00                	add    %al,(%bx,%si)
801010c0:	e9 03 f8             	jmp    801008c6 <master_early_entry+0x17>
801010c3:	ff                   	(bad)  
801010c4:	ff                   	.byte 0xff

801010c5 <vector204>:
801010c5:	6a 00                	push   $0x0
801010c7:	68 cc 00             	push   $0xcc
801010ca:	00 00                	add    %al,(%bx,%si)
801010cc:	e9 f7 f7             	jmp    801008c6 <master_early_entry+0x17>
801010cf:	ff                   	(bad)  
801010d0:	ff                   	.byte 0xff

801010d1 <vector205>:
801010d1:	6a 00                	push   $0x0
801010d3:	68 cd 00             	push   $0xcd
801010d6:	00 00                	add    %al,(%bx,%si)
801010d8:	e9 eb f7             	jmp    801008c6 <master_early_entry+0x17>
801010db:	ff                   	(bad)  
801010dc:	ff                   	.byte 0xff

801010dd <vector206>:
801010dd:	6a 00                	push   $0x0
801010df:	68 ce 00             	push   $0xce
801010e2:	00 00                	add    %al,(%bx,%si)
801010e4:	e9 df f7             	jmp    801008c6 <master_early_entry+0x17>
801010e7:	ff                   	(bad)  
801010e8:	ff                   	.byte 0xff

801010e9 <vector207>:
801010e9:	6a 00                	push   $0x0
801010eb:	68 cf 00             	push   $0xcf
801010ee:	00 00                	add    %al,(%bx,%si)
801010f0:	e9 d3 f7             	jmp    801008c6 <master_early_entry+0x17>
801010f3:	ff                   	(bad)  
801010f4:	ff                   	.byte 0xff

801010f5 <vector208>:
801010f5:	6a 00                	push   $0x0
801010f7:	68 d0 00             	push   $0xd0
801010fa:	00 00                	add    %al,(%bx,%si)
801010fc:	e9 c7 f7             	jmp    801008c6 <master_early_entry+0x17>
801010ff:	ff                   	(bad)  
80101100:	ff                   	.byte 0xff

80101101 <vector209>:
80101101:	6a 00                	push   $0x0
80101103:	68 d1 00             	push   $0xd1
80101106:	00 00                	add    %al,(%bx,%si)
80101108:	e9 bb f7             	jmp    801008c6 <master_early_entry+0x17>
8010110b:	ff                   	(bad)  
8010110c:	ff                   	.byte 0xff

8010110d <vector210>:
8010110d:	6a 00                	push   $0x0
8010110f:	68 d2 00             	push   $0xd2
80101112:	00 00                	add    %al,(%bx,%si)
80101114:	e9 af f7             	jmp    801008c6 <master_early_entry+0x17>
80101117:	ff                   	(bad)  
80101118:	ff                   	.byte 0xff

80101119 <vector211>:
80101119:	6a 00                	push   $0x0
8010111b:	68 d3 00             	push   $0xd3
8010111e:	00 00                	add    %al,(%bx,%si)
80101120:	e9 a3 f7             	jmp    801008c6 <master_early_entry+0x17>
80101123:	ff                   	(bad)  
80101124:	ff                   	.byte 0xff

80101125 <vector212>:
80101125:	6a 00                	push   $0x0
80101127:	68 d4 00             	push   $0xd4
8010112a:	00 00                	add    %al,(%bx,%si)
8010112c:	e9 97 f7             	jmp    801008c6 <master_early_entry+0x17>
8010112f:	ff                   	(bad)  
80101130:	ff                   	.byte 0xff

80101131 <vector213>:
80101131:	6a 00                	push   $0x0
80101133:	68 d5 00             	push   $0xd5
80101136:	00 00                	add    %al,(%bx,%si)
80101138:	e9 8b f7             	jmp    801008c6 <master_early_entry+0x17>
8010113b:	ff                   	(bad)  
8010113c:	ff                   	.byte 0xff

8010113d <vector214>:
8010113d:	6a 00                	push   $0x0
8010113f:	68 d6 00             	push   $0xd6
80101142:	00 00                	add    %al,(%bx,%si)
80101144:	e9 7f f7             	jmp    801008c6 <master_early_entry+0x17>
80101147:	ff                   	(bad)  
80101148:	ff                   	.byte 0xff

80101149 <vector215>:
80101149:	6a 00                	push   $0x0
8010114b:	68 d7 00             	push   $0xd7
8010114e:	00 00                	add    %al,(%bx,%si)
80101150:	e9 73 f7             	jmp    801008c6 <master_early_entry+0x17>
80101153:	ff                   	(bad)  
80101154:	ff                   	.byte 0xff

80101155 <vector216>:
80101155:	6a 00                	push   $0x0
80101157:	68 d8 00             	push   $0xd8
8010115a:	00 00                	add    %al,(%bx,%si)
8010115c:	e9 67 f7             	jmp    801008c6 <master_early_entry+0x17>
8010115f:	ff                   	(bad)  
80101160:	ff                   	.byte 0xff

80101161 <vector217>:
80101161:	6a 00                	push   $0x0
80101163:	68 d9 00             	push   $0xd9
80101166:	00 00                	add    %al,(%bx,%si)
80101168:	e9 5b f7             	jmp    801008c6 <master_early_entry+0x17>
8010116b:	ff                   	(bad)  
8010116c:	ff                   	.byte 0xff

8010116d <vector218>:
8010116d:	6a 00                	push   $0x0
8010116f:	68 da 00             	push   $0xda
80101172:	00 00                	add    %al,(%bx,%si)
80101174:	e9 4f f7             	jmp    801008c6 <master_early_entry+0x17>
80101177:	ff                   	(bad)  
80101178:	ff                   	.byte 0xff

80101179 <vector219>:
80101179:	6a 00                	push   $0x0
8010117b:	68 db 00             	push   $0xdb
8010117e:	00 00                	add    %al,(%bx,%si)
80101180:	e9 43 f7             	jmp    801008c6 <master_early_entry+0x17>
80101183:	ff                   	(bad)  
80101184:	ff                   	.byte 0xff

80101185 <vector220>:
80101185:	6a 00                	push   $0x0
80101187:	68 dc 00             	push   $0xdc
8010118a:	00 00                	add    %al,(%bx,%si)
8010118c:	e9 37 f7             	jmp    801008c6 <master_early_entry+0x17>
8010118f:	ff                   	(bad)  
80101190:	ff                   	.byte 0xff

80101191 <vector221>:
80101191:	6a 00                	push   $0x0
80101193:	68 dd 00             	push   $0xdd
80101196:	00 00                	add    %al,(%bx,%si)
80101198:	e9 2b f7             	jmp    801008c6 <master_early_entry+0x17>
8010119b:	ff                   	(bad)  
8010119c:	ff                   	.byte 0xff

8010119d <vector222>:
8010119d:	6a 00                	push   $0x0
8010119f:	68 de 00             	push   $0xde
801011a2:	00 00                	add    %al,(%bx,%si)
801011a4:	e9 1f f7             	jmp    801008c6 <master_early_entry+0x17>
801011a7:	ff                   	(bad)  
801011a8:	ff                   	.byte 0xff

801011a9 <vector223>:
801011a9:	6a 00                	push   $0x0
801011ab:	68 df 00             	push   $0xdf
801011ae:	00 00                	add    %al,(%bx,%si)
801011b0:	e9 13 f7             	jmp    801008c6 <master_early_entry+0x17>
801011b3:	ff                   	(bad)  
801011b4:	ff                   	.byte 0xff

801011b5 <vector224>:
801011b5:	6a 00                	push   $0x0
801011b7:	68 e0 00             	push   $0xe0
801011ba:	00 00                	add    %al,(%bx,%si)
801011bc:	e9 07 f7             	jmp    801008c6 <master_early_entry+0x17>
801011bf:	ff                   	(bad)  
801011c0:	ff                   	.byte 0xff

801011c1 <vector225>:
801011c1:	6a 00                	push   $0x0
801011c3:	68 e1 00             	push   $0xe1
801011c6:	00 00                	add    %al,(%bx,%si)
801011c8:	e9 fb f6             	jmp    801008c6 <master_early_entry+0x17>
801011cb:	ff                   	(bad)  
801011cc:	ff                   	.byte 0xff

801011cd <vector226>:
801011cd:	6a 00                	push   $0x0
801011cf:	68 e2 00             	push   $0xe2
801011d2:	00 00                	add    %al,(%bx,%si)
801011d4:	e9 ef f6             	jmp    801008c6 <master_early_entry+0x17>
801011d7:	ff                   	(bad)  
801011d8:	ff                   	.byte 0xff

801011d9 <vector227>:
801011d9:	6a 00                	push   $0x0
801011db:	68 e3 00             	push   $0xe3
801011de:	00 00                	add    %al,(%bx,%si)
801011e0:	e9 e3 f6             	jmp    801008c6 <master_early_entry+0x17>
801011e3:	ff                   	(bad)  
801011e4:	ff                   	.byte 0xff

801011e5 <vector228>:
801011e5:	6a 00                	push   $0x0
801011e7:	68 e4 00             	push   $0xe4
801011ea:	00 00                	add    %al,(%bx,%si)
801011ec:	e9 d7 f6             	jmp    801008c6 <master_early_entry+0x17>
801011ef:	ff                   	(bad)  
801011f0:	ff                   	.byte 0xff

801011f1 <vector229>:
801011f1:	6a 00                	push   $0x0
801011f3:	68 e5 00             	push   $0xe5
801011f6:	00 00                	add    %al,(%bx,%si)
801011f8:	e9 cb f6             	jmp    801008c6 <master_early_entry+0x17>
801011fb:	ff                   	(bad)  
801011fc:	ff                   	.byte 0xff

801011fd <vector230>:
801011fd:	6a 00                	push   $0x0
801011ff:	68 e6 00             	push   $0xe6
80101202:	00 00                	add    %al,(%bx,%si)
80101204:	e9 bf f6             	jmp    801008c6 <master_early_entry+0x17>
80101207:	ff                   	(bad)  
80101208:	ff                   	.byte 0xff

80101209 <vector231>:
80101209:	6a 00                	push   $0x0
8010120b:	68 e7 00             	push   $0xe7
8010120e:	00 00                	add    %al,(%bx,%si)
80101210:	e9 b3 f6             	jmp    801008c6 <master_early_entry+0x17>
80101213:	ff                   	(bad)  
80101214:	ff                   	.byte 0xff

80101215 <vector232>:
80101215:	6a 00                	push   $0x0
80101217:	68 e8 00             	push   $0xe8
8010121a:	00 00                	add    %al,(%bx,%si)
8010121c:	e9 a7 f6             	jmp    801008c6 <master_early_entry+0x17>
8010121f:	ff                   	(bad)  
80101220:	ff                   	.byte 0xff

80101221 <vector233>:
80101221:	6a 00                	push   $0x0
80101223:	68 e9 00             	push   $0xe9
80101226:	00 00                	add    %al,(%bx,%si)
80101228:	e9 9b f6             	jmp    801008c6 <master_early_entry+0x17>
8010122b:	ff                   	(bad)  
8010122c:	ff                   	.byte 0xff

8010122d <vector234>:
8010122d:	6a 00                	push   $0x0
8010122f:	68 ea 00             	push   $0xea
80101232:	00 00                	add    %al,(%bx,%si)
80101234:	e9 8f f6             	jmp    801008c6 <master_early_entry+0x17>
80101237:	ff                   	(bad)  
80101238:	ff                   	.byte 0xff

80101239 <vector235>:
80101239:	6a 00                	push   $0x0
8010123b:	68 eb 00             	push   $0xeb
8010123e:	00 00                	add    %al,(%bx,%si)
80101240:	e9 83 f6             	jmp    801008c6 <master_early_entry+0x17>
80101243:	ff                   	(bad)  
80101244:	ff                   	.byte 0xff

80101245 <vector236>:
80101245:	6a 00                	push   $0x0
80101247:	68 ec 00             	push   $0xec
8010124a:	00 00                	add    %al,(%bx,%si)
8010124c:	e9 77 f6             	jmp    801008c6 <master_early_entry+0x17>
8010124f:	ff                   	(bad)  
80101250:	ff                   	.byte 0xff

80101251 <vector237>:
80101251:	6a 00                	push   $0x0
80101253:	68 ed 00             	push   $0xed
80101256:	00 00                	add    %al,(%bx,%si)
80101258:	e9 6b f6             	jmp    801008c6 <master_early_entry+0x17>
8010125b:	ff                   	(bad)  
8010125c:	ff                   	.byte 0xff

8010125d <vector238>:
8010125d:	6a 00                	push   $0x0
8010125f:	68 ee 00             	push   $0xee
80101262:	00 00                	add    %al,(%bx,%si)
80101264:	e9 5f f6             	jmp    801008c6 <master_early_entry+0x17>
80101267:	ff                   	(bad)  
80101268:	ff                   	.byte 0xff

80101269 <vector239>:
80101269:	6a 00                	push   $0x0
8010126b:	68 ef 00             	push   $0xef
8010126e:	00 00                	add    %al,(%bx,%si)
80101270:	e9 53 f6             	jmp    801008c6 <master_early_entry+0x17>
80101273:	ff                   	(bad)  
80101274:	ff                   	.byte 0xff

80101275 <vector240>:
80101275:	6a 00                	push   $0x0
80101277:	68 f0 00             	push   $0xf0
8010127a:	00 00                	add    %al,(%bx,%si)
8010127c:	e9 47 f6             	jmp    801008c6 <master_early_entry+0x17>
8010127f:	ff                   	(bad)  
80101280:	ff                   	.byte 0xff

80101281 <vector241>:
80101281:	6a 00                	push   $0x0
80101283:	68 f1 00             	push   $0xf1
80101286:	00 00                	add    %al,(%bx,%si)
80101288:	e9 3b f6             	jmp    801008c6 <master_early_entry+0x17>
8010128b:	ff                   	(bad)  
8010128c:	ff                   	.byte 0xff

8010128d <vector242>:
8010128d:	6a 00                	push   $0x0
8010128f:	68 f2 00             	push   $0xf2
80101292:	00 00                	add    %al,(%bx,%si)
80101294:	e9 2f f6             	jmp    801008c6 <master_early_entry+0x17>
80101297:	ff                   	(bad)  
80101298:	ff                   	.byte 0xff

80101299 <vector243>:
80101299:	6a 00                	push   $0x0
8010129b:	68 f3 00             	push   $0xf3
8010129e:	00 00                	add    %al,(%bx,%si)
801012a0:	e9 23 f6             	jmp    801008c6 <master_early_entry+0x17>
801012a3:	ff                   	(bad)  
801012a4:	ff                   	.byte 0xff

801012a5 <vector244>:
801012a5:	6a 00                	push   $0x0
801012a7:	68 f4 00             	push   $0xf4
801012aa:	00 00                	add    %al,(%bx,%si)
801012ac:	e9 17 f6             	jmp    801008c6 <master_early_entry+0x17>
801012af:	ff                   	(bad)  
801012b0:	ff                   	.byte 0xff

801012b1 <vector245>:
801012b1:	6a 00                	push   $0x0
801012b3:	68 f5 00             	push   $0xf5
801012b6:	00 00                	add    %al,(%bx,%si)
801012b8:	e9 0b f6             	jmp    801008c6 <master_early_entry+0x17>
801012bb:	ff                   	(bad)  
801012bc:	ff                   	.byte 0xff

801012bd <vector246>:
801012bd:	6a 00                	push   $0x0
801012bf:	68 f6 00             	push   $0xf6
801012c2:	00 00                	add    %al,(%bx,%si)
801012c4:	e9 ff f5             	jmp    801008c6 <master_early_entry+0x17>
801012c7:	ff                   	(bad)  
801012c8:	ff                   	.byte 0xff

801012c9 <vector247>:
801012c9:	6a 00                	push   $0x0
801012cb:	68 f7 00             	push   $0xf7
801012ce:	00 00                	add    %al,(%bx,%si)
801012d0:	e9 f3 f5             	jmp    801008c6 <master_early_entry+0x17>
801012d3:	ff                   	(bad)  
801012d4:	ff                   	.byte 0xff

801012d5 <vector248>:
801012d5:	6a 00                	push   $0x0
801012d7:	68 f8 00             	push   $0xf8
801012da:	00 00                	add    %al,(%bx,%si)
801012dc:	e9 e7 f5             	jmp    801008c6 <master_early_entry+0x17>
801012df:	ff                   	(bad)  
801012e0:	ff                   	.byte 0xff

801012e1 <vector249>:
801012e1:	6a 00                	push   $0x0
801012e3:	68 f9 00             	push   $0xf9
801012e6:	00 00                	add    %al,(%bx,%si)
801012e8:	e9 db f5             	jmp    801008c6 <master_early_entry+0x17>
801012eb:	ff                   	(bad)  
801012ec:	ff                   	.byte 0xff

801012ed <vector250>:
801012ed:	6a 00                	push   $0x0
801012ef:	68 fa 00             	push   $0xfa
801012f2:	00 00                	add    %al,(%bx,%si)
801012f4:	e9 cf f5             	jmp    801008c6 <master_early_entry+0x17>
801012f7:	ff                   	(bad)  
801012f8:	ff                   	.byte 0xff

801012f9 <vector251>:
801012f9:	6a 00                	push   $0x0
801012fb:	68 fb 00             	push   $0xfb
801012fe:	00 00                	add    %al,(%bx,%si)
80101300:	e9 c3 f5             	jmp    801008c6 <master_early_entry+0x17>
80101303:	ff                   	(bad)  
80101304:	ff                   	.byte 0xff

80101305 <vector252>:
80101305:	6a 00                	push   $0x0
80101307:	68 fc 00             	push   $0xfc
8010130a:	00 00                	add    %al,(%bx,%si)
8010130c:	e9 b7 f5             	jmp    801008c6 <master_early_entry+0x17>
8010130f:	ff                   	(bad)  
80101310:	ff                   	.byte 0xff

80101311 <vector253>:
80101311:	6a 00                	push   $0x0
80101313:	68 fd 00             	push   $0xfd
80101316:	00 00                	add    %al,(%bx,%si)
80101318:	e9 ab f5             	jmp    801008c6 <master_early_entry+0x17>
8010131b:	ff                   	(bad)  
8010131c:	ff                   	.byte 0xff

8010131d <vector254>:
8010131d:	6a 00                	push   $0x0
8010131f:	68 fe 00             	push   $0xfe
80101322:	00 00                	add    %al,(%bx,%si)
80101324:	e9 9f f5             	jmp    801008c6 <master_early_entry+0x17>
80101327:	ff                   	(bad)  
80101328:	ff                   	.byte 0xff

80101329 <vector255>:
80101329:	6a 00                	push   $0x0
8010132b:	68 ff 00             	push   $0xff
8010132e:	00 00                	add    %al,(%bx,%si)
80101330:	e9 93 f5             	jmp    801008c6 <master_early_entry+0x17>
80101333:	ff                   	(bad)  
80101334:	ff 66 90             	jmp    *-0x70(%bp)
80101337:	90                   	nop

80101338 <__kputs>:
80101338:	56                   	push   %si
80101339:	53                   	push   %bx
8010133a:	51                   	push   %cx
8010133b:	e8 50 44             	call   8010578e <__x86.get_pc_thunk.bx+0x2>
8010133e:	00 00                	add    %al,(%bx,%si)
80101340:	81 c6 80 9f          	add    $0x9f80,%si
80101344:	00 00                	add    %al,(%bx,%si)
80101346:	8b 5c 24             	mov    0x24(%si),%bx
80101349:	10 8b 96 30          	adc    %cl,0x3096(%bp,%di)
8010134d:	00 00                	add    %al,(%bx,%si)
8010134f:	00 85 d2 74          	add    %al,0x74d2(%di)
80101353:	3e 8a 03             	mov    %ds:(%bp,%di),%al
80101356:	84 c0                	test   %al,%al
80101358:	75 1b                	jne    80101375 <__kputs+0x3d>
8010135a:	eb 30                	jmp    8010138c <__kputs+0x54>
8010135c:	83 ec 0c             	sub    $0xc,%sp
8010135f:	0f be 03             	movsbw (%bp,%di),%ax
80101362:	50                   	push   %ax
80101363:	ff d2                	call   *%dx
80101365:	43                   	inc    %bx
80101366:	8a 03                	mov    (%bp,%di),%al
80101368:	83 c4 10             	add    $0x10,%sp
8010136b:	84 c0                	test   %al,%al
8010136d:	74 1d                	je     8010138c <__kputs+0x54>
8010136f:	8b 96 30 00          	mov    0x30(%bp),%dx
80101373:	00 00                	add    %al,(%bx,%si)
80101375:	3c 0a                	cmp    $0xa,%al
80101377:	75 e3                	jne    8010135c <__kputs+0x24>
80101379:	83 ec 0c             	sub    $0xc,%sp
8010137c:	6a 0d                	push   $0xd
8010137e:	ff d2                	call   *%dx
80101380:	8b 96 30 00          	mov    0x30(%bp),%dx
80101384:	00 00                	add    %al,(%bx,%si)
80101386:	83 c4 10             	add    $0x10,%sp
80101389:	eb d1                	jmp    8010135c <__kputs+0x24>
8010138b:	90                   	nop
8010138c:	31 c0                	xor    %ax,%ax
8010138e:	5a                   	pop    %dx
8010138f:	5b                   	pop    %bx
80101390:	5e                   	pop    %si
80101391:	c3                   	ret    
80101392:	b8 ff ff             	mov    $0xffff,%ax
80101395:	ff                   	(bad)  
80101396:	ff                   	(bad)  
80101397:	eb f5                	jmp    8010138e <__kputs+0x56>
80101399:	8d 76 00             	lea    0x0(%bp),%si

8010139c <set_console>:
8010139c:	e8 f3 43             	call   80105792 <__x86.get_pc_thunk.si+0x2>
8010139f:	00 00                	add    %al,(%bx,%si)
801013a1:	05 1f 9f             	add    $0x9f1f,%ax
801013a4:	00 00                	add    %al,(%bx,%si)
801013a6:	8b 54 24             	mov    0x24(%si),%dx
801013a9:	04 89                	add    $0x89,%al
801013ab:	90                   	nop
801013ac:	30 00                	xor    %al,(%bx,%si)
801013ae:	00 00                	add    %al,(%bx,%si)
801013b0:	8b 54 24             	mov    0x24(%si),%dx
801013b3:	08 89 90 2c          	or     %cl,0x2c90(%bx,%di)
801013b7:	00 00                	add    %al,(%bx,%si)
801013b9:	00 c3                	add    %al,%bl
801013bb:	90                   	nop

801013bc <kprintf>:
801013bc:	57                   	push   %di
801013bd:	56                   	push   %si
801013be:	53                   	push   %bx
801013bf:	81 ec 00 04          	sub    $0x400,%sp
801013c3:	00 00                	add    %al,(%bx,%si)
801013c5:	e8 c2 43             	call   8010578a <__text_end_kern+0x2>
801013c8:	00 00                	add    %al,(%bx,%si)
801013ca:	81 c3 f6 9e          	add    $0x9ef6,%bx
801013ce:	00 00                	add    %al,(%bx,%si)
801013d0:	8d 84 24 14          	lea    0x1424(%si),%ax
801013d4:	04 00                	add    $0x0,%al
801013d6:	00 50 ff             	add    %dl,-0x1(%bx,%si)
801013d9:	b4 24                	mov    $0x24,%ah
801013db:	14 04                	adc    $0x4,%al
801013dd:	00 00                	add    %al,(%bx,%si)
801013df:	68 00 04             	push   $0x400
801013e2:	00 00                	add    %al,(%bx,%si)
801013e4:	8d 74 24             	lea    0x24(%si),%si
801013e7:	0c 56                	or     $0x56,%al
801013e9:	e8 c2 3a             	call   80104eae <io_port_init+0x46>
801013ec:	00 00                	add    %al,(%bx,%si)
801013ee:	89 c7                	mov    %ax,%di
801013f0:	8b 83 2c 00          	mov    0x2c(%bp,%di),%ax
801013f4:	00 00                	add    %al,(%bx,%si)
801013f6:	83 c4 10             	add    $0x10,%sp
801013f9:	85 c0                	test   %ax,%ax
801013fb:	74 09                	je     80101406 <kprintf+0x4a>
801013fd:	83 ec 0c             	sub    $0xc,%sp
80101400:	56                   	push   %si
80101401:	ff d0                	call   *%ax
80101403:	83 c4 10             	add    $0x10,%sp
80101406:	89 f8                	mov    %di,%ax
80101408:	81 c4 00 04          	add    $0x400,%sp
8010140c:	00 00                	add    %al,(%bx,%si)
8010140e:	5b                   	pop    %bx
8010140f:	5e                   	pop    %si
80101410:	5f                   	pop    %di
80101411:	c3                   	ret    
80101412:	66 90                	xchg   %eax,%eax

80101414 <kputchar>:
80101414:	e8 7b 43             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80101417:	00 00                	add    %al,(%bx,%si)
80101419:	05 a7 9e             	add    $0x9ea7,%ax
8010141c:	00 00                	add    %al,(%bx,%si)
8010141e:	8b 80 30 00          	mov    0x30(%bx,%si),%ax
80101422:	00 00                	add    %al,(%bx,%si)
80101424:	85 c0                	test   %ax,%ax
80101426:	74 04                	je     8010142c <kputchar+0x18>
80101428:	ff e0                	jmp    *%ax
8010142a:	66 90                	xchg   %eax,%eax
8010142c:	b8 ff ff             	mov    $0xffff,%ax
8010142f:	ff                   	(bad)  
80101430:	ff c3                	inc    %bx
80101432:	66 90                	xchg   %eax,%eax

80101434 <get_default_kputs>:
80101434:	e8 5b 43             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80101437:	00 00                	add    %al,(%bx,%si)
80101439:	05 87 9e             	add    $0x9e87,%ax
8010143c:	00 00                	add    %al,(%bx,%si)
8010143e:	8d 80 78 60          	lea    0x6078(%bx,%si),%ax
80101442:	ff                   	(bad)  
80101443:	ff c3                	inc    %bx
80101445:	8d 76 00             	lea    0x0(%bp),%si

80101448 <kputs>:
80101448:	e8 47 43             	call   80105792 <__x86.get_pc_thunk.si+0x2>
8010144b:	00 00                	add    %al,(%bx,%si)
8010144d:	05 73 9e             	add    $0x9e73,%ax
80101450:	00 00                	add    %al,(%bx,%si)
80101452:	8b 80 2c 00          	mov    0x2c(%bx,%si),%ax
80101456:	00 00                	add    %al,(%bx,%si)
80101458:	85 c0                	test   %ax,%ax
8010145a:	74 04                	je     80101460 <kputs+0x18>
8010145c:	ff e0                	jmp    *%ax
8010145e:	66 90                	xchg   %eax,%eax
80101460:	b8 ff ff             	mov    $0xffff,%ax
80101463:	ff                   	(bad)  
80101464:	ff c3                	inc    %bx
80101466:	66 90                	xchg   %eax,%eax

80101468 <early_console_init>:
80101468:	57                   	push   %di
80101469:	53                   	push   %bx
8010146a:	83 ec 34             	sub    $0x34,%sp
8010146d:	e8 1a 43             	call   8010578a <__text_end_kern+0x2>
80101470:	00 00                	add    %al,(%bx,%si)
80101472:	81 c3 4e 9e          	add    $0x9e4e,%bx
80101476:	00 00                	add    %al,(%bx,%si)
80101478:	8b 44 24             	mov    0x24(%si),%ax
8010147b:	44                   	inc    %sp
8010147c:	8b 54 24             	mov    0x24(%si),%dx
8010147f:	48                   	dec    %ax
80101480:	89 44 24             	mov    %ax,0x24(%si)
80101483:	08 89 54 24          	or     %cl,0x2454(%bx,%di)
80101487:	0c 8b                	or     $0x8b,%al
80101489:	44                   	inc    %sp
8010148a:	24 4c                	and    $0x4c,%al
8010148c:	83 f8 01             	cmp    $0x1,%ax
8010148f:	0f 84 8b 00          	je     8010151e <early_console_init+0xb6>
80101493:	00 00                	add    %al,(%bx,%si)
80101495:	83 f8 02             	cmp    $0x2,%ax
80101498:	74 3a                	je     801014d4 <early_console_init+0x6c>
8010149a:	85 c0                	test   %ax,%ax
8010149c:	74 0e                	je     801014ac <early_console_init+0x44>
8010149e:	b8 a5 ff             	mov    $0xffa5,%ax
801014a1:	ff                   	(bad)  
801014a2:	ff 83 c4 34          	incw   0x34c4(%bp,%di)
801014a6:	5b                   	pop    %bx
801014a7:	5f                   	pop    %di
801014a8:	c3                   	ret    
801014a9:	8d 76 00             	lea    0x0(%bp),%si
801014ac:	8b 44 24             	mov    0x24(%si),%ax
801014af:	08 8b 54 24          	or     %cl,0x2454(%bp,%di)
801014b3:	0c 83                	or     $0x83,%al
801014b5:	ec                   	in     (%dx),%al
801014b6:	0c 52                	or     $0x52,%al
801014b8:	50                   	push   %ax
801014b9:	ff 74 24             	pushw  0x24(%si)
801014bc:	20 ff                	and    %bh,%bh
801014be:	74 24                	je     801014e4 <early_console_init+0x7c>
801014c0:	20 ff                	and    %bh,%bh
801014c2:	74 24                	je     801014e8 <early_console_init+0x80>
801014c4:	5c                   	pop    %sp
801014c5:	e8 02 f1             	call   801005ca <driver_putc+0x96>
801014c8:	ff                   	(bad)  
801014c9:	ff 83 c4 20          	incw   0x20c4(%bp,%di)
801014cd:	83 c4 34             	add    $0x34,%sp
801014d0:	5b                   	pop    %bx
801014d1:	5f                   	pop    %di
801014d2:	c3                   	ret    
801014d3:	90                   	nop
801014d4:	8d 7c 24             	lea    0x24(%si),%di
801014d7:	1c b9                	sbb    $0xb9,%al
801014d9:	05 00 00             	add    $0x0,%ax
801014dc:	00 31                	add    %dh,(%bx,%di)
801014de:	c0                   	(bad)  
801014df:	f3 ab                	rep stos %ax,%es:(%di)
801014e1:	8b 44 24             	mov    0x24(%si),%ax
801014e4:	08 8b 54 24          	or     %cl,0x2454(%bp,%di)
801014e8:	0c 89                	or     $0x89,%al
801014ea:	44                   	inc    %sp
801014eb:	24 1c                	and    $0x1c,%al
801014ed:	89 54 24             	mov    %dx,0x24(%si)
801014f0:	20 c7                	and    %al,%bh
801014f2:	44                   	inc    %sp
801014f3:	24 28                	and    $0x28,%al
801014f5:	00 10                	add    %dl,(%bx,%si)
801014f7:	00 00                	add    %al,(%bx,%si)
801014f9:	c7 44 24 2c 01       	movw   $0x12c,0x24(%si)
801014fe:	00 00                	add    %al,(%bx,%si)
80101500:	00 83 ec 0c          	add    %al,0xcec(%bp,%di)
80101504:	8d 44 24             	lea    0x24(%si),%ax
80101507:	28 50 e8             	sub    %dl,-0x18(%bx,%si)
8010150a:	52                   	push   %dx
8010150b:	06                   	push   %es
8010150c:	00 00                	add    %al,(%bx,%si)
8010150e:	83 c4 10             	add    $0x10,%sp
80101511:	85 c0                	test   %ax,%ax
80101513:	78 8e                	js     801014a3 <early_console_init+0x3b>
80101515:	8b 44 24             	mov    0x24(%si),%ax
80101518:	24 31                	and    $0x31,%al
8010151a:	d2 eb                	shr    %cl,%bl
8010151c:	97                   	xchg   %ax,%di
8010151d:	8d 76 00             	lea    0x0(%bp),%si
80101520:	8b 54 24             	mov    0x24(%si),%dx
80101523:	08 89 d0 85          	or     %cl,-0x7a30(%bx,%di)
80101527:	d2 78 ef             	sarb   %cl,-0x11(%bx,%si)
8010152a:	05 00 00             	add    $0x0,%ax
8010152d:	00 80 31 d2          	add    %al,-0x2dcf(%bx,%si)
80101531:	eb 81                	jmp    801014b4 <early_console_init+0x4c>
80101533:	90                   	nop

80101534 <__remove>:
80101534:	b8 ff ff             	mov    $0xffff,%ax
80101537:	ff                   	(bad)  
80101538:	ff c3                	inc    %bx
8010153a:	66 90                	xchg   %eax,%eax

8010153c <__next>:
8010153c:	31 c0                	xor    %ax,%ax
8010153e:	c3                   	ret    
8010153f:	90                   	nop

80101540 <__from_id>:
80101540:	31 c0                	xor    %ax,%ax
80101542:	c3                   	ret    
80101543:	90                   	nop

80101544 <__from_name>:
80101544:	31 c0                	xor    %ax,%ax
80101546:	c3                   	ret    
80101547:	90                   	nop

80101548 <__add>:
80101548:	b8 ff ff             	mov    $0xffff,%ax
8010154b:	ff                   	(bad)  
8010154c:	ff c3                	inc    %bx
8010154e:	66 90                	xchg   %eax,%eax

80101550 <set_device_index>:
80101550:	57                   	push   %di
80101551:	56                   	push   %si
80101552:	e8 3d 42             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80101555:	00 00                	add    %al,(%bx,%si)
80101557:	05 69 9d             	add    $0x9d69,%ax
8010155a:	00 00                	add    %al,(%bx,%si)
8010155c:	8b 74 24             	mov    0x24(%si),%si
8010155f:	0c 8d                	or     $0x8d,%al
80101561:	80 64 ff ff          	andb   $0xff,-0x1(%si)
80101565:	ff                   	(bad)  
80101566:	b9 05 00             	mov    $0x5,%cx
80101569:	00 00                	add    %al,(%bx,%si)
8010156b:	89 c7                	mov    %ax,%di
8010156d:	f3 a5                	rep movsw %ds:(%si),%es:(%di)
8010156f:	5e                   	pop    %si
80101570:	5f                   	pop    %di
80101571:	c3                   	ret    
80101572:	66 90                	xchg   %eax,%eax

80101574 <dev_add>:
80101574:	e8 1b 42             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80101577:	00 00                	add    %al,(%bx,%si)
80101579:	05 47 9d             	add    $0x9d47,%ax
8010157c:	00 00                	add    %al,(%bx,%si)
8010157e:	ff a0 64 ff          	jmp    *-0x9c(%bx,%si)
80101582:	ff                   	(bad)  
80101583:	ff                   	.byte 0xff

80101584 <dev_remove>:
80101584:	e8 0b 42             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80101587:	00 00                	add    %al,(%bx,%si)
80101589:	05 37 9d             	add    $0x9d37,%ax
8010158c:	00 00                	add    %al,(%bx,%si)
8010158e:	ff a0 68 ff          	jmp    *-0x98(%bx,%si)
80101592:	ff                   	(bad)  
80101593:	ff                   	.byte 0xff

80101594 <dev_next>:
80101594:	e8 fb 41             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80101597:	00 00                	add    %al,(%bx,%si)
80101599:	05 27 9d             	add    $0x9d27,%ax
8010159c:	00 00                	add    %al,(%bx,%si)
8010159e:	ff a0 6c ff          	jmp    *-0x94(%bx,%si)
801015a2:	ff                   	(bad)  
801015a3:	ff                   	.byte 0xff

801015a4 <dev_from_id>:
801015a4:	e8 eb 41             	call   80105792 <__x86.get_pc_thunk.si+0x2>
801015a7:	00 00                	add    %al,(%bx,%si)
801015a9:	05 17 9d             	add    $0x9d17,%ax
801015ac:	00 00                	add    %al,(%bx,%si)
801015ae:	ff a0 70 ff          	jmp    *-0x90(%bx,%si)
801015b2:	ff                   	(bad)  
801015b3:	ff                   	.byte 0xff

801015b4 <dev_from_name>:
801015b4:	e8 db 41             	call   80105792 <__x86.get_pc_thunk.si+0x2>
801015b7:	00 00                	add    %al,(%bx,%si)
801015b9:	05 07 9d             	add    $0x9d07,%ax
801015bc:	00 00                	add    %al,(%bx,%si)
801015be:	ff a0 74 ff          	jmp    *-0x8c(%bx,%si)
801015c2:	ff                   	(bad)  
801015c3:	ff                   	.byte 0xff

801015c4 <do_early_initcalls>:
801015c4:	56                   	push   %si
801015c5:	53                   	push   %bx
801015c6:	51                   	push   %cx
801015c7:	e8 c8 41             	call   80105792 <__x86.get_pc_thunk.si+0x2>
801015ca:	00 00                	add    %al,(%bx,%si)
801015cc:	05 f4 9c             	add    $0x9cf4,%ax
801015cf:	00 00                	add    %al,(%bx,%si)
801015d1:	c7 c6 28 76          	mov    $0x7628,%si
801015d5:	11 80 c7 c3          	adc    %ax,-0x3c39(%bx,%si)
801015d9:	28 76 11             	sub    %dh,0x11(%bp)
801015dc:	80 39 f3             	cmpb   $0xf3,(%bx,%di)
801015df:	73 0c                	jae    801015ed <do_early_initcalls+0x29>
801015e1:	8d 76 00             	lea    0x0(%bp),%si
801015e4:	ff 13                	call   *(%bp,%di)
801015e6:	83 c3 04             	add    $0x4,%bx
801015e9:	39 f3                	cmp    %si,%bx
801015eb:	72 f7                	jb     801015e4 <do_early_initcalls+0x20>
801015ed:	31 c0                	xor    %ax,%ax
801015ef:	5a                   	pop    %dx
801015f0:	5b                   	pop    %bx
801015f1:	5e                   	pop    %si
801015f2:	c3                   	ret    
801015f3:	90                   	nop

801015f4 <do_initcalls>:
801015f4:	56                   	push   %si
801015f5:	53                   	push   %bx
801015f6:	51                   	push   %cx
801015f7:	e8 98 41             	call   80105792 <__x86.get_pc_thunk.si+0x2>
801015fa:	00 00                	add    %al,(%bx,%si)
801015fc:	05 c4 9c             	add    $0x9cc4,%ax
801015ff:	00 00                	add    %al,(%bx,%si)
80101601:	c7 c6 38 76          	mov    $0x7638,%si
80101605:	11 80 c7 c3          	adc    %ax,-0x3c39(%bx,%si)
80101609:	28 76 11             	sub    %dh,0x11(%bp)
8010160c:	80 39 f3             	cmpb   $0xf3,(%bx,%di)
8010160f:	73 0c                	jae    8010161d <do_initcalls+0x29>
80101611:	8d 76 00             	lea    0x0(%bp),%si
80101614:	ff 13                	call   *(%bp,%di)
80101616:	83 c3 04             	add    $0x4,%bx
80101619:	39 f3                	cmp    %si,%bx
8010161b:	72 f7                	jb     80101614 <do_initcalls+0x20>
8010161d:	31 c0                	xor    %ax,%ax
8010161f:	5a                   	pop    %dx
80101620:	5b                   	pop    %bx
80101621:	5e                   	pop    %si
80101622:	c3                   	ret    
80101623:	90                   	nop

80101624 <register_driver>:
80101624:	53                   	push   %bx
80101625:	83 ec 10             	sub    $0x10,%sp
80101628:	e8 5f 41             	call   8010578a <__text_end_kern+0x2>
8010162b:	00 00                	add    %al,(%bx,%si)
8010162d:	81 c3 93 9c          	add    $0x9c93,%bx
80101631:	00 00                	add    %al,(%bx,%si)
80101633:	ff 74 24             	pushw  0x24(%si)
80101636:	1c 8d                	sbb    $0x8d,%al
80101638:	83 08 a7             	orw    $0xffa7,(%bx,%si)
8010163b:	ff                   	(bad)  
8010163c:	ff 50 e8             	call   *-0x18(%bx,%si)
8010163f:	79 fd                	jns    8010163e <register_driver+0x1a>
80101641:	ff                   	(bad)  
80101642:	ff 83 c4 18          	incw   0x18c4(%bp,%di)
80101646:	5b                   	pop    %bx
80101647:	c3                   	ret    

80101648 <initdev>:
80101648:	57                   	push   %di
80101649:	56                   	push   %si
8010164a:	53                   	push   %bx
8010164b:	e8 3c 41             	call   8010578a <__text_end_kern+0x2>
8010164e:	00 00                	add    %al,(%bx,%si)
80101650:	81 c3 70 9c          	add    $0x9c70,%bx
80101654:	00 00                	add    %al,(%bx,%si)
80101656:	8b 44 24             	mov    0x24(%si),%ax
80101659:	10 8b 54 24          	adc    %cl,0x2454(%bp,%di)
8010165d:	18 8b 4c 24          	sbb    %cl,0x244c(%bp,%di)
80101661:	14 89                	adc    $0x89,%al
80101663:	48                   	dec    %ax
80101664:	40                   	inc    %ax
80101665:	b9 10 00             	mov    $0x10,%cx
80101668:	00 00                	add    %al,(%bx,%si)
8010166a:	89 c7                	mov    %ax,%di
8010166c:	89 d6                	mov    %dx,%si
8010166e:	f3 a5                	rep movsw %ds:(%si),%es:(%di)
80101670:	8b 4c 24             	mov    0x24(%si),%cx
80101673:	1c 89                	sbb    $0x89,%al
80101675:	48                   	dec    %ax
80101676:	44                   	inc    %sp
80101677:	8b 74 24             	mov    0x24(%si),%si
8010167a:	20 8b 0e 8d          	and    %cl,-0x72f2(%bp,%di)
8010167e:	b8 a0 00             	mov    $0xa0,%ax
80101681:	00 00                	add    %al,(%bx,%si)
80101683:	83 f9 04             	cmp    $0x4,%cx
80101686:	74 28                	je     801016b0 <initdev+0x68>
80101688:	49                   	dec    %cx
80101689:	74 31                	je     801016bc <initdev+0x74>
8010168b:	b9 05 00             	mov    $0x5,%cx
8010168e:	00 00                	add    %al,(%bx,%si)
80101690:	8b 74 24             	mov    0x24(%si),%si
80101693:	20 f3                	and    %dh,%bl
80101695:	a5                   	movsw  %ds:(%si),%es:(%di)
80101696:	83 ec 08             	sub    $0x8,%sp
80101699:	52                   	push   %dx
8010169a:	8d 83 31 ad          	lea    -0x52cf(%bp,%di),%ax
8010169e:	ff                   	(bad)  
8010169f:	ff 50 e8             	call   *-0x18(%bx,%si)
801016a2:	16                   	push   %ss
801016a3:	fd                   	std    
801016a4:	ff                   	(bad)  
801016a5:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
801016a9:	5b                   	pop    %bx
801016aa:	5e                   	pop    %si
801016ab:	5f                   	pop    %di
801016ac:	c3                   	ret    
801016ad:	8d 76 00             	lea    0x0(%bp),%si
801016b0:	b9 08 00             	mov    $0x8,%cx
801016b3:	00 00                	add    %al,(%bx,%si)
801016b5:	f3 a5                	rep movsw %ds:(%si),%es:(%di)
801016b7:	eb dd                	jmp    80101696 <initdev+0x4e>
801016b9:	8d 76 00             	lea    0x0(%bp),%si
801016bc:	b9 09 00             	mov    $0x9,%cx
801016bf:	00 00                	add    %al,(%bx,%si)
801016c1:	8b 74 24             	mov    0x24(%si),%si
801016c4:	20 f3                	and    %dh,%bl
801016c6:	a5                   	movsw  %ds:(%si),%es:(%di)
801016c7:	eb cd                	jmp    80101696 <initdev+0x4e>
801016c9:	66 90                	xchg   %eax,%eax
801016cb:	90                   	nop

801016cc <get_mem_config>:
801016cc:	53                   	push   %bx
801016cd:	83 ec 14             	sub    $0x14,%sp
801016d0:	e8 b7 40             	call   8010578a <__text_end_kern+0x2>
801016d3:	00 00                	add    %al,(%bx,%si)
801016d5:	81 c3 eb 9b          	add    $0x9beb,%bx
801016d9:	00 00                	add    %al,(%bx,%si)
801016db:	8d 83 30 a7          	lea    -0x58d0(%bp,%di),%ax
801016df:	ff                   	(bad)  
801016e0:	ff 50 e8             	call   *-0x18(%bx,%si)
801016e3:	d5 fc                	aad    $0xfc
801016e5:	ff                   	(bad)  
801016e6:	ff 58 5a             	lcall  *0x5a(%bx,%si)
801016e9:	ff 35                	pushw  (%di)
801016eb:	58                   	pop    %ax
801016ec:	90                   	nop
801016ed:	00 00                	add    %al,(%bx,%si)
801016ef:	ff 35                	pushw  (%di)
801016f1:	54                   	push   %sp
801016f2:	90                   	nop
801016f3:	00 00                	add    %al,(%bx,%si)
801016f5:	ff 35                	pushw  (%di)
801016f7:	50                   	push   %ax
801016f8:	90                   	nop
801016f9:	00 00                	add    %al,(%bx,%si)
801016fb:	ff 35                	pushw  (%di)
801016fd:	4c                   	dec    %sp
801016fe:	90                   	nop
801016ff:	00 00                	add    %al,(%bx,%si)
80101701:	ff 35                	pushw  (%di)
80101703:	48                   	dec    %ax
80101704:	90                   	nop
80101705:	00 00                	add    %al,(%bx,%si)
80101707:	8d 83 45 ad          	lea    -0x52bb(%bp,%di),%ax
8010170b:	ff                   	(bad)  
8010170c:	ff 50 e8             	call   *-0x18(%bx,%si)
8010170f:	a9 fc ff             	test   $0xfffc,%ax
80101712:	ff a1 48 90          	jmp    *-0x6fb8(%bx,%di)
80101716:	00 00                	add    %al,(%bx,%si)
80101718:	8b 15                	mov    (%di),%dx
8010171a:	4c                   	dec    %sp
8010171b:	90                   	nop
8010171c:	00 00                	add    %al,(%bx,%si)
8010171e:	89 83 40 00          	mov    %ax,0x40(%bp,%di)
80101722:	00 00                	add    %al,(%bx,%si)
80101724:	89 93 44 00          	mov    %dx,0x44(%bp,%di)
80101728:	00 00                	add    %al,(%bx,%si)
8010172a:	a1 50 90             	mov    0x9050,%ax
8010172d:	00 00                	add    %al,(%bx,%si)
8010172f:	8b 15                	mov    (%di),%dx
80101731:	54                   	push   %sp
80101732:	90                   	nop
80101733:	00 00                	add    %al,(%bx,%si)
80101735:	89 83 38 00          	mov    %ax,0x38(%bp,%di)
80101739:	00 00                	add    %al,(%bx,%si)
8010173b:	89 93 3c 00          	mov    %dx,0x3c(%bp,%di)
8010173f:	00 00                	add    %al,(%bx,%si)
80101741:	83 c4 28             	add    $0x28,%sp
80101744:	5b                   	pop    %bx
80101745:	c3                   	ret    
80101746:	66 90                	xchg   %eax,%eax

80101748 <master_early_init>:
80101748:	56                   	push   %si
80101749:	53                   	push   %bx
8010174a:	50                   	push   %ax
8010174b:	e8 3c 40             	call   8010578a <__text_end_kern+0x2>
8010174e:	00 00                	add    %al,(%bx,%si)
80101750:	81 c3 70 9b          	add    $0x9b70,%bx
80101754:	00 00                	add    %al,(%bx,%si)
80101756:	e8 c5 03             	call   80101b1e <get_early_end+0x12>
80101759:	00 00                	add    %al,(%bx,%si)
8010175b:	e8 c0 0c             	call   8010241e <page_index_init+0x6a>
8010175e:	00 00                	add    %al,(%bx,%si)
80101760:	83 ec 0c             	sub    $0xc,%sp
80101763:	8d 83 60 fd          	lea    -0x2a0(%bp,%di),%ax
80101767:	ff                   	(bad)  
80101768:	ff 50 e8             	call   *-0x18(%bx,%si)
8010176b:	ad                   	lods   %ds:(%si),%ax
8010176c:	31 00                	xor    %ax,(%bx,%si)
8010176e:	00 83 c4 10          	add    %al,0x10c4(%bp,%di)
80101772:	85 c0                	test   %ax,%ax
80101774:	78 48                	js     801017be <master_early_init+0x76>
80101776:	83 ec 0c             	sub    $0xc,%sp
80101779:	8d b3 40 fe          	lea    -0x1c0(%bp,%di),%si
8010177d:	ff                   	(bad)  
8010177e:	ff 56 e8             	call   *-0x18(%bp)
80101781:	e3 36                	jcxz   801017b9 <master_early_init+0x71>
80101783:	00 00                	add    %al,(%bx,%si)
80101785:	83 c4 10             	add    $0x10,%sp
80101788:	85 c0                	test   %ax,%ax
8010178a:	78 32                	js     801017be <master_early_init+0x76>
8010178c:	6a 00                	push   $0x0
8010178e:	6a 00                	push   $0x0
80101790:	68 f8 03             	push   $0x3f8
80101793:	00 00                	add    %al,(%bx,%si)
80101795:	56                   	push   %si
80101796:	e8 cd fc             	call   80101466 <kputs+0x1e>
80101799:	ff                   	(bad)  
8010179a:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
8010179e:	85 c0                	test   %ax,%ax
801017a0:	78 23                	js     801017c5 <master_early_init+0x7d>
801017a2:	83 ec 0c             	sub    $0xc,%sp
801017a5:	8d 83 75 ad          	lea    -0x528b(%bp,%di),%ax
801017a9:	ff                   	(bad)  
801017aa:	ff 50 e8             	call   *-0x18(%bx,%si)
801017ad:	97                   	xchg   %ax,%di
801017ae:	fc                   	cld    
801017af:	ff                   	(bad)  
801017b0:	ff                   	(bad)  
801017b1:	e8 16 ff             	call   801016ca <initdev+0x82>
801017b4:	ff                   	(bad)  
801017b5:	ff                   	(bad)  
801017b6:	e8 f1 1c             	call   801034aa <arch_load_gdt+0x146>
801017b9:	00 00                	add    %al,(%bx,%si)
801017bb:	83 c4 10             	add    $0x10,%sp
801017be:	e8 29 1d             	call   801034ea <arch_early_continue+0x1e>
801017c1:	00 00                	add    %al,(%bx,%si)
801017c3:	eb fe                	jmp    801017c3 <master_early_init+0x7b>
801017c5:	83 ec 0c             	sub    $0xc,%sp
801017c8:	8d 83 59 ad          	lea    -0x52a7(%bp,%di),%ax
801017cc:	ff                   	(bad)  
801017cd:	ff 50 e8             	call   *-0x18(%bx,%si)
801017d0:	f8                   	clc    
801017d1:	1a 00                	sbb    (%bx,%si),%al
	...

801017d4 <page_allocator_init>:
801017d4:	55                   	push   %bp
801017d5:	57                   	push   %di
801017d6:	56                   	push   %si
801017d7:	53                   	push   %bx
801017d8:	83 ec 0c             	sub    $0xc,%sp
801017db:	e8 ac 3f             	call   8010578a <__text_end_kern+0x2>
801017de:	00 00                	add    %al,(%bx,%si)
801017e0:	81 c3 e0 9a          	add    $0x9ae0,%bx
801017e4:	00 00                	add    %al,(%bx,%si)
801017e6:	c7 c1 00 80          	mov    $0x8000,%cx
801017ea:	12 80 85 c9          	adc    -0x367b(%bx,%si),%al
801017ee:	0f 88 84 00          	js     80101876 <page_allocator_init+0xa2>
801017f2:	00 00                	add    %al,(%bx,%si)
801017f4:	8b 83 40 00          	mov    0x40(%bp,%di),%ax
801017f8:	00 00                	add    %al,(%bx,%si)
801017fa:	8b 93 44 00          	mov    0x44(%bp,%di),%dx
801017fe:	00 00                	add    %al,(%bx,%si)
80101800:	89 ce                	mov    %cx,%si
80101802:	31 ff                	xor    %di,%di
80101804:	39 d7                	cmp    %dx,%di
80101806:	72 68                	jb     80101870 <page_allocator_init+0x9c>
80101808:	39 c1                	cmp    %ax,%cx
8010180a:	72 64                	jb     80101870 <page_allocator_init+0x9c>
8010180c:	03 83 38 00          	add    0x38(%bp,%di),%ax
80101810:	00 00                	add    %al,(%bx,%si)
80101812:	13 93 3c 00          	adc    0x3c(%bp,%di),%dx
80101816:	00 00                	add    %al,(%bx,%si)
80101818:	83 fa 00             	cmp    $0x0,%dx
8010181b:	76 47                	jbe    80101864 <page_allocator_init+0x90>
8010181d:	bd 00 00             	mov    $0x0,%bp
80101820:	00 0e b8 00          	add    %cl,0xb8
80101824:	00 00                	add    %al,(%bx,%si)
80101826:	0e                   	push   %cs
80101827:	31 d2                	xor    %dx,%dx
80101829:	52                   	push   %dx
8010182a:	50                   	push   %ax
8010182b:	57                   	push   %di
8010182c:	56                   	push   %si
8010182d:	e8 8a 0d             	call   801025ba <from_pool+0x72>
80101830:	00 00                	add    %al,(%bx,%si)
80101832:	83 c4 0c             	add    $0xc,%sp
80101835:	55                   	push   %bp
80101836:	56                   	push   %si
80101837:	8d 83 58 a7          	lea    -0x58a8(%bp,%di),%ax
8010183b:	ff                   	(bad)  
8010183c:	ff 50 e8             	call   *-0x18(%bx,%si)
8010183f:	79 fb                	jns    8010183c <page_allocator_init+0x68>
80101841:	ff                   	(bad)  
80101842:	ff                   	(bad)  
80101843:	e8 ac 17             	call   80102ff2 <alloc_aligned_pages+0x15a>
80101846:	00 00                	add    %al,(%bx,%si)
80101848:	83 c4 0c             	add    $0xc,%sp
8010184b:	52                   	push   %dx
8010184c:	50                   	push   %ax
8010184d:	8d 83 84 ad          	lea    -0x527c(%bp,%di),%ax
80101851:	ff                   	(bad)  
80101852:	ff 50 e8             	call   *-0x18(%bx,%si)
80101855:	63 fb                	arpl   %di,%bx
80101857:	ff                   	(bad)  
80101858:	ff 31                	pushw  (%bx,%di)
8010185a:	c0 83 c4 1c 5b       	rolb   $0x5b,0x1cc4(%bp,%di)
8010185f:	5e                   	pop    %si
80101860:	5f                   	pop    %di
80101861:	5d                   	pop    %bp
80101862:	c3                   	ret    
80101863:	90                   	nop
80101864:	3d ff ff             	cmp    $0xffff,%ax
80101867:	ff 0d                	decw   (%di)
80101869:	77 b2                	ja     8010181d <page_allocator_init+0x49>
8010186b:	89 c5                	mov    %ax,%bp
8010186d:	eb ba                	jmp    80101829 <page_allocator_init+0x55>
8010186f:	90                   	nop
80101870:	89 c6                	mov    %ax,%si
80101872:	89 d7                	mov    %dx,%di
80101874:	eb 96                	jmp    8010180c <page_allocator_init+0x38>
80101876:	66 90                	xchg   %eax,%eax
80101878:	81 c1 00 00          	add    $0x0,%cx
8010187c:	00 80 e9 71          	add    %al,0x71e9(%bx,%si)
80101880:	ff                   	(bad)  
80101881:	ff                   	(bad)  
80101882:	ff                   	.byte 0xff
80101883:	90                   	nop

80101884 <master_early_continue>:
80101884:	57                   	push   %di
80101885:	56                   	push   %si
80101886:	53                   	push   %bx
80101887:	83 ec 20             	sub    $0x20,%sp
8010188a:	e8 fd 3e             	call   8010578a <__text_end_kern+0x2>
8010188d:	00 00                	add    %al,(%bx,%si)
8010188f:	81 c3 31 9a          	add    $0x9a31,%bx
80101893:	00 00                	add    %al,(%bx,%si)
80101895:	c7 c7 00 80          	mov    $0x8000,%di
80101899:	12 80 85 ff          	adc    -0x7b(%bx,%si),%al
8010189d:	0f 88 0d 01          	js     801019ae <master_early_continue+0x12a>
801018a1:	00 00                	add    %al,(%bx,%si)
801018a3:	c7 c6 00 80          	mov    $0x8000,%si
801018a7:	11 80 85 f6          	adc    %ax,-0x97b(%bx,%si)
801018ab:	79 06                	jns    801018b3 <master_early_continue+0x2f>
801018ad:	81 c6 00 00          	add    $0x0,%si
801018b1:	00 80 83 ec          	add    %al,-0x137d(%bx,%si)
801018b5:	08 57 56             	or     %dl,0x56(%bx)
801018b8:	e8 cf 01             	call   80101a8a <early_simple_init+0x5e>
801018bb:	00 00                	add    %al,(%bx,%si)
801018bd:	83 c4 0c             	add    $0xc,%sp
801018c0:	57                   	push   %di
801018c1:	56                   	push   %si
801018c2:	8d 83 80 a7          	lea    -0x5880(%bp,%di),%ax
801018c6:	ff                   	(bad)  
801018c7:	ff 50 e8             	call   *-0x18(%bx,%si)
801018ca:	ee                   	out    %al,(%dx)
801018cb:	fa                   	cli    
801018cc:	ff                   	(bad)  
801018cd:	ff                   	(bad)  
801018ce:	e8 01 ff             	call   801017d2 <master_early_init+0x8a>
801018d1:	ff                   	(bad)  
801018d2:	ff 8d 83 b0          	decw   -0x4f7d(%di)
801018d6:	a7                   	cmpsw  %es:(%di),%ds:(%si)
801018d7:	ff                   	(bad)  
801018d8:	ff 89 04 24          	decw   0x2404(%bx,%di)
801018dc:	e8 db fa             	call   801013ba <set_console+0x1e>
801018df:	ff                   	(bad)  
801018e0:	ff                   	(bad)  
801018e1:	e8 a6 0a             	call   8010238a <bundle_kfree+0x12>
801018e4:	00 00                	add    %al,(%bx,%si)
801018e6:	e8 99 e9             	call   80100282 <__next+0x7a>
801018e9:	ff                   	(bad)  
801018ea:	ff                   	(bad)  
801018eb:	e8 d0 26             	call   80103fbe <mpsearch1+0x72>
801018ee:	00 00                	add    %al,(%bx,%si)
801018f0:	e8 fb 23             	call   80103cee <ioapicenable+0x3e>
801018f3:	00 00                	add    %al,(%bx,%si)
801018f5:	e8 ae 28             	call   801041a6 <.L28+0x5e>
801018f8:	00 00                	add    %al,(%bx,%si)
801018fa:	e8 71 22             	call   80103b6e <picenable+0x36>
801018fd:	00 00                	add    %al,(%bx,%si)
801018ff:	e8 f8 22             	call   80103bfa <picinit+0x8a>
80101902:	00 00                	add    %al,(%bx,%si)
80101904:	e8 eb fc             	call   801015f2 <do_early_initcalls+0x2e>
80101907:	ff                   	(bad)  
80101908:	ff                   	(bad)  
80101909:	e8 ee 21             	call   80103afa <trap+0x66>
8010190c:	00 00                	add    %al,(%bx,%si)
8010190e:	e8 49 2a             	call   8010435a <mpenter+0x1e>
80101911:	00 00                	add    %al,(%bx,%si)
80101913:	8d 83 e8 a7          	lea    -0x5818(%bp,%di),%ax
80101917:	ff                   	(bad)  
80101918:	ff 89 04 24          	decw   0x2404(%bx,%di)
8010191c:	e8 27 fb             	call   80101446 <get_default_kputs+0x12>
8010191f:	ff                   	(bad)  
80101920:	ff c7                	inc    %di
80101922:	44                   	inc    %sp
80101923:	24 10                	and    $0x10,%al
80101925:	00 00                	add    %al,(%bx,%si)
80101927:	00 00                	add    %al,(%bx,%si)
80101929:	c7 44 24 14 00       	movw   $0x14,0x24(%si)
8010192e:	00 00                	add    %al,(%bx,%si)
80101930:	00 c7                	add    %al,%bh
80101932:	44                   	inc    %sp
80101933:	24 18                	and    $0x18,%al
80101935:	00 00                	add    %al,(%bx,%si)
80101937:	00 00                	add    %al,(%bx,%si)
80101939:	58                   	pop    %ax
8010193a:	8d 74 24             	lea    0x24(%si),%si
8010193d:	0c 56                	or     $0x56,%al
8010193f:	e8 3c 2c             	call   8010457e <pushcli+0x36>
80101942:	00 00                	add    %al,(%bx,%si)
80101944:	89 34                	mov    %si,(%si)
80101946:	24 e8                	and    $0xe8,%al
80101948:	58                   	pop    %ax
80101949:	2d 00 00             	sub    $0x0,%ax
8010194c:	8d 83 9d ad          	lea    -0x5263(%bp,%di),%ax
80101950:	ff                   	(bad)  
80101951:	ff 89 04 24          	decw   0x2404(%bx,%di)
80101955:	e8 ee fa             	call   80101446 <get_default_kputs+0x12>
80101958:	ff                   	(bad)  
80101959:	ff c7                	inc    %di
8010195b:	44                   	inc    %sp
8010195c:	24 1c                	and    $0x1c,%al
8010195e:	01 00                	add    %ax,(%bx,%si)
80101960:	00 00                	add    %al,(%bx,%si)
80101962:	c7 44 24 20 00       	movw   $0x20,0x24(%si)
80101967:	00 00                	add    %al,(%bx,%si)
80101969:	00 c7                	add    %al,%bh
8010196b:	44                   	inc    %sp
8010196c:	24 24                	and    $0x24,%al
8010196e:	00 00                	add    %al,(%bx,%si)
80101970:	00 00                	add    %al,(%bx,%si)
80101972:	c7 44 24 28 00       	movw   $0x28,0x24(%si)
80101977:	00 00                	add    %al,(%bx,%si)
80101979:	00 c7                	add    %al,%bh
8010197b:	44                   	inc    %sp
8010197c:	24 2c                	and    $0x2c,%al
8010197e:	00 00                	add    %al,(%bx,%si)
80101980:	00 00                	add    %al,(%bx,%si)
80101982:	5a                   	pop    %dx
80101983:	8d 74 24             	lea    0x24(%si),%si
80101986:	18 56 e8             	sbb    %dl,-0x18(%bp)
80101989:	c3                   	ret    
8010198a:	2d 00 00             	sub    $0x0,%ax
8010198d:	89 34                	mov    %si,(%si)
8010198f:	24 e8                	and    $0xe8,%al
80101991:	93                   	xchg   %ax,%bx
80101992:	2d 00 00             	sub    $0x0,%ax
80101995:	8d 83 b6 ad          	lea    -0x524a(%bp,%di),%ax
80101999:	ff                   	(bad)  
8010199a:	ff 89 04 24          	decw   0x2404(%bx,%di)
8010199e:	e8 a5 fa             	call   80101446 <get_default_kputs+0x12>
801019a1:	ff                   	(bad)  
801019a2:	ff                   	(bad)  
801019a3:	e8 44 1b             	call   801034ea <arch_early_continue+0x1e>
801019a6:	00 00                	add    %al,(%bx,%si)
801019a8:	83 c4 30             	add    $0x30,%sp
801019ab:	5b                   	pop    %bx
801019ac:	5e                   	pop    %si
801019ad:	5f                   	pop    %di
801019ae:	c3                   	ret    
801019af:	90                   	nop
801019b0:	81 c7 00 00          	add    $0x0,%di
801019b4:	00 80 e9 e8          	add    %al,-0x1717(%bx,%si)
801019b8:	fe                   	(bad)  
801019b9:	ff                   	(bad)  
801019ba:	ff                   	.byte 0xff
801019bb:	90                   	nop

801019bc <inf_loop>:
801019bc:	eb fe                	jmp    801019bc <inf_loop>
801019be:	66 90                	xchg   %eax,%eax

801019c0 <early_simple_alloc>:
801019c0:	e8 d3 3d             	call   80105796 <__x86.get_pc_thunk.ax+0x2>
801019c3:	00 00                	add    %al,(%bx,%si)
801019c5:	81 c2 fb 98          	add    $0x98fb,%dx
801019c9:	00 00                	add    %al,(%bx,%si)
801019cb:	c7 c1 00 70          	mov    $0x7000,%cx
801019cf:	11 80 8b 41          	adc    %ax,0x418b(%bx,%si)
801019d3:	04 39                	add    $0x39,%al
801019d5:	c8 74 1c 8b          	enter  $0x1c74,$0x8b
801019d9:	4c                   	dec    %sp
801019da:	24 04                	and    $0x4,%al
801019dc:	66 29 8a 48 00       	sub    %ecx,0x48(%bp,%si)
801019e1:	00 00                	add    %al,(%bx,%si)
801019e3:	8b 10                	mov    (%bx,%si),%dx
801019e5:	8b 48 04             	mov    0x4(%bx,%si),%cx
801019e8:	89 4a 04             	mov    %cx,0x4(%bp,%si)
801019eb:	8b 48 04             	mov    0x4(%bx,%si),%cx
801019ee:	89 11                	mov    %dx,(%bx,%di)
801019f0:	c3                   	ret    
801019f1:	8d 76 00             	lea    0x0(%bp),%si
801019f4:	31 c0                	xor    %ax,%ax
801019f6:	c3                   	ret    
801019f7:	90                   	nop

801019f8 <early_simple_free>:
801019f8:	e8 9b 3d             	call   80105796 <__x86.get_pc_thunk.ax+0x2>
801019fb:	00 00                	add    %al,(%bx,%si)
801019fd:	81 c2 c3 98          	add    $0x98c3,%dx
80101a01:	00 00                	add    %al,(%bx,%si)
80101a03:	8b 44 24             	mov    0x24(%si),%ax
80101a06:	04 66                	add    $0x66,%al
80101a08:	83 82 48 00 00       	addw   $0x0,0x48(%bp,%si)
80101a0d:	00 08                	add    %cl,(%bx,%si)
80101a0f:	c7 c2 00 70          	mov    $0x7000,%dx
80101a13:	11 80 8b 4a          	adc    %ax,0x4a8b(%bx,%si)
80101a17:	04 89                	add    $0x89,%al
80101a19:	01 89 48 04          	add    %cx,0x448(%bx,%di)
80101a1d:	89 10                	mov    %dx,(%bx,%si)
80101a1f:	89 42 04             	mov    %ax,0x4(%bp,%si)
80101a22:	c3                   	ret    
80101a23:	90                   	nop

80101a24 <sizeof_list>:
80101a24:	b8 08 00             	mov    $0x8,%ax
80101a27:	00 00                	add    %al,(%bx,%si)
80101a29:	c3                   	ret    
80101a2a:	66 90                	xchg   %eax,%eax

80101a2c <early_simple_init>:
80101a2c:	57                   	push   %di
80101a2d:	56                   	push   %si
80101a2e:	53                   	push   %bx
80101a2f:	e8 64 3d             	call   80105796 <__x86.get_pc_thunk.ax+0x2>
80101a32:	00 00                	add    %al,(%bx,%si)
80101a34:	81 c2 8c 98          	add    $0x988c,%dx
80101a38:	00 00                	add    %al,(%bx,%si)
80101a3a:	8b 44 24             	mov    0x24(%si),%ax
80101a3d:	10 8b 74 24          	adc    %cl,0x2474(%bp,%di)
80101a41:	14 8b                	adc    $0x8b,%al
80101a43:	7c 24                	jl     80101a69 <early_simple_init+0x3d>
80101a45:	18 89 70 08          	sbb    %cl,0x870(%bx,%di)
80101a49:	89 70 04             	mov    %si,0x4(%bx,%si)
80101a4c:	66 89 38             	mov    %edi,(%bx,%si)
80101a4f:	c7 40 0c 01 00       	movw   $0x1,0xc(%bx,%si)
80101a54:	00 00                	add    %al,(%bx,%si)
80101a56:	c7 c1 00 70          	mov    $0x7000,%cx
80101a5a:	11 80 89 09          	adc    %ax,0x989(%bx,%si)
80101a5e:	89 49 04             	mov    %cx,0x4(%bx,%di)
80101a61:	85 ff                	test   %di,%di
80101a63:	74 20                	je     80101a85 <early_simple_init+0x59>
80101a65:	89 f0                	mov    %si,%ax
80101a67:	89 ca                	mov    %cx,%dx
80101a69:	8d 76 00             	lea    0x0(%bp),%si
80101a6c:	89 c3                	mov    %ax,%bx
80101a6e:	89 02                	mov    %ax,(%bp,%si)
80101a70:	89 50 04             	mov    %dx,0x4(%bx,%si)
80101a73:	89 08                	mov    %cx,(%bx,%si)
80101a75:	89 41 04             	mov    %ax,0x4(%bx,%di)
80101a78:	83 c0 10             	add    $0x10,%ax
80101a7b:	89 da                	mov    %bx,%dx
80101a7d:	89 c3                	mov    %ax,%bx
80101a7f:	29 f3                	sub    %si,%bx
80101a81:	39 df                	cmp    %bx,%di
80101a83:	77 e7                	ja     80101a6c <early_simple_init+0x40>
80101a85:	5b                   	pop    %bx
80101a86:	5e                   	pop    %si
80101a87:	5f                   	pop    %di
80101a88:	c3                   	ret    
80101a89:	8d 76 00             	lea    0x0(%bp),%si

80101a8c <master_early_simple_alloc>:
80101a8c:	55                   	push   %bp
80101a8d:	57                   	push   %di
80101a8e:	56                   	push   %si
80101a8f:	53                   	push   %bx
80101a90:	83 ec 0c             	sub    $0xc,%sp
80101a93:	e8 f4 3c             	call   8010578a <__text_end_kern+0x2>
80101a96:	00 00                	add    %al,(%bx,%si)
80101a98:	81 c3 28 98          	add    $0x9828,%bx
80101a9c:	00 00                	add    %al,(%bx,%si)
80101a9e:	8b 6c 24             	mov    0x24(%si),%bp
80101aa1:	20 8b 7c 24          	and    %cl,0x247c(%bp,%di)
80101aa5:	24 29                	and    $0x29,%al
80101aa7:	ef                   	out    %ax,(%dx)
80101aa8:	89 ab 50 00          	mov    %bp,0x50(%bp,%di)
80101aac:	00 00                	add    %al,(%bx,%si)
80101aae:	89 ab 4c 00          	mov    %bp,0x4c(%bp,%di)
80101ab2:	00 00                	add    %al,(%bx,%si)
80101ab4:	66 89 bb 48 00       	mov    %edi,0x48(%bp,%di)
80101ab9:	00 00                	add    %al,(%bx,%si)
80101abb:	c7 83 54 00 00 00    	movw   $0x0,0x54(%bp,%di)
80101ac1:	01 00                	add    %ax,(%bx,%si)
80101ac3:	00 00                	add    %al,(%bx,%si)
80101ac5:	c7 c1 00 70          	mov    $0x7000,%cx
80101ac9:	11 80 89 09          	adc    %ax,0x989(%bx,%si)
80101acd:	89 49 04             	mov    %cx,0x4(%bx,%di)
80101ad0:	85 ff                	test   %di,%di
80101ad2:	74 1d                	je     80101af1 <master_early_simple_alloc+0x65>
80101ad4:	89 e8                	mov    %bp,%ax
80101ad6:	89 ca                	mov    %cx,%dx
80101ad8:	89 c6                	mov    %ax,%si
80101ada:	89 02                	mov    %ax,(%bp,%si)
80101adc:	89 50 04             	mov    %dx,0x4(%bx,%si)
80101adf:	89 08                	mov    %cx,(%bx,%si)
80101ae1:	89 41 04             	mov    %ax,0x4(%bx,%di)
80101ae4:	83 c0 10             	add    $0x10,%ax
80101ae7:	89 f2                	mov    %si,%dx
80101ae9:	89 c6                	mov    %ax,%si
80101aeb:	29 ee                	sub    %bp,%si
80101aed:	39 f7                	cmp    %si,%di
80101aef:	77 e7                	ja     80101ad8 <master_early_simple_alloc+0x4c>
80101af1:	83 ec 0c             	sub    $0xc,%sp
80101af4:	8d 83 78 ff          	lea    -0x88(%bp,%di),%ax
80101af8:	ff                   	(bad)  
80101af9:	ff 50 e8             	call   *-0x18(%bx,%si)
80101afc:	dc 15                	fcoml  (%di)
80101afe:	00 00                	add    %al,(%bx,%si)
80101b00:	83 c4 10             	add    $0x10,%sp
80101b03:	83 c4 0c             	add    $0xc,%sp
80101b06:	5b                   	pop    %bx
80101b07:	5e                   	pop    %si
80101b08:	5f                   	pop    %di
80101b09:	5d                   	pop    %bp
80101b0a:	c3                   	ret    
80101b0b:	90                   	nop

80101b0c <get_early_end>:
80101b0c:	e8 83 3c             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80101b0f:	00 00                	add    %al,(%bx,%si)
80101b11:	05 af 97             	add    $0x97af,%ax
80101b14:	00 00                	add    %al,(%bx,%si)
80101b16:	8b 80 4c 00          	mov    0x4c(%bx,%si),%ax
80101b1a:	00 00                	add    %al,(%bx,%si)
80101b1c:	c3                   	ret    
80101b1d:	66 90                	xchg   %eax,%eax
80101b1f:	90                   	nop

80101b20 <early_mapping_clear>:
80101b20:	53                   	push   %bx
80101b21:	83 ec 14             	sub    $0x14,%sp
80101b24:	e8 63 3c             	call   8010578a <__text_end_kern+0x2>
80101b27:	00 00                	add    %al,(%bx,%si)
80101b29:	81 c3 97 97          	add    $0x9797,%bx
80101b2d:	00 00                	add    %al,(%bx,%si)
80101b2f:	c7 83 68 00 00 00    	movw   $0x0,0x68(%bp,%di)
80101b35:	00 00                	add    %al,(%bx,%si)
80101b37:	00 00                	add    %al,(%bx,%si)
80101b39:	c7 83 64 00 00 00    	movw   $0x0,0x64(%bp,%di)
80101b3f:	00 00                	add    %al,(%bx,%si)
80101b41:	00 80 c7 83          	add    %al,-0x7c39(%bx,%si)
80101b45:	60                   	pusha  
80101b46:	00 00                	add    %al,(%bx,%si)
80101b48:	00 00                	add    %al,(%bx,%si)
80101b4a:	00 00                	add    %al,(%bx,%si)
80101b4c:	f0 8d 83 10 a8       	lock lea -0x57f0(%bp,%di),%ax
80101b51:	ff                   	(bad)  
80101b52:	ff 50 e8             	call   *-0x18(%bx,%si)
80101b55:	63 f8                	arpl   %di,%ax
80101b57:	ff                   	(bad)  
80101b58:	ff 83 c4 18          	incw   0x18c4(%bp,%di)
80101b5c:	5b                   	pop    %bx
80101b5d:	c3                   	ret    
80101b5e:	66 90                	xchg   %eax,%eax

80101b60 <early_mapping_add>:
80101b60:	55                   	push   %bp
80101b61:	57                   	push   %di
80101b62:	56                   	push   %si
80101b63:	53                   	push   %bx
80101b64:	83 ec 1c             	sub    $0x1c,%sp
80101b67:	e8 28 3c             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80101b6a:	00 00                	add    %al,(%bx,%si)
80101b6c:	05 54 97             	add    $0x9754,%ax
80101b6f:	00 00                	add    %al,(%bx,%si)
80101b71:	89 44 24             	mov    %ax,0x24(%si)
80101b74:	0c 8b                	or     $0x8b,%al
80101b76:	74 24                	je     80101b9c <early_mapping_add+0x3c>
80101b78:	30 83 b8 68          	xor    %al,0x68b8(%bp,%di)
80101b7c:	00 00                	add    %al,(%bx,%si)
80101b7e:	00 0a                	add    %cl,(%bp,%si)
80101b80:	0f 8f 96 00          	jg     80101c1a <early_mapping_add+0xba>
80101b84:	00 00                	add    %al,(%bx,%si)
80101b86:	0f 84 89 00          	je     80101c13 <early_mapping_add+0xb3>
80101b8a:	00 00                	add    %al,(%bx,%si)
80101b8c:	83 ec 0c             	sub    $0xc,%sp
80101b8f:	56                   	push   %si
80101b90:	8b 7c 24             	mov    0x24(%si),%di
80101b93:	1c 89                	sbb    $0x89,%al
80101b95:	fb                   	sti    
80101b96:	e8 2d 1c             	call   801037c6 <early_mm_init+0x86>
80101b99:	00 00                	add    %al,(%bx,%si)
80101b9b:	83 c4 10             	add    $0x10,%sp
80101b9e:	85 c0                	test   %ax,%ax
80101ba0:	74 66                	je     80101c08 <early_mapping_add+0xa8>
80101ba2:	8b bf 68 00          	mov    0x68(%bx),%di
80101ba6:	00 00                	add    %al,(%bx,%si)
80101ba8:	85 ff                	test   %di,%di
80101baa:	7e 30                	jle    80101bdc <early_mapping_add+0x7c>
80101bac:	8b 4e 08             	mov    0x8(%bp),%cx
80101baf:	8d 93 88 00          	lea    0x88(%bp,%di),%dx
80101bb3:	00 00                	add    %al,(%bx,%si)
80101bb5:	31 db                	xor    %bx,%bx
80101bb7:	90                   	nop
80101bb8:	8b 02                	mov    (%bp,%si),%ax
80101bba:	39 c1                	cmp    %ax,%cx
80101bbc:	76 09                	jbe    80101bc7 <early_mapping_add+0x67>
80101bbe:	8b 6a 04             	mov    0x4(%bp,%si),%bp
80101bc1:	01 c5                	add    %ax,%bp
80101bc3:	39 e9                	cmp    %bp,%cx
80101bc5:	72 41                	jb     80101c08 <early_mapping_add+0xa8>
80101bc7:	39 c1                	cmp    %ax,%cx
80101bc9:	73 09                	jae    80101bd4 <early_mapping_add+0x74>
80101bcb:	8b 6e 0c             	mov    0xc(%bp),%bp
80101bce:	01 cd                	add    %cx,%bp
80101bd0:	39 e8                	cmp    %bp,%ax
80101bd2:	72 34                	jb     80101c08 <early_mapping_add+0xa8>
80101bd4:	43                   	inc    %bx
80101bd5:	83 c2 14             	add    $0x14,%dx
80101bd8:	39 fb                	cmp    %di,%bx
80101bda:	75 dc                	jne    80101bb8 <early_mapping_add+0x58>
80101bdc:	8d 47 01             	lea    0x1(%bx),%ax
80101bdf:	8b 5c 24             	mov    0x24(%si),%bx
80101be2:	0c 89                	or     $0x89,%al
80101be4:	83 68 00 00          	subw   $0x0,0x0(%bx,%si)
80101be8:	00 8d 04 bf          	add    %cl,-0x40fc(%di)
80101bec:	8d 84 83 80          	lea    -0x7f7d(%si),%ax
80101bf0:	00 00                	add    %al,(%bx,%si)
80101bf2:	00 b9 05 00          	add    %bh,0x5(%bx,%di)
80101bf6:	00 00                	add    %al,(%bx,%si)
80101bf8:	89 c7                	mov    %ax,%di
80101bfa:	f3 a5                	rep movsw %ds:(%si),%es:(%di)
80101bfc:	31 c0                	xor    %ax,%ax
80101bfe:	83 c4 1c             	add    $0x1c,%sp
80101c01:	5b                   	pop    %bx
80101c02:	5e                   	pop    %si
80101c03:	5f                   	pop    %di
80101c04:	5d                   	pop    %bp
80101c05:	c3                   	ret    
80101c06:	66 90                	xchg   %eax,%eax
80101c08:	b8 ea ff             	mov    $0xffea,%ax
80101c0b:	ff                   	(bad)  
80101c0c:	ff 83 c4 1c          	incw   0x1cc4(%bp,%di)
80101c10:	5b                   	pop    %bx
80101c11:	5e                   	pop    %si
80101c12:	5f                   	pop    %di
80101c13:	5d                   	pop    %bp
80101c14:	c3                   	ret    
80101c15:	b8 f4 ff             	mov    $0xfff4,%ax
80101c18:	ff                   	(bad)  
80101c19:	ff                   	(bad)  
80101c1a:	eb e2                	jmp    80101bfe <early_mapping_add+0x9e>
80101c1c:	83 ec 0c             	sub    $0xc,%sp
80101c1f:	8b 5c 24             	mov    0x24(%si),%bx
80101c22:	18 8d 83 30          	sbb    %cl,0x3083(%di)
80101c26:	a8 ff                	test   $0xff,%al
80101c28:	ff 50 6a             	call   *0x6a(%bx,%si)
80101c2b:	3a 8d 83 d3          	cmp    -0x2c7d(%di),%cl
80101c2f:	ad                   	lods   %ds:(%si),%ax
80101c30:	ff                   	(bad)  
80101c31:	ff 50 8d             	call   *-0x73(%bx,%si)
80101c34:	83 e8 a4             	sub    $0xffa4,%ax
80101c37:	ff                   	(bad)  
80101c38:	ff 50 8d             	call   *-0x73(%bx,%si)
80101c3b:	83 b0 a6 ff ff       	xorw   $0xffff,-0x5a(%bx,%si)
80101c40:	50                   	push   %ax
80101c41:	e8 86 16             	call   801032ca <__local_panic+0x2>
80101c44:	00 00                	add    %al,(%bx,%si)
80101c46:	66 90                	xchg   %eax,%eax

80101c48 <early_mapping_add_memory>:
80101c48:	55                   	push   %bp
80101c49:	57                   	push   %di
80101c4a:	56                   	push   %si
80101c4b:	53                   	push   %bx
80101c4c:	83 ec 2c             	sub    $0x2c,%sp
80101c4f:	e8 48 3b             	call   8010579a <__x86.get_pc_thunk.dx+0x2>
80101c52:	00 00                	add    %al,(%bx,%si)
80101c54:	81 c5 6c 96          	add    $0x966c,%bp
80101c58:	00 00                	add    %al,(%bx,%si)
80101c5a:	8b 74 24             	mov    0x24(%si),%si
80101c5d:	40                   	inc    %ax
80101c5e:	8b 7c 24             	mov    0x24(%si),%di
80101c61:	44                   	inc    %sp
80101c62:	8b 85 64 00          	mov    0x64(%di),%ax
80101c66:	00 00                	add    %al,(%bx,%si)
80101c68:	3d ff ff             	cmp    $0xffff,%ax
80101c6b:	ff                   	(bad)  
80101c6c:	ef                   	out    %ax,(%dx)
80101c6d:	77 49                	ja     80101cb8 <early_mapping_add_memory+0x70>
80101c6f:	bb 00 00             	mov    $0x0,%bx
80101c72:	00 f0                	add    %dh,%al
80101c74:	29 c3                	sub    %ax,%bx
80101c76:	3b 5c 24             	cmp    0x24(%si),%bx
80101c79:	48                   	dec    %ax
80101c7a:	77 48                	ja     80101cc4 <early_mapping_add_memory+0x7c>
80101c7c:	89 74 24             	mov    %si,0x24(%si)
80101c7f:	0c 89                	or     $0x89,%al
80101c81:	7c 24                	jl     80101ca7 <early_mapping_add_memory+0x5f>
80101c83:	10 89 44 24          	adc    %cl,0x2444(%bx,%di)
80101c87:	14 89                	adc    $0x89,%al
80101c89:	5c                   	pop    %sp
80101c8a:	24 18                	and    $0x18,%al
80101c8c:	c7 44 24 1c 00       	movw   $0x1c,0x24(%si)
80101c91:	00 00                	add    %al,(%bx,%si)
80101c93:	00 83 ec 0c          	add    %al,0xcec(%bp,%di)
80101c97:	8d 44 24             	lea    0x24(%si),%ax
80101c9a:	18 50 e8             	sbb    %dl,-0x18(%bx,%si)
80101c9d:	bf fe ff             	mov    $0xfffe,%di
80101ca0:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
80101ca4:	85 c0                	test   %ax,%ax
80101ca6:	78 10                	js     80101cb8 <early_mapping_add_memory+0x70>
80101ca8:	01 9d 64 00          	add    %bx,0x64(%di)
80101cac:	00 00                	add    %al,(%bx,%si)
80101cae:	89 d8                	mov    %bx,%ax
80101cb0:	83 c4 2c             	add    $0x2c,%sp
80101cb3:	5b                   	pop    %bx
80101cb4:	5e                   	pop    %si
80101cb5:	5f                   	pop    %di
80101cb6:	5d                   	pop    %bp
80101cb7:	c3                   	ret    
80101cb8:	31 db                	xor    %bx,%bx
80101cba:	89 d8                	mov    %bx,%ax
80101cbc:	83 c4 2c             	add    $0x2c,%sp
80101cbf:	5b                   	pop    %bx
80101cc0:	5e                   	pop    %si
80101cc1:	5f                   	pop    %di
80101cc2:	5d                   	pop    %bp
80101cc3:	c3                   	ret    
80101cc4:	8b 5c 24             	mov    0x24(%si),%bx
80101cc7:	48                   	dec    %ax
80101cc8:	eb b2                	jmp    80101c7c <early_mapping_add_memory+0x34>
80101cca:	66 90                	xchg   %eax,%eax

80101ccc <early_mapping_add_kmmap>:
80101ccc:	55                   	push   %bp
80101ccd:	57                   	push   %di
80101cce:	56                   	push   %si
80101ccf:	53                   	push   %bx
80101cd0:	83 ec 2c             	sub    $0x2c,%sp
80101cd3:	e8 c4 3a             	call   8010579a <__x86.get_pc_thunk.dx+0x2>
80101cd6:	00 00                	add    %al,(%bx,%si)
80101cd8:	81 c5 e8 95          	add    $0x95e8,%bp
80101cdc:	00 00                	add    %al,(%bx,%si)
80101cde:	8b 74 24             	mov    0x24(%si),%si
80101ce1:	40                   	inc    %ax
80101ce2:	8b 7c 24             	mov    0x24(%si),%di
80101ce5:	44                   	inc    %sp
80101ce6:	8b 5c 24             	mov    0x24(%si),%bx
80101ce9:	48                   	dec    %ax
80101cea:	8b 85 60 00          	mov    0x60(%di),%ax
80101cee:	00 00                	add    %al,(%bx,%si)
80101cf0:	3d ff ef             	cmp    $0xefff,%ax
80101cf3:	ff                   	(bad)  
80101cf4:	ff 77 49             	pushw  0x49(%bx)
80101cf7:	ba 00 f0             	mov    $0xf000,%dx
80101cfa:	ff                   	(bad)  
80101cfb:	ff 29                	ljmp   *(%bx,%di)
80101cfd:	c2 39 da             	ret    $0xda39
80101d00:	72 3e                	jb     80101d40 <early_mapping_add_kmmap+0x74>
80101d02:	89 74 24             	mov    %si,0x24(%si)
80101d05:	0c 89                	or     $0x89,%al
80101d07:	7c 24                	jl     80101d2d <early_mapping_add_kmmap+0x61>
80101d09:	10 89 44 24          	adc    %cl,0x2444(%bx,%di)
80101d0d:	14 89                	adc    $0x89,%al
80101d0f:	5c                   	pop    %sp
80101d10:	24 18                	and    $0x18,%al
80101d12:	c7 44 24 1c 01       	movw   $0x11c,0x24(%si)
80101d17:	00 00                	add    %al,(%bx,%si)
80101d19:	00 83 ec 0c          	add    %al,0xcec(%bp,%di)
80101d1d:	8d 44 24             	lea    0x24(%si),%ax
80101d20:	18 50 e8             	sbb    %dl,-0x18(%bx,%si)
80101d23:	39 fe                	cmp    %di,%si
80101d25:	ff                   	(bad)  
80101d26:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
80101d2a:	85 c0                	test   %ax,%ax
80101d2c:	78 12                	js     80101d40 <early_mapping_add_kmmap+0x74>
80101d2e:	01 9d 60 00          	add    %bx,0x60(%di)
80101d32:	00 00                	add    %al,(%bx,%si)
80101d34:	8b 44 24             	mov    0x24(%si),%ax
80101d37:	14 83                	adc    $0x83,%al
80101d39:	c4 2c                	les    (%si),%bp
80101d3b:	5b                   	pop    %bx
80101d3c:	5e                   	pop    %si
80101d3d:	5f                   	pop    %di
80101d3e:	5d                   	pop    %bp
80101d3f:	c3                   	ret    
80101d40:	31 c0                	xor    %ax,%ax
80101d42:	83 c4 2c             	add    $0x2c,%sp
80101d45:	5b                   	pop    %bx
80101d46:	5e                   	pop    %si
80101d47:	5f                   	pop    %di
80101d48:	5d                   	pop    %bp
80101d49:	c3                   	ret    
80101d4a:	66 90                	xchg   %eax,%eax

80101d4c <early_mapping_next>:
80101d4c:	56                   	push   %si
80101d4d:	53                   	push   %bx
80101d4e:	e8 39 3a             	call   8010578a <__text_end_kern+0x2>
80101d51:	00 00                	add    %al,(%bx,%si)
80101d53:	81 c3 6d 95          	add    $0x956d,%bx
80101d57:	00 00                	add    %al,(%bx,%si)
80101d59:	8b 44 24             	mov    0x24(%si),%ax
80101d5c:	0c 85                	or     $0x85,%al
80101d5e:	c0                   	(bad)  
80101d5f:	74 3b                	je     80101d9c <early_mapping_next+0x50>
80101d61:	83 c0 14             	add    $0x14,%ax
80101d64:	8d 93 80 00          	lea    0x80(%bp,%di),%dx
80101d68:	00 00                	add    %al,(%bx,%si)
80101d6a:	89 c1                	mov    %ax,%cx
80101d6c:	29 d1                	sub    %dx,%cx
80101d6e:	c1 f9 02             	sar    $0x2,%cx
80101d71:	8d 14                	lea    (%si),%dx
80101d73:	89 8d 14 92          	mov    %cx,-0x6dec(%di)
80101d77:	01 d2                	add    %dx,%dx
80101d79:	01 ca                	add    %cx,%dx
80101d7b:	89 d6                	mov    %dx,%si
80101d7d:	c1 e6 08             	shl    $0x8,%si
80101d80:	01 f2                	add    %si,%dx
80101d82:	89 d6                	mov    %dx,%si
80101d84:	c1 e6 10             	shl    $0x10,%si
80101d87:	01 f2                	add    %si,%dx
80101d89:	8d 14                	lea    (%si),%dx
80101d8b:	91                   	xchg   %ax,%cx
80101d8c:	85 d2                	test   %dx,%dx
80101d8e:	78 18                	js     80101da8 <early_mapping_next+0x5c>
80101d90:	39 93 68 00          	cmp    %dx,0x68(%bp,%di)
80101d94:	00 00                	add    %al,(%bx,%si)
80101d96:	7e 10                	jle    80101da8 <early_mapping_next+0x5c>
80101d98:	5b                   	pop    %bx
80101d99:	5e                   	pop    %si
80101d9a:	c3                   	ret    
80101d9b:	90                   	nop
80101d9c:	31 d2                	xor    %dx,%dx
80101d9e:	8d 83 80 00          	lea    0x80(%bp,%di),%ax
80101da2:	00 00                	add    %al,(%bx,%si)
80101da4:	eb ea                	jmp    80101d90 <early_mapping_next+0x44>
80101da6:	66 90                	xchg   %eax,%eax
80101da8:	31 c0                	xor    %ax,%ax
80101daa:	5b                   	pop    %bx
80101dab:	5e                   	pop    %si
80101dac:	c3                   	ret    
80101dad:	66 90                	xchg   %eax,%eax
80101daf:	90                   	nop

80101db0 <jump_handlers_clear>:
80101db0:	e8 df 39             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80101db3:	00 00                	add    %al,(%bx,%si)
80101db5:	05 0b 95             	add    $0x950b,%ax
80101db8:	00 00                	add    %al,(%bx,%si)
80101dba:	c7 80 48 01 00 00    	movw   $0x0,0x148(%bx,%si)
80101dc0:	00 00                	add    %al,(%bx,%si)
80101dc2:	00 00                	add    %al,(%bx,%si)
80101dc4:	c3                   	ret    
80101dc5:	8d 76 00             	lea    0x0(%bp),%si

80101dc8 <jump_handlers_add>:
80101dc8:	53                   	push   %bx
80101dc9:	83 ec 08             	sub    $0x8,%sp
80101dcc:	e8 bb 39             	call   8010578a <__text_end_kern+0x2>
80101dcf:	00 00                	add    %al,(%bx,%si)
80101dd1:	81 c3 ef 94          	add    $0x94ef,%bx
80101dd5:	00 00                	add    %al,(%bx,%si)
80101dd7:	8b 83 48 01          	mov    0x148(%bp,%di),%ax
80101ddb:	00 00                	add    %al,(%bx,%si)
80101ddd:	83 f8 0a             	cmp    $0xa,%ax
80101de0:	7f 19                	jg     80101dfb <jump_handlers_add+0x33>
80101de2:	74 10                	je     80101df4 <jump_handlers_add+0x2c>
80101de4:	40                   	inc    %ax
80101de5:	89 83 48 01          	mov    %ax,0x148(%bp,%di)
80101de9:	00 00                	add    %al,(%bx,%si)
80101deb:	31 c0                	xor    %ax,%ax
80101ded:	83 c4 08             	add    $0x8,%sp
80101df0:	5b                   	pop    %bx
80101df1:	c3                   	ret    
80101df2:	66 90                	xchg   %eax,%eax
80101df4:	b8 ff ff             	mov    $0xffff,%ax
80101df7:	ff                   	(bad)  
80101df8:	ff                   	(bad)  
80101df9:	eb f2                	jmp    80101ded <jump_handlers_add+0x25>
80101dfb:	83 ec 0c             	sub    $0xc,%sp
80101dfe:	8d 83 5c a8          	lea    -0x57a4(%bp,%di),%ax
80101e02:	ff                   	(bad)  
80101e03:	ff 50 e8             	call   *-0x18(%bx,%si)
80101e06:	c2 14 00             	ret    $0x14
80101e09:	00 66 90             	add    %ah,-0x70(%bp)

80101e0c <jump_handlers_apply>:
80101e0c:	c3                   	ret    
80101e0d:	66 90                	xchg   %eax,%eax
80101e0f:	90                   	nop

80101e10 <bundle_simple_size>:
80101e10:	8b 44 24             	mov    0x24(%si),%ax
80101e13:	04 8b                	add    $0x8b,%al
80101e15:	40                   	inc    %ax
80101e16:	fc                   	cld    
80101e17:	c3                   	ret    

80101e18 <later_alloc_init>:
80101e18:	55                   	push   %bp
80101e19:	57                   	push   %di
80101e1a:	56                   	push   %si
80101e1b:	53                   	push   %bx
80101e1c:	83 ec 0c             	sub    $0xc,%sp
80101e1f:	e8 68 39             	call   8010578a <__text_end_kern+0x2>
80101e22:	00 00                	add    %al,(%bx,%si)
80101e24:	81 c3 9c 94          	add    $0x949c,%bx
80101e28:	00 00                	add    %al,(%bx,%si)
80101e2a:	8b b3 48 e6          	mov    -0x19b8(%bp,%di),%si
80101e2e:	ff                   	(bad)  
80101e2f:	ff 85 f6 74          	incw   0x74f6(%di)
80101e33:	4b                   	dec    %bx
80101e34:	8b 93 4c e6          	mov    -0x19b4(%bp,%di),%dx
80101e38:	ff                   	(bad)  
80101e39:	ff 0f                	decw   (%bx)
80101e3b:	af                   	scas   %es:(%di),%ax
80101e3c:	d6                   	(bad)  
80101e3d:	83 c2 10             	add    $0x10,%dx
80101e40:	b8 00 10             	mov    $0x1000,%ax
80101e43:	00 00                	add    %al,(%bx,%si)
80101e45:	8b 8b 60 e6          	mov    -0x19a0(%bp,%di),%cx
80101e49:	ff                   	(bad)  
80101e4a:	ff d3                	call   *%bx
80101e4c:	e0 89                	loopne 80101dd7 <jump_handlers_add+0xf>
80101e4e:	c1 39 c2             	sarw   $0xc2,(%bx,%di)
80101e51:	77 36                	ja     80101e89 <later_alloc_init+0x71>
80101e53:	8d 83 6c e6          	lea    -0x1994(%bp,%di),%ax
80101e57:	ff                   	(bad)  
80101e58:	ff                   	(bad)  
80101e59:	bf 00 10             	mov    $0x1000,%di
80101e5c:	00 00                	add    %al,(%bx,%si)
80101e5e:	eb 19                	jmp    80101e79 <later_alloc_init+0x61>
80101e60:	8b 50 04             	mov    0x4(%bx,%si),%dx
80101e63:	0f af d6             	imul   %si,%dx
80101e66:	83 c2 10             	add    $0x10,%dx
80101e69:	8b 48 18             	mov    0x18(%bx,%si),%cx
80101e6c:	89 fd                	mov    %di,%bp
80101e6e:	d3 e5                	shl    %cl,%bp
80101e70:	89 e9                	mov    %bp,%cx
80101e72:	83 c0 24             	add    $0x24,%ax
80101e75:	39 ea                	cmp    %bp,%dx
80101e77:	77 10                	ja     80101e89 <later_alloc_init+0x71>
80101e79:	8b 30                	mov    (%bx,%si),%si
80101e7b:	85 f6                	test   %si,%si
80101e7d:	75 e1                	jne    80101e60 <later_alloc_init+0x48>
80101e7f:	31 c0                	xor    %ax,%ax
80101e81:	83 c4 0c             	add    $0xc,%sp
80101e84:	5b                   	pop    %bx
80101e85:	5e                   	pop    %si
80101e86:	5f                   	pop    %di
80101e87:	5d                   	pop    %bp
80101e88:	c3                   	ret    
80101e89:	56                   	push   %si
80101e8a:	51                   	push   %cx
80101e8b:	52                   	push   %dx
80101e8c:	8d 83 84 a8          	lea    -0x577c(%bp,%di),%ax
80101e90:	ff                   	(bad)  
80101e91:	ff 50 e8             	call   *-0x18(%bx,%si)
80101e94:	24 f5                	and    $0xf5,%al
80101e96:	ff                   	(bad)  
80101e97:	ff 8d 83 c0          	decw   -0x3f7d(%di)
80101e9b:	a8 ff                	test   $0xff,%al
80101e9d:	ff 89 04 24          	decw   0x2404(%bx,%di)
80101ea1:	e8 26 14             	call   801032ca <__local_panic+0x2>
80101ea4:	00 00                	add    %al,(%bx,%si)
80101ea6:	66 90                	xchg   %eax,%eax

80101ea8 <get_order>:
80101ea8:	53                   	push   %bx
80101ea9:	e8 ea 38             	call   80105796 <__x86.get_pc_thunk.ax+0x2>
80101eac:	00 00                	add    %al,(%bx,%si)
80101eae:	81 c2 12 94          	add    $0x9412,%dx
80101eb2:	00 00                	add    %al,(%bx,%si)
80101eb4:	8b 44 24             	mov    0x24(%si),%ax
80101eb7:	08 8d 58 08          	or     %cl,0x858(%di)
80101ebb:	8b 82 48 e6          	mov    -0x19b8(%bp,%si),%ax
80101ebf:	ff                   	(bad)  
80101ec0:	ff 85 c0 74          	incw   0x74c0(%di)
80101ec4:	1d 39 c3             	sbb    $0xc339,%ax
80101ec7:	7e 20                	jle    80101ee9 <get_order+0x41>
80101ec9:	8d 92 6c e6          	lea    -0x1994(%bp,%si),%dx
80101ecd:	ff                   	(bad)  
80101ece:	ff 31                	pushw  (%bx,%di)
80101ed0:	c0 eb 08             	shr    $0x8,%bl
80101ed3:	90                   	nop
80101ed4:	83 c2 24             	add    $0x24,%dx
80101ed7:	39 cb                	cmp    %cx,%bx
80101ed9:	7e 0c                	jle    80101ee7 <get_order+0x3f>
80101edb:	40                   	inc    %ax
80101edc:	8b 0a                	mov    (%bp,%si),%cx
80101ede:	85 c9                	test   %cx,%cx
80101ee0:	75 f2                	jne    80101ed4 <get_order+0x2c>
80101ee2:	b8 ff ff             	mov    $0xffff,%ax
80101ee5:	ff                   	(bad)  
80101ee6:	ff 5b c3             	lcall  *-0x3d(%bp,%di)
80101ee9:	31 c0                	xor    %ax,%ax
80101eeb:	5b                   	pop    %bx
80101eec:	c3                   	ret    
80101eed:	8d 76 00             	lea    0x0(%bp),%si

80101ef0 <later_kmalloc>:
80101ef0:	55                   	push   %bp
80101ef1:	57                   	push   %di
80101ef2:	56                   	push   %si
80101ef3:	53                   	push   %bx
80101ef4:	83 ec 4c             	sub    $0x4c,%sp
80101ef7:	e8 98 38             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80101efa:	00 00                	add    %al,(%bx,%si)
80101efc:	05 c4 93             	add    $0x93c4,%ax
80101eff:	00 00                	add    %al,(%bx,%si)
80101f01:	89 44 24             	mov    %ax,0x24(%si)
80101f04:	08 8b 7c 24          	or     %cl,0x247c(%bp,%di)
80101f08:	60                   	pusha  
80101f09:	8b 80 48 e6          	mov    -0x19b8(%bx,%si),%ax
80101f0d:	ff                   	(bad)  
80101f0e:	ff 85 c0 74          	incw   0x74c0(%di)
80101f12:	23 8d 4f 08          	and    0x84f(%di),%cx
80101f16:	39 c1                	cmp    %ax,%cx
80101f18:	7e 2f                	jle    80101f49 <later_kmalloc+0x59>
80101f1a:	8b 44 24             	mov    0x24(%si),%ax
80101f1d:	08 8d 80 6c          	or     %cl,0x6c80(%di)
80101f21:	e6 ff                	out    %al,$0xff
80101f23:	ff 31                	pushw  (%bx,%di)
80101f25:	ff                   	(bad)  
80101f26:	eb 07                	jmp    80101f2f <later_kmalloc+0x3f>
80101f28:	83 c0 24             	add    $0x24,%ax
80101f2b:	39 d1                	cmp    %dx,%cx
80101f2d:	7e 1d                	jle    80101f4c <later_kmalloc+0x5c>
80101f2f:	47                   	inc    %di
80101f30:	8b 10                	mov    (%bx,%si),%dx
80101f32:	85 d2                	test   %dx,%dx
80101f34:	75 f2                	jne    80101f28 <later_kmalloc+0x38>
80101f36:	83 ec 0c             	sub    $0xc,%sp
80101f39:	8b 5c 24             	mov    0x24(%si),%bx
80101f3c:	14 8d                	adc    $0x8d,%al
80101f3e:	83 e1 ad             	and    $0xffad,%cx
80101f41:	ff                   	(bad)  
80101f42:	ff 50 e8             	call   *-0x18(%bx,%si)
80101f45:	83 13 00             	adcw   $0x0,(%bp,%di)
80101f48:	00 31                	add    %dh,(%bx,%di)
80101f4a:	ff 90 9c 58          	call   *0x589c(%bx,%si)
80101f4e:	89 44 24             	mov    %ax,0x24(%si)
80101f51:	0c c7                	or     $0xc7,%al
80101f53:	44                   	inc    %sp
80101f54:	24 18                	and    $0x18,%al
80101f56:	04 00                	add    $0x0,%al
80101f58:	00 00                	add    %al,(%bx,%si)
80101f5a:	8b 5c 24             	mov    0x24(%si),%bx
80101f5d:	08 8d 83 40          	or     %cl,0x4083(%di)
80101f61:	e6 ff                	out    %al,$0xff
80101f63:	ff 89 c1 89          	decw   -0x763f(%bx,%di)
80101f67:	44                   	inc    %sp
80101f68:	24 1c                	and    $0x1c,%al
80101f6a:	8d 04                	lea    (%si),%ax
80101f6c:	ff c1                	inc    %cx
80101f6e:	e0 02                	loopne 80101f72 <later_kmalloc+0x82>
80101f70:	8d 2c                	lea    (%si),%bp
80101f72:	08 01                	or     %al,(%bx,%di)
80101f74:	d8 89 44 24          	fmuls  0x2444(%bx,%di)
80101f78:	10 89 7c 24          	adc    %cl,0x247c(%bx,%di)
80101f7c:	14 8b                	adc    $0x8b,%al
80101f7e:	45                   	inc    %bp
80101f7f:	00 85 c0 74          	add    %al,0x74c0(%di)
80101f83:	0b 8b 50 04          	or     0x450(%bp,%di),%cx
80101f87:	85 d2                	test   %dx,%dx
80101f89:	0f 85 11 01          	jne    8010209e <later_kmalloc+0x1ae>
80101f8d:	00 00                	add    %al,(%bx,%si)
80101f8f:	8b 44 24             	mov    0x24(%si),%ax
80101f92:	0c 50                	or     $0x50,%al
80101f94:	9d                   	popf   
80101f95:	8b 44 24             	mov    0x24(%si),%ax
80101f98:	10 8b b0 48          	adc    %cl,0x48b0(%bp,%di)
80101f9c:	e6 ff                	out    %al,$0xff
80101f9e:	ff c7                	inc    %di
80101fa0:	44                   	inc    %sp
80101fa1:	24 34                	and    $0x34,%al
80101fa3:	00 10                	add    %dl,(%bx,%si)
80101fa5:	00 00                	add    %al,(%bx,%si)
80101fa7:	c7 44 24 38 00       	movw   $0x38,0x24(%si)
80101fac:	00 00                	add    %al,(%bx,%si)
80101fae:	00 c7                	add    %al,%bh
80101fb0:	44                   	inc    %sp
80101fb1:	24 3c                	and    $0x3c,%al
80101fb3:	00 00                	add    %al,(%bx,%si)
80101fb5:	00 00                	add    %al,(%bx,%si)
80101fb7:	83 ec 0c             	sub    $0xc,%sp
80101fba:	8d 44 24             	lea    0x24(%si),%ax
80101fbd:	38 50 8b             	cmp    %dl,-0x75(%bx,%si)
80101fc0:	5c                   	pop    %sp
80101fc1:	24 18                	and    $0x18,%al
80101fc3:	e8 d0 0d             	call   80102d96 <pmemset+0x4e>
80101fc6:	00 00                	add    %al,(%bx,%si)
80101fc8:	83 c4 10             	add    $0x10,%sp
80101fcb:	85 c0                	test   %ax,%ax
80101fcd:	0f 85 b1 00          	jne    80102082 <later_kmalloc+0x192>
80101fd1:	00 00                	add    %al,(%bx,%si)
80101fd3:	8b 5c 24             	mov    0x24(%si),%bx
80101fd6:	2c 85                	sub    $0x85,%al
80101fd8:	db 0f                	fisttpl (%bx)
80101fda:	84 bd 00 00          	test   %bh,0x0(%di)
80101fde:	00 8d 43 10          	add    %cl,0x1043(%di)
80101fe2:	89 44 24             	mov    %ax,0x24(%si)
80101fe5:	04 8b                	add    $0x8b,%al
80101fe7:	44                   	inc    %sp
80101fe8:	24 10                	and    $0x10,%al
80101fea:	8d 80 40 e6          	lea    -0x19c0(%bx,%si),%ax
80101fee:	ff                   	(bad)  
80101fef:	ff                   	(bad)  
80101ff0:	ff 40 1c             	incw   0x1c(%bx,%si)
80101ff3:	8b 78 0c             	mov    0xc(%bx,%si),%di
80101ff6:	83 ff 01             	cmp    $0x1,%di
80101ff9:	0f 8e 97 00          	jle    80102094 <later_kmalloc+0x1a4>
80101ffd:	00 00                	add    %al,(%bx,%si)
80101fff:	8b 44 24             	mov    0x24(%si),%ax
80102002:	04 89                	add    $0x89,%al
80102004:	fa                   	cli    
80102005:	89 f1                	mov    %si,%cx
80102007:	f7 d9                	neg    %cx
80102009:	8d 76 00             	lea    0x0(%bp),%si
8010200c:	c7 00 aa ff          	movw   $0xffaa,(%bx,%si)
80102010:	55                   	push   %bp
80102011:	00 01                	add    %al,(%bx,%di)
80102013:	f0 89 44 08          	lock mov %ax,0x8(%si)
80102017:	04 4a                	add    $0x4a,%al
80102019:	83 fa 01             	cmp    $0x1,%dx
8010201c:	75 ee                	jne    8010200c <later_kmalloc+0x11c>
8010201e:	8d 47 fe             	lea    -0x2(%bx),%ax
80102021:	0f af c6             	imul   %si,%ax
80102024:	03 74 24             	add    0x24(%si),%si
80102027:	04 01                	add    $0x1,%al
80102029:	c6 c7 06             	mov    $0x6,%bh
8010202c:	aa                   	stos   %al,%es:(%di)
8010202d:	ff 55 00             	call   *0x0(%di)
80102030:	c7 46 04 00 00       	movw   $0x0,0x4(%bp)
80102035:	00 00                	add    %al,(%bx,%si)
80102037:	8b 44 24             	mov    0x24(%si),%ax
8010203a:	14 89                	adc    $0x89,%al
8010203c:	43                   	inc    %bx
8010203d:	08 89 7b 0c          	or     %cl,0xc7b(%bx,%di)
80102041:	8b 44 24             	mov    0x24(%si),%ax
80102044:	04 89                	add    $0x89,%al
80102046:	43                   	inc    %bx
80102047:	04 8b                	add    $0x8b,%al
80102049:	45                   	inc    %bp
8010204a:	00 89 03 89          	add    %cl,-0x76fd(%bx,%di)
8010204e:	5d                   	pop    %bp
8010204f:	00 8b 44 24          	add    %cl,0x2444(%bp,%di)
80102053:	0c 50                	or     $0x50,%al
80102055:	9d                   	popf   
80102056:	ff 4c 24             	decw   0x24(%si)
80102059:	18 0f                	sbb    %cl,(%bx)
8010205b:	85 1d                	test   %bx,(%di)
8010205d:	ff                   	(bad)  
8010205e:	ff                   	(bad)  
8010205f:	ff 50 ff             	call   *-0x1(%bx,%si)
80102062:	74 24                	je     80102088 <later_kmalloc+0x198>
80102064:	64 6a 04             	fs push $0x4
80102067:	8b 5c 24             	mov    0x24(%si),%bx
8010206a:	14 8d                	adc    $0x8d,%al
8010206c:	83 1c a9             	sbbw   $0xffa9,(%si)
8010206f:	ff                   	(bad)  
80102070:	ff 50 e8             	call   *-0x18(%bx,%si)
80102073:	45                   	inc    %bp
80102074:	f3 ff                	repz (bad) 
80102076:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
8010207a:	31 c0                	xor    %ax,%ax
8010207c:	83 c4 4c             	add    $0x4c,%sp
8010207f:	5b                   	pop    %bx
80102080:	5e                   	pop    %si
80102081:	5f                   	pop    %di
80102082:	5d                   	pop    %bp
80102083:	c3                   	ret    
80102084:	c7 44 24 04 0f       	movw   $0xf04,0x24(%si)
80102089:	00 00                	add    %al,(%bx,%si)
8010208b:	00 bb ff ff          	add    %bh,-0x1(%bp,%di)
8010208f:	ff                   	(bad)  
80102090:	ff                   	(bad)  
80102091:	e9 50 ff             	jmp    80101fe4 <later_kmalloc+0xf4>
80102094:	ff                   	(bad)  
80102095:	ff 8b 74 24          	decw   0x2474(%bp,%di)
80102099:	04 eb                	add    $0xeb,%al
8010209b:	8e 31                	mov    (%bx,%di),%?
8010209d:	c0 eb dc             	shr    $0xdc,%bl
801020a0:	8b 7c 24             	mov    0x24(%si),%di
801020a3:	14 81                	adc    $0x81,%al
801020a5:	3a aa ff 55          	cmp    0x55ff(%bp,%si),%ch
801020a9:	00 75 4f             	add    %dh,0x4f(%di)
801020ac:	8b 4a 04             	mov    0x4(%bp,%si),%cx
801020af:	89 48 04             	mov    %cx,0x4(%bx,%si)
801020b2:	8b 58 0c             	mov    0xc(%bx,%si),%bx
801020b5:	8d 4b ff             	lea    -0x1(%bp,%di),%cx
801020b8:	89 48 0c             	mov    %cx,0xc(%bx,%si)
801020bb:	85 c9                	test   %cx,%cx
801020bd:	75 0b                	jne    801020ca <later_kmalloc+0x1da>
801020bf:	8b 08                	mov    (%bx,%si),%cx
801020c1:	89 4d 00             	mov    %cx,0x0(%di)
801020c4:	c7 00 00 00          	movw   $0x0,(%bx,%si)
801020c8:	00 00                	add    %al,(%bx,%si)
801020ca:	8b 44 24             	mov    0x24(%si),%ax
801020cd:	0c 50                	or     $0x50,%al
801020cf:	9d                   	popf   
801020d0:	8d 04                	lea    (%si),%ax
801020d2:	ff c1                	inc    %cx
801020d4:	e0 02                	loopne 801020d8 <later_kmalloc+0x1e8>
801020d6:	8b 7c 24             	mov    0x24(%si),%di
801020d9:	1c ff                	sbb    $0xff,%al
801020db:	44                   	inc    %sp
801020dc:	07                   	pop    %es
801020dd:	10 8b 7c 24          	adc    %cl,0x247c(%bp,%di)
801020e1:	08 8b 5c 24          	or     %cl,0x245c(%bp,%di)
801020e5:	60                   	pusha  
801020e6:	01 9c 07 58          	add    %bx,0x5807(%si)
801020ea:	e6 ff                	out    %al,$0xff
801020ec:	ff c7                	inc    %di
801020ee:	02 55 00             	add    0x0(%di),%dl
801020f1:	aa                   	stos   %al,%es:(%di)
801020f2:	ff 89 5a 04          	decw   0x45a(%bx,%di)
801020f6:	8d 42 08             	lea    0x8(%bp,%si),%ax
801020f9:	eb 81                	jmp    8010207c <later_kmalloc+0x18c>
801020fb:	83 ec 0c             	sub    $0xc,%sp
801020fe:	8b 5c 24             	mov    0x24(%si),%bx
80102101:	14 8d                	adc    $0x8d,%al
80102103:	83 f4 a8             	xor    $0xffa8,%sp
80102106:	ff                   	(bad)  
80102107:	ff 50 e8             	call   *-0x18(%bx,%si)
8010210a:	be 11 00             	mov    $0x11,%si
8010210d:	00 66 90             	add    %ah,-0x70(%bp)

80102110 <bundle_kmalloc>:
80102110:	c7 44 24 08 00       	movw   $0x8,0x24(%si)
80102115:	00 00                	add    %al,(%bx,%si)
80102117:	00 e9                	add    %ch,%cl
80102119:	d3 fd                	sar    %cl,%bp
8010211b:	ff                   	(bad)  
8010211c:	ff 8d 76 00          	decw   0x76(%di)

80102120 <later_kfree>:
80102120:	55                   	push   %bp
80102121:	57                   	push   %di
80102122:	56                   	push   %si
80102123:	53                   	push   %bx
80102124:	83 ec 3c             	sub    $0x3c,%sp
80102127:	e8 60 36             	call   8010578a <__text_end_kern+0x2>
8010212a:	00 00                	add    %al,(%bx,%si)
8010212c:	81 c3 94 91          	add    $0x9194,%bx
80102130:	00 00                	add    %al,(%bx,%si)
80102132:	8b 4c 24             	mov    0x24(%si),%cx
80102135:	50                   	push   %ax
80102136:	8d 41 f8             	lea    -0x8(%bx,%di),%ax
80102139:	89 c6                	mov    %ax,%si
8010213b:	81 e6 00 f0          	and    $0xf000,%si
8010213f:	ff                   	(bad)  
80102140:	ff 8b 7e 08          	decw   0x87e(%bp,%di)
80102144:	8b 16 83 ff          	mov    -0x7d,%dx
80102148:	09 77 11             	or     %si,0x11(%bx)
8010214b:	f7 c2 ff 0f          	test   $0xfff,%dx
8010214f:	00 00                	add    %al,(%bx,%si)
80102151:	75 09                	jne    8010215c <later_kfree+0x3c>
80102153:	81 79 f8 55 00       	cmpw   $0x55,-0x8(%bx,%di)
80102158:	aa                   	stos   %al,%es:(%di)
80102159:	ff 74 1c             	pushw  0x1c(%si)
8010215c:	57                   	push   %di
8010215d:	52                   	push   %dx
8010215e:	50                   	push   %ax
8010215f:	8d 83 c4 aa          	lea    -0x553c(%bp,%di),%ax
80102163:	ff                   	(bad)  
80102164:	ff 50 e8             	call   *-0x18(%bx,%si)
80102167:	51                   	push   %cx
80102168:	f2 ff                	repnz (bad) 
8010216a:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
8010216e:	83 c4 3c             	add    $0x3c,%sp
80102171:	5b                   	pop    %bx
80102172:	5e                   	pop    %si
80102173:	5f                   	pop    %di
80102174:	5d                   	pop    %bp
80102175:	c3                   	ret    
80102176:	66 90                	xchg   %eax,%eax
80102178:	8b 51 fc             	mov    -0x4(%bx,%di),%dx
8010217b:	8b 6c 24             	mov    0x24(%si),%bp
8010217e:	54                   	push   %sp
8010217f:	85 ed                	test   %bp,%bp
80102181:	74 5d                	je     801021e0 <later_kfree+0xc0>
80102183:	8b 6c 24             	mov    0x24(%si),%bp
80102186:	54                   	push   %sp
80102187:	89 6c 24             	mov    %bp,0x24(%si)
8010218a:	08 39                	or     %bh,(%bx,%di)
8010218c:	ea 0f 85 6d 01       	ljmp   $0x16d,$0x850f
80102191:	00 00                	add    %al,(%bx,%si)
80102193:	c7 41 f8 aa ff       	movw   $0xffaa,-0x8(%bx,%di)
80102198:	55                   	push   %bp
80102199:	00 9c 5a 8b          	add    %bl,-0x74a6(%si)
8010219d:	6e                   	outsb  %ds:(%si),(%dx)
8010219e:	04 89                	add    $0x89,%al
801021a0:	69 fc 89 46          	imul   $0x4689,%sp,%di
801021a4:	04 8b                	add    $0x8b,%al
801021a6:	46                   	inc    %si
801021a7:	0c 40                	or     $0x40,%al
801021a9:	89 46 0c             	mov    %ax,0xc(%bp)
801021ac:	83 f8 01             	cmp    $0x1,%ax
801021af:	74 37                	je     801021e8 <later_kfree+0xc8>
801021b1:	8b 4e 08             	mov    0x8(%bp),%cx
801021b4:	8d 0c                	lea    (%si),%cx
801021b6:	c9                   	leave  
801021b7:	39 84 8b 4c          	cmp    %ax,0x4c8b(%si)
801021bb:	e6 ff                	out    %al,$0xff
801021bd:	ff 74 54             	pushw  0x54(%si)
801021c0:	52                   	push   %dx
801021c1:	9d                   	popf   
801021c2:	8d 04                	lea    (%si),%ax
801021c4:	ff 8d 84 83          	decw   -0x7c7c(%di)
801021c8:	40                   	inc    %ax
801021c9:	e6 ff                	out    %al,$0xff
801021cb:	ff                   	(bad)  
801021cc:	ff 40 14             	incw   0x14(%bx,%si)
801021cf:	8b 7c 24             	mov    0x24(%si),%di
801021d2:	08 29                	or     %ch,(%bx,%di)
801021d4:	78 18                	js     801021ee <later_kfree+0xce>
801021d6:	83 c4 3c             	add    $0x3c,%sp
801021d9:	5b                   	pop    %bx
801021da:	5e                   	pop    %si
801021db:	5f                   	pop    %di
801021dc:	5d                   	pop    %bp
801021dd:	c3                   	ret    
801021de:	66 90                	xchg   %eax,%eax
801021e0:	89 54 24             	mov    %dx,0x24(%si)
801021e3:	08 eb                	or     %ch,%bl
801021e5:	ad                   	lods   %ds:(%si),%ax
801021e6:	66 90                	xchg   %eax,%eax
801021e8:	8b 06 85 c0          	mov    -0x3f7b,%ax
801021ec:	0f 84 36 01          	je     80102326 <later_kfree+0x206>
801021f0:	00 00                	add    %al,(%bx,%si)
801021f2:	89 54 24             	mov    %dx,0x24(%si)
801021f5:	0c 83                	or     $0x83,%al
801021f7:	ec                   	in     (%dx),%al
801021f8:	08 56 8d             	or     %dl,-0x73(%bp)
801021fb:	83 40 ab ff          	addw   $0xffff,-0x55(%bx,%si)
801021ff:	ff 50 e8             	call   *-0x18(%bx,%si)
80102202:	b6 f1                	mov    $0xf1,%dh
80102204:	ff                   	(bad)  
80102205:	ff 8b 46 0c          	decw   0xc46(%bp,%di)
80102209:	83 c4 10             	add    $0x10,%sp
8010220c:	8b 54 24             	mov    0x24(%si),%dx
8010220f:	0c eb                	or     $0xeb,%al
80102211:	9f                   	lahf   
80102212:	66 90                	xchg   %eax,%eax
80102214:	8d 83 40 e6          	lea    -0x19c0(%bp,%di),%ax
80102218:	ff                   	(bad)  
80102219:	ff 89 c1 89          	decw   -0x763f(%bx,%di)
8010221d:	c5 8d 04 ff          	lds    -0xfc(%di),%cx
80102221:	c1 e0 02             	shl    $0x2,%ax
80102224:	8b 0c                	mov    (%si),%cx
80102226:	08 39                	or     %bh,(%bx,%di)
80102228:	ce                   	into   
80102229:	0f 84 39 01          	je     80102366 <later_kfree+0x246>
8010222d:	00 00                	add    %al,(%bx,%si)
8010222f:	8d 84 03 40          	lea    0x4003(%si),%ax
80102233:	e6 ff                	out    %al,$0xff
80102235:	ff 8b 68 04          	decw   0x468(%bp,%di)
80102239:	89 6c 24             	mov    %bp,0x24(%si)
8010223c:	0c 39                	or     $0x39,%al
8010223e:	ee                   	out    %al,(%dx)
8010223f:	0f 84 19 01          	je     8010235c <later_kfree+0x23c>
80102243:	00 00                	add    %al,(%bx,%si)
80102245:	85 c9                	test   %cx,%cx
80102247:	74 27                	je     80102270 <later_kfree+0x150>
80102249:	8b 01                	mov    (%bx,%di),%ax
8010224b:	39 f0                	cmp    %si,%ax
8010224d:	0f 84 19 01          	je     8010236a <later_kfree+0x24a>
80102251:	00 00                	add    %al,(%bx,%si)
80102253:	8b 6c 24             	mov    0x24(%si),%bp
80102256:	08 eb                	or     %ch,%bl
80102258:	0f 8d 76 00          	jge    801022d2 <later_kfree+0x1b2>
8010225c:	8b 08                	mov    (%bx,%si),%cx
8010225e:	39 ce                	cmp    %cx,%si
80102260:	0f 84 b6 00          	je     8010231a <later_kfree+0x1fa>
80102264:	00 00                	add    %al,(%bx,%si)
80102266:	89 c8                	mov    %cx,%ax
80102268:	85 c0                	test   %ax,%ax
8010226a:	75 f0                	jne    8010225c <later_kfree+0x13c>
8010226c:	89 6c 24             	mov    %bp,0x24(%si)
8010226f:	08 8b 44 24          	or     %cl,0x2444(%bp,%di)
80102273:	0c 85                	or     $0x85,%al
80102275:	c0                   	(bad)  
80102276:	74 26                	je     8010229e <later_kfree+0x17e>
80102278:	8b 00                	mov    (%bx,%si),%ax
8010227a:	39 c6                	cmp    %ax,%si
8010227c:	0f 84 ee 00          	je     8010236e <later_kfree+0x24e>
80102280:	00 00                	add    %al,(%bx,%si)
80102282:	8b 6c 24             	mov    0x24(%si),%bp
80102285:	08 85 c0 74          	or     %al,0x74c0(%di)
80102289:	10 8b 08 39          	adc    %cl,0x3908(%bp,%di)
8010228d:	ce                   	into   
8010228e:	0f 84 88 00          	je     8010231a <later_kfree+0x1fa>
80102292:	00 00                	add    %al,(%bx,%si)
80102294:	89 c8                	mov    %cx,%ax
80102296:	85 c0                	test   %ax,%ax
80102298:	75 f0                	jne    8010228a <later_kfree+0x16a>
8010229a:	89 6c 24             	mov    %bp,0x24(%si)
8010229d:	08 89 54 24          	or     %cl,0x2454(%bx,%di)
801022a1:	0c 83                	or     $0x83,%al
801022a3:	ec                   	in     (%dx),%al
801022a4:	08 56 8d             	or     %dl,-0x73(%bp)
801022a7:	83 74 ab ff          	xorw   $0xffff,-0x55(%si)
801022ab:	ff 50 e8             	call   *-0x18(%bx,%si)
801022ae:	0a f1                	or     %cl,%dh
801022b0:	ff                   	(bad)  
801022b1:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
801022b5:	8b 54 24             	mov    0x24(%si),%dx
801022b8:	0c 8d                	or     $0x8d,%al
801022ba:	76 00                	jbe    801022bc <later_kfree+0x19c>
801022bc:	89 54 24             	mov    %dx,0x24(%si)
801022bf:	0c 89                	or     $0x89,%al
801022c1:	74 24                	je     801022e7 <later_kfree+0x1c7>
801022c3:	1c c7                	sbb    $0xc7,%al
801022c5:	44                   	inc    %sp
801022c6:	24 20                	and    $0x20,%al
801022c8:	00 00                	add    %al,(%bx,%si)
801022ca:	00 00                	add    %al,(%bx,%si)
801022cc:	c7 44 24 24 00       	movw   $0x24,0x24(%si)
801022d1:	10 00                	adc    %al,(%bx,%si)
801022d3:	00 c7                	add    %al,%bh
801022d5:	44                   	inc    %sp
801022d6:	24 28                	and    $0x28,%al
801022d8:	00 00                	add    %al,(%bx,%si)
801022da:	00 00                	add    %al,(%bx,%si)
801022dc:	c7 44 24 2c 00       	movw   $0x2c,0x24(%si)
801022e1:	00 00                	add    %al,(%bx,%si)
801022e3:	00 83 ec 0c          	add    %al,0xcec(%bp,%di)
801022e7:	8d 44 24             	lea    0x24(%si),%ax
801022ea:	28 50 e8             	sub    %dl,-0x18(%bx,%si)
801022ed:	2f                   	das    
801022ee:	0b 00                	or     (%bx,%si),%ax
801022f0:	00 83 c4 10          	add    %al,0x10c4(%bp,%di)
801022f4:	8b 54 24             	mov    0x24(%si),%dx
801022f7:	0c e9                	or     $0xe9,%al
801022f9:	c3                   	ret    
801022fa:	fe                   	(bad)  
801022fb:	ff                   	(bad)  
801022fc:	ff 8d 76 00          	decw   0x76(%di)
80102300:	52                   	push   %dx
80102301:	ff 74 24             	pushw  0x24(%si)
80102304:	58                   	pop    %ax
80102305:	50                   	push   %ax
80102306:	8d 83 fc aa          	lea    -0x5504(%bp,%di),%ax
8010230a:	ff                   	(bad)  
8010230b:	ff 50 e8             	call   *-0x18(%bx,%si)
8010230e:	aa                   	stos   %al,%es:(%di)
8010230f:	f0 ff                	lock (bad) 
80102311:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
80102315:	e9 54 fe             	jmp    8010216c <later_kfree+0x4c>
80102318:	ff                   	(bad)  
80102319:	ff 66 90             	jmp    *-0x70(%bp)
8010231c:	89 6c 24             	mov    %bp,0x24(%si)
8010231f:	08 8b 0e 89          	or     %cl,-0x76f2(%bp,%di)
80102323:	08 eb                	or     %ch,%bl
80102325:	96                   	xchg   %ax,%si
80102326:	66 90                	xchg   %eax,%eax
80102328:	8d 83 40 e6          	lea    -0x19c0(%bp,%di),%ax
8010232c:	ff                   	(bad)  
8010232d:	ff 89 c1 89          	decw   -0x763f(%bx,%di)
80102331:	c5 8d 04 ff          	lds    -0xfc(%di),%cx
80102335:	8d 04                	lea    (%si),%ax
80102337:	81 8b 08 89 0e 89    	orw    $0x890e,-0x76f8(%bp,%di)
8010233d:	30 8b 46 08          	xor    %cl,0x846(%bp,%di)
80102341:	8d 04                	lea    (%si),%ax
80102343:	c0 83 bc 83 4c       	rolb   $0x4c,-0x7c44(%bp,%di)
80102348:	e6 ff                	out    %al,$0xff
8010234a:	ff 01                	incw   (%bx,%di)
8010234c:	0f 85 6e fe          	jne    801021be <later_kfree+0x9e>
80102350:	ff                   	(bad)  
80102351:	ff 8d 04 ff          	decw   -0xfc(%di)
80102355:	89 4c 85             	mov    %cx,-0x7b(%si)
80102358:	00 e9                	add    %ch,%cl
8010235a:	5e                   	pop    %si
8010235b:	ff                   	(bad)  
8010235c:	ff                   	(bad)  
8010235d:	ff 8b 0e 89          	decw   -0x76f2(%bp,%di)
80102361:	48                   	dec    %ax
80102362:	04 e9                	add    $0xe9,%al
80102364:	54                   	push   %sp
80102365:	ff                   	(bad)  
80102366:	ff                   	(bad)  
80102367:	ff 8b 0e eb          	decw   -0x14f2(%bp,%di)
8010236b:	e6 89                	out    %al,$0x89
8010236d:	c8 eb b0 8b          	enter  $0xb0eb,$0x8b
80102371:	44                   	inc    %sp
80102372:	24 0c                	and    $0xc,%al
80102374:	eb aa                	jmp    80102320 <later_kfree+0x200>
80102376:	66 90                	xchg   %eax,%eax

80102378 <bundle_kfree>:
80102378:	83 ec 14             	sub    $0x14,%sp
8010237b:	8b 44 24             	mov    0x24(%si),%ax
8010237e:	18 ff                	sbb    %bh,%bh
80102380:	70 fc                	jo     8010237e <bundle_kfree+0x6>
80102382:	50                   	push   %ax
80102383:	e8 98 fd             	call   8010211e <bundle_kmalloc+0xe>
80102386:	ff                   	(bad)  
80102387:	ff 83 c4 1c          	incw   0x1cc4(%bp,%di)
8010238b:	c3                   	ret    

8010238c <master_later_alloc>:
8010238c:	53                   	push   %bx
8010238d:	83 ec 08             	sub    $0x8,%sp
80102390:	e8 f7 33             	call   8010578a <__text_end_kern+0x2>
80102393:	00 00                	add    %al,(%bx,%si)
80102395:	81 c3 2b 8f          	add    $0x8f2b,%bx
80102399:	00 00                	add    %al,(%bx,%si)
8010239b:	e8 78 fa             	call   80101e16 <bundle_simple_size+0x6>
8010239e:	ff                   	(bad)  
8010239f:	ff 83 ec 0c          	incw   0xcec(%bp,%di)
801023a3:	8d 83 84 ff          	lea    -0x7c(%bp,%di),%ax
801023a7:	ff                   	(bad)  
801023a8:	ff 50 e8             	call   *-0x18(%bx,%si)
801023ab:	2d 0d 00             	sub    $0xd,%ax
801023ae:	00 83 c4 18          	add    %al,0x18c4(%bp,%di)
801023b2:	5b                   	pop    %bx
801023b3:	c3                   	ret    

801023b4 <page_index_init>:
801023b4:	57                   	push   %di
801023b5:	56                   	push   %si
801023b6:	53                   	push   %bx
801023b7:	e8 d0 33             	call   8010578a <__text_end_kern+0x2>
801023ba:	00 00                	add    %al,(%bx,%si)
801023bc:	81 c3 04 8f          	add    $0x8f04,%bx
801023c0:	00 00                	add    %al,(%bx,%si)
801023c2:	8b 7c 24             	mov    0x24(%si),%di
801023c5:	10 83 ec 0c          	adc    %al,0xcec(%bp,%di)
801023c9:	6a 00                	push   $0x0
801023cb:	e8 7c f9             	call   80101d4a <early_mapping_add_kmmap+0x7e>
801023ce:	ff                   	(bad)  
801023cf:	ff 89 c6 89          	decw   -0x763a(%bx,%di)
801023d3:	3c 24                	cmp    $0x24,%al
801023d5:	e8 fe 13             	call   801037d6 <mmu_init+0x6>
801023d8:	00 00                	add    %al,(%bx,%si)
801023da:	83 c4 10             	add    $0x10,%sp
801023dd:	85 f6                	test   %si,%si
801023df:	75 15                	jne    801023f6 <page_index_init+0x42>
801023e1:	eb 35                	jmp    80102418 <page_index_init+0x64>
801023e3:	90                   	nop
801023e4:	83 ec 0c             	sub    $0xc,%sp
801023e7:	56                   	push   %si
801023e8:	e8 5f f9             	call   80101d4a <early_mapping_add_kmmap+0x7e>
801023eb:	ff                   	(bad)  
801023ec:	ff 89 c6 83          	decw   -0x7c3a(%bx,%di)
801023f0:	c4 10                	les    (%bx,%si),%dx
801023f2:	85 c0                	test   %ax,%ax
801023f4:	74 22                	je     80102418 <page_index_init+0x64>
801023f6:	83 ec 0c             	sub    $0xc,%sp
801023f9:	ff 76 0c             	pushw  0xc(%bp)
801023fc:	ff 76 08             	pushw  0x8(%bp)
801023ff:	ff 76 04             	pushw  0x4(%bp)
80102402:	ff 36 57 e8          	pushw  -0x17a9
80102406:	e2 12                	loop   8010241a <page_index_init+0x66>
80102408:	00 00                	add    %al,(%bx,%si)
8010240a:	83 c4 20             	add    $0x20,%sp
8010240d:	83 f8 ff             	cmp    $0xffff,%ax
80102410:	75 d2                	jne    801023e4 <page_index_init+0x30>
80102412:	5b                   	pop    %bx
80102413:	5e                   	pop    %si
80102414:	5f                   	pop    %di
80102415:	c3                   	ret    
80102416:	66 90                	xchg   %eax,%eax
80102418:	31 c0                	xor    %ax,%ax
8010241a:	5b                   	pop    %bx
8010241b:	5e                   	pop    %si
8010241c:	5f                   	pop    %di
8010241d:	c3                   	ret    
8010241e:	66 90                	xchg   %eax,%eax

80102420 <mmu_handlers_clear>:
80102420:	e8 6f 33             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80102423:	00 00                	add    %al,(%bx,%si)
80102425:	05 9b 8e             	add    $0x8e9b,%ax
80102428:	00 00                	add    %al,(%bx,%si)
8010242a:	c7 80 88 01 00 00    	movw   $0x0,0x188(%bx,%si)
80102430:	00 00                	add    %al,(%bx,%si)
80102432:	00 00                	add    %al,(%bx,%si)
80102434:	c3                   	ret    
80102435:	8d 76 00             	lea    0x0(%bp),%si

80102438 <mmu_handlers_add>:
80102438:	53                   	push   %bx
80102439:	83 ec 08             	sub    $0x8,%sp
8010243c:	e8 4b 33             	call   8010578a <__text_end_kern+0x2>
8010243f:	00 00                	add    %al,(%bx,%si)
80102441:	81 c3 7f 8e          	add    $0x8e7f,%bx
80102445:	00 00                	add    %al,(%bx,%si)
80102447:	8b 83 88 01          	mov    0x188(%bp,%di),%ax
8010244b:	00 00                	add    %al,(%bx,%si)
8010244d:	83 f8 0a             	cmp    $0xa,%ax
80102450:	7f 25                	jg     80102477 <mmu_handlers_add+0x3f>
80102452:	74 1c                	je     80102470 <mmu_handlers_add+0x38>
80102454:	8b 4c 24             	mov    0x24(%si),%cx
80102457:	10 89 8c 83          	adc    %cl,-0x7c74(%bx,%di)
8010245b:	60                   	pusha  
8010245c:	01 00                	add    %ax,(%bx,%si)
8010245e:	00 40 89             	add    %al,-0x77(%bx,%si)
80102461:	83 88 01 00 00       	orw    $0x0,0x1(%bx,%si)
80102466:	31 c0                	xor    %ax,%ax
80102468:	83 c4 08             	add    $0x8,%sp
8010246b:	5b                   	pop    %bx
8010246c:	c3                   	ret    
8010246d:	8d 76 00             	lea    0x0(%bp),%si
80102470:	b8 ff ff             	mov    $0xffff,%ax
80102473:	ff                   	(bad)  
80102474:	ff                   	(bad)  
80102475:	eb f1                	jmp    80102468 <mmu_handlers_add+0x30>
80102477:	83 ec 0c             	sub    $0xc,%sp
8010247a:	8d 83 a0 ab          	lea    -0x5460(%bp,%di),%ax
8010247e:	ff                   	(bad)  
8010247f:	ff 50 e8             	call   *-0x18(%bx,%si)
80102482:	46                   	inc    %si
80102483:	0e                   	push   %cs
80102484:	00 00                	add    %al,(%bx,%si)
80102486:	66 90                	xchg   %eax,%eax

80102488 <mmu_handlers_apply>:
80102488:	56                   	push   %si
80102489:	53                   	push   %bx
8010248a:	52                   	push   %dx
8010248b:	e8 00 33             	call   8010578e <__x86.get_pc_thunk.bx+0x2>
8010248e:	00 00                	add    %al,(%bx,%si)
80102490:	81 c6 30 8e          	add    $0x8e30,%si
80102494:	00 00                	add    %al,(%bx,%si)
80102496:	8b 8e 88 01          	mov    0x188(%bp),%cx
8010249a:	00 00                	add    %al,(%bx,%si)
8010249c:	85 c9                	test   %cx,%cx
8010249e:	7e 14                	jle    801024b4 <mmu_handlers_apply+0x2c>
801024a0:	31 db                	xor    %bx,%bx
801024a2:	66 90                	xchg   %eax,%eax
801024a4:	ff 94 9e 60          	call   *0x609e(%si)
801024a8:	01 00                	add    %ax,(%bx,%si)
801024aa:	00 43 39             	add    %al,0x39(%bp,%di)
801024ad:	9e                   	sahf   
801024ae:	88 01                	mov    %al,(%bx,%di)
801024b0:	00 00                	add    %al,(%bx,%si)
801024b2:	7f f0                	jg     801024a4 <mmu_handlers_apply+0x1c>
801024b4:	58                   	pop    %ax
801024b5:	5b                   	pop    %bx
801024b6:	5e                   	pop    %si
801024b7:	c3                   	ret    

801024b8 <new_page_node>:
801024b8:	57                   	push   %di
801024b9:	53                   	push   %bx
801024ba:	83 ec 0c             	sub    $0xc,%sp
801024bd:	e8 ca 32             	call   8010578a <__text_end_kern+0x2>
801024c0:	00 00                	add    %al,(%bx,%si)
801024c2:	81 c3 fe 8d          	add    $0x8dfe,%bx
801024c6:	00 00                	add    %al,(%bx,%si)
801024c8:	6a 02                	push   $0x2
801024ca:	6a 10                	push   $0x10
801024cc:	e8 ef f4             	call   801019be <inf_loop+0x2>
801024cf:	ff                   	(bad)  
801024d0:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
801024d4:	85 c0                	test   %ax,%ax
801024d6:	74 19                	je     801024f1 <new_page_node+0x39>
801024d8:	89 c2                	mov    %ax,%dx
801024da:	b9 04 00             	mov    $0x4,%cx
801024dd:	00 00                	add    %al,(%bx,%si)
801024df:	31 c0                	xor    %ax,%ax
801024e1:	89 d7                	mov    %dx,%di
801024e3:	f3 ab                	rep stos %ax,%es:(%di)
801024e5:	89 52 08             	mov    %dx,0x8(%bp,%si)
801024e8:	89 52 0c             	mov    %dx,0xc(%bp,%si)
801024eb:	89 d0                	mov    %dx,%ax
801024ed:	5a                   	pop    %dx
801024ee:	5b                   	pop    %bx
801024ef:	5f                   	pop    %di
801024f0:	c3                   	ret    
801024f1:	83 ec 0c             	sub    $0xc,%sp
801024f4:	8d 83 fe ad          	lea    -0x5202(%bp,%di),%ax
801024f8:	ff                   	(bad)  
801024f9:	ff 50 e8             	call   *-0x18(%bx,%si)
801024fc:	cc                   	int3   
801024fd:	0d 00 00             	or     $0x0,%ax

80102500 <switch_map_bitcount>:
80102500:	56                   	push   %si
80102501:	53                   	push   %bx
80102502:	51                   	push   %cx
80102503:	e8 84 32             	call   8010578a <__text_end_kern+0x2>
80102506:	00 00                	add    %al,(%bx,%si)
80102508:	81 c3 b8 8d          	add    $0x8db8,%bx
8010250c:	00 00                	add    %al,(%bx,%si)
8010250e:	83 f8 09             	cmp    $0x9,%ax
80102511:	7f 23                	jg     80102536 <switch_map_bitcount+0x36>
80102513:	8b 84 83 80          	mov    -0x7f7d(%si),%ax
80102517:	2a 00                	sub    (%bx,%si),%al
80102519:	00 85 c0 74          	add    %al,0x74c0(%di)
8010251d:	18 89 d6 c1          	sbb    %cl,-0x3e2a(%bx,%di)
80102521:	fe 03                	incb   (%bp,%di)
80102523:	83 e2 07             	and    $0x7,%dx
80102526:	bb 01 00             	mov    $0x1,%bx
80102529:	00 00                	add    %al,(%bx,%si)
8010252b:	88 d1                	mov    %dl,%cl
8010252d:	d3 e3                	shl    %cl,%bx
8010252f:	30 1c                	xor    %bl,(%si)
80102531:	30 58 5b             	xor    %bl,0x5b(%bx,%si)
80102534:	5e                   	pop    %si
80102535:	c3                   	ret    
80102536:	83 ec 0c             	sub    $0xc,%sp
80102539:	8d 83 1a ae          	lea    -0x51e6(%bp,%di),%ax
8010253d:	ff                   	(bad)  
8010253e:	ff 50 e8             	call   *-0x18(%bx,%si)
80102541:	87 0d                	xchg   %cx,(%di)
80102543:	00 00                	add    %al,(%bx,%si)
80102545:	8d 76 00             	lea    0x0(%bp),%si

80102548 <from_pool>:
80102548:	57                   	push   %di
80102549:	56                   	push   %si
8010254a:	53                   	push   %bx
8010254b:	83 ec 10             	sub    $0x10,%sp
8010254e:	e8 39 32             	call   8010578a <__text_end_kern+0x2>
80102551:	00 00                	add    %al,(%bx,%si)
80102553:	81 c3 6d 8d          	add    $0x8d6d,%bx
80102557:	00 00                	add    %al,(%bx,%si)
80102559:	c1 e0 04             	shl    $0x4,%ax
8010255c:	8b 8c 03 cc          	mov    -0x33fd(%si),%cx
80102560:	29 00                	sub    %ax,(%bx,%si)
80102562:	00 8d 84 03          	add    %cl,0x384(%di)
80102566:	c0 29 00             	shrb   $0x0,(%bx,%di)
80102569:	00 39                	add    %bh,(%bx,%di)
8010256b:	c1                   	(bad)  
8010256c:	74 3a                	je     801025a8 <from_pool+0x60>
8010256e:	8b 01                	mov    (%bx,%di),%ax
80102570:	8b 51 04             	mov    0x4(%bx,%di),%dx
80102573:	89 44 24             	mov    %ax,0x24(%si)
80102576:	08 89 54 24          	or     %cl,0x2454(%bx,%di)
8010257a:	0c 8b                	or     $0x8b,%al
8010257c:	71 08                	jno    80102586 <from_pool+0x3e>
8010257e:	8b 79 0c             	mov    0xc(%bx,%di),%di
80102581:	89 7e 0c             	mov    %di,0xc(%bp)
80102584:	8b 79 0c             	mov    0xc(%bx,%di),%di
80102587:	89 77 08             	mov    %si,0x8(%bx)
8010258a:	83 ec 0c             	sub    $0xc,%sp
8010258d:	51                   	push   %cx
8010258e:	e8 65 f4             	call   801019f6 <early_simple_alloc+0x36>
80102591:	ff                   	(bad)  
80102592:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
80102596:	8b 44 24             	mov    0x24(%si),%ax
80102599:	08 8b 54 24          	or     %cl,0x2454(%bp,%di)
8010259d:	0c 83                	or     $0x83,%al
8010259f:	c4 10                	les    (%bx,%si),%dx
801025a1:	5b                   	pop    %bx
801025a2:	5e                   	pop    %si
801025a3:	5f                   	pop    %di
801025a4:	c3                   	ret    
801025a5:	8d 76 00             	lea    0x0(%bp),%si
801025a8:	b8 ff ff             	mov    $0xffff,%ax
801025ab:	ff                   	(bad)  
801025ac:	ff                   	(bad)  
801025ad:	ba ff ff             	mov    $0xffff,%dx
801025b0:	ff                   	(bad)  
801025b1:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
801025b5:	5b                   	pop    %bx
801025b6:	5e                   	pop    %si
801025b7:	5f                   	pop    %di
801025b8:	c3                   	ret    
801025b9:	8d 76 00             	lea    0x0(%bp),%si

801025bc <page_alloc_init>:
801025bc:	55                   	push   %bp
801025bd:	57                   	push   %di
801025be:	56                   	push   %si
801025bf:	53                   	push   %bx
801025c0:	83 ec 2c             	sub    $0x2c,%sp
801025c3:	e8 d4 31             	call   8010579a <__x86.get_pc_thunk.dx+0x2>
801025c6:	00 00                	add    %al,(%bx,%si)
801025c8:	81 c5 f8 8c          	add    $0x8cf8,%bp
801025cc:	00 00                	add    %al,(%bx,%si)
801025ce:	8b 44 24             	mov    0x24(%si),%ax
801025d1:	40                   	inc    %ax
801025d2:	8b 54 24             	mov    0x24(%si),%dx
801025d5:	44                   	inc    %sp
801025d6:	8b 5c 24             	mov    0x24(%si),%bx
801025d9:	48                   	dec    %ax
801025da:	8b 4c 24             	mov    0x24(%si),%cx
801025dd:	4c                   	dec    %sp
801025de:	8d b5 c0 29          	lea    0x29c0(%di),%si
801025e2:	00 00                	add    %al,(%bx,%si)
801025e4:	8d bd 70 2a          	lea    0x2a70(%di),%di
801025e8:	00 00                	add    %al,(%bx,%si)
801025ea:	66 90                	xchg   %eax,%eax
801025ec:	c7 06 ff ff ff ff    	movw   $0xffff,-0x1
801025f2:	c7 46 04 ff ff       	movw   $0xffff,0x4(%bp)
801025f7:	ff                   	(bad)  
801025f8:	ff 89 76 08          	decw   0x876(%bx,%di)
801025fc:	89 76 0c             	mov    %si,0xc(%bp)
801025ff:	83 c6 10             	add    $0x10,%si
80102602:	39 f7                	cmp    %si,%di
80102604:	75 e6                	jne    801025ec <page_alloc_init+0x30>
80102606:	05 ff ff             	add    $0xffff,%ax
80102609:	3f                   	aas    
8010260a:	00 83 d2 00          	add    %al,0xd2(%bp,%di)
8010260e:	89 c7                	mov    %ax,%di
80102610:	81 e7 00 00          	and    $0x0,%di
80102614:	c0 ff 89             	sar    $0x89,%bh
80102617:	7c 24                	jl     8010263d <page_alloc_init+0x81>
80102619:	18 89 54 24          	sbb    %cl,0x2454(%bx,%di)
8010261d:	1c 81                	sbb    $0x81,%al
8010261f:	e3 00                	jcxz   80102621 <page_alloc_init+0x65>
80102621:	00 c0                	add    %al,%al
80102623:	ff 89 d8 89          	decw   -0x7628(%bx,%di)
80102627:	ca 2b 44             	lret   $0x442b
8010262a:	24 18                	and    $0x18,%al
8010262c:	1b 54 24             	sbb    0x24(%si),%dx
8010262f:	1c 89                	sbb    $0x89,%al
80102631:	44                   	inc    %sp
80102632:	24 08                	and    $0x8,%al
80102634:	89 54 24             	mov    %dx,0x24(%si)
80102637:	0c 83                	or     $0x83,%al
80102639:	fa                   	cli    
8010263a:	00 77 0b             	add    %dh,0xb(%bx)
8010263d:	3d 00 00             	cmp    $0x0,%ax
80102640:	80 00 0f             	addb   $0xf,(%bx,%si)
80102643:	86 1c                	xchg   %bl,(%si)
80102645:	01 00                	add    %ax,(%bx,%si)
80102647:	00 8b 74 24          	add    %cl,0x2474(%bp,%di)
8010264b:	18 8b 7c 24          	sbb    %cl,0x247c(%bp,%di)
8010264f:	1c 8d                	sbb    $0x8d,%al
80102651:	1d c0 29             	sbb    $0x29c0,%ax
80102654:	00 00                	add    %al,(%bx,%si)
80102656:	8d 85 60 2a          	lea    0x2a60(%di),%ax
8010265a:	00 00                	add    %al,(%bx,%si)
8010265c:	89 44 24             	mov    %ax,0x24(%si)
8010265f:	10 89 da 66          	adc    %cl,0x66da(%bx,%di)
80102663:	90                   	nop
80102664:	89 54 24             	mov    %dx,0x24(%si)
80102667:	14 e8                	adc    $0xe8,%al
80102669:	4b                   	dec    %bx
8010266a:	fe                   	(bad)  
8010266b:	ff                   	(bad)  
8010266c:	ff 89 30 89          	decw   -0x76d0(%bx,%di)
80102670:	78 04                	js     80102676 <page_alloc_init+0xba>
80102672:	8b 54 24             	mov    0x24(%si),%dx
80102675:	14 8b                	adc    $0x8b,%al
80102677:	8c 2a                	mov    %gs,(%bp,%si)
80102679:	ac                   	lods   %ds:(%si),%al
8010267a:	00 00                	add    %al,(%bx,%si)
8010267c:	00 89 41 08          	add    %cl,0x841(%bx,%di)
80102680:	89 48 0c             	mov    %cx,0xc(%bx,%si)
80102683:	8b 5c 24             	mov    0x24(%si),%bx
80102686:	10 89 58 08          	adc    %cl,0x858(%bx,%di)
8010268a:	89 84 2a ac          	mov    %ax,-0x53d6(%si)
8010268e:	00 00                	add    %al,(%bx,%si)
80102690:	00 e8                	add    %ch,%al
80102692:	22 fe                	and    %dh,%bh
80102694:	ff                   	(bad)  
80102695:	ff 89 f1 89          	decw   -0x760f(%bx,%di)
80102699:	fb                   	sti    
8010269a:	81 c1 00 00          	add    $0x0,%cx
8010269e:	40                   	inc    %ax
8010269f:	00 83 d3 00          	add    %al,0xd3(%bp,%di)
801026a3:	89 08                	mov    %cx,(%bx,%si)
801026a5:	89 58 04             	mov    %bx,0x4(%bx,%si)
801026a8:	8b 54 24             	mov    0x24(%si),%dx
801026ab:	14 8b                	adc    $0x8b,%al
801026ad:	8c 2a                	mov    %gs,(%bp,%si)
801026af:	ac                   	lods   %ds:(%si),%al
801026b0:	00 00                	add    %al,(%bx,%si)
801026b2:	00 89 41 08          	add    %cl,0x841(%bx,%di)
801026b6:	89 48 0c             	mov    %cx,0xc(%bx,%si)
801026b9:	8b 5c 24             	mov    0x24(%si),%bx
801026bc:	10 89 58 08          	adc    %cl,0x858(%bx,%di)
801026c0:	89 84 2a ac          	mov    %ax,-0x53d6(%si)
801026c4:	00 00                	add    %al,(%bx,%si)
801026c6:	00 81 c6 00          	add    %al,0xc6(%bx,%di)
801026ca:	00 80 00 83          	add    %al,-0x7d00(%bx,%si)
801026ce:	d7                   	xlat   %ds:(%bx)
801026cf:	00 81 44 24          	add    %al,0x2444(%bx,%di)
801026d3:	08 00                	or     %al,(%bx,%si)
801026d5:	00 80 ff 83          	add    %al,-0x7c01(%bx,%si)
801026d9:	54                   	push   %sp
801026da:	24 0c                	and    $0xc,%al
801026dc:	ff 8b 4c 24          	decw   0x244c(%bp,%di)
801026e0:	08 8b 5c 24          	or     %cl,0x245c(%bp,%di)
801026e4:	0c 83                	or     $0x83,%al
801026e6:	fb                   	sti    
801026e7:	00 0f                	add    %cl,(%bx)
801026e9:	87 76 ff             	xchg   %si,-0x1(%bp)
801026ec:	ff                   	(bad)  
801026ed:	ff 81 f9 00          	incw   0xf9(%bx,%di)
801026f1:	00 80 00 0f          	add    %al,0xf00(%bx,%si)
801026f5:	87 6a ff             	xchg   %bp,-0x1(%bp,%si)
801026f8:	ff                   	(bad)  
801026f9:	ff 89 f0 89          	decw   -0x7610(%bx,%di)
801026fd:	fa                   	cli    
801026fe:	2b 44 24             	sub    0x24(%si),%ax
80102701:	18 1b                	sbb    %bl,(%bp,%di)
80102703:	54                   	push   %sp
80102704:	24 1c                	and    $0x1c,%al
80102706:	89 c6                	mov    %ax,%si
80102708:	89 d7                	mov    %dx,%di
8010270a:	0f ac fe 0c          	shrd   $0xc,%di,%si
8010270e:	c1 ef 0c             	shr    $0xc,%di
80102711:	89 c1                	mov    %ax,%cx
80102713:	89 d3                	mov    %dx,%bx
80102715:	0f ac d9 0f          	shrd   $0xf,%bx,%cx
80102719:	c1 eb 0f             	shr    $0xf,%bx
8010271c:	0f ac d0 10          	shrd   $0x10,%dx,%ax
80102720:	c1 ea 10             	shr    $0x10,%dx
80102723:	89 c2                	mov    %ax,%dx
80102725:	89 b5 a0 29          	mov    %si,0x29a0(%di)
80102729:	00 00                	add    %al,(%bx,%si)
8010272b:	89 bd a4 29          	mov    %di,0x29a4(%di)
8010272f:	00 00                	add    %al,(%bx,%si)
80102731:	8d 9d a0 01          	lea    0x1a0(%di),%bx
80102735:	00 00                	add    %al,(%bx,%si)
80102737:	31 c0                	xor    %ax,%ax
80102739:	89 df                	mov    %bx,%di
8010273b:	f3 aa                	rep stos %al,%es:(%di)
8010273d:	8d 85 80 2a          	lea    0x2a80(%di),%ax
80102741:	00 00                	add    %al,(%bx,%si)
80102743:	8d 8d a8 2a          	lea    0x2aa8(%di),%cx
80102747:	00 00                	add    %al,(%bx,%si)
80102749:	8d 76 00             	lea    0x0(%bp),%si
8010274c:	89 18                	mov    %bx,(%bx,%si)
8010274e:	01 d3                	add    %dx,%bx
80102750:	d1 fa                	sar    %dx
80102752:	83 c0 04             	add    $0x4,%ax
80102755:	39 c1                	cmp    %ax,%cx
80102757:	75 f3                	jne    8010274c <page_alloc_init+0x190>
80102759:	83 c4 2c             	add    $0x2c,%sp
8010275c:	5b                   	pop    %bx
8010275d:	5e                   	pop    %si
8010275e:	5f                   	pop    %di
8010275f:	5d                   	pop    %bp
80102760:	c3                   	ret    
80102761:	8d 76 00             	lea    0x0(%bp),%si
80102764:	31 d2                	xor    %dx,%dx
80102766:	31 c9                	xor    %cx,%cx
80102768:	31 f6                	xor    %si,%si
8010276a:	31 ff                	xor    %di,%di
8010276c:	eb b7                	jmp    80102725 <page_alloc_init+0x169>
8010276e:	66 90                	xchg   %eax,%eax

80102770 <bundle_pages_alloc>:
80102770:	55                   	push   %bp
80102771:	57                   	push   %di
80102772:	56                   	push   %si
80102773:	53                   	push   %bx
80102774:	83 ec 2c             	sub    $0x2c,%sp
80102777:	e8 18 30             	call   80105792 <__x86.get_pc_thunk.si+0x2>
8010277a:	00 00                	add    %al,(%bx,%si)
8010277c:	05 44 8b             	add    $0x8b44,%ax
8010277f:	00 00                	add    %al,(%bx,%si)
80102781:	89 44 24             	mov    %ax,0x24(%si)
80102784:	08 8b 44 24          	or     %cl,0x2444(%bp,%di)
80102788:	40                   	inc    %ax
80102789:	8b 50 0c             	mov    0xc(%bx,%si),%dx
8010278c:	8b 40 08             	mov    0x8(%bx,%si),%ax
8010278f:	89 04                	mov    %ax,(%si)
80102791:	24 89                	and    $0x89,%al
80102793:	54                   	push   %sp
80102794:	24 04                	and    $0x4,%al
80102796:	05 ff 0f             	add    $0xfff,%ax
80102799:	00 00                	add    %al,(%bx,%si)
8010279b:	83 d2 00             	adc    $0x0,%dx
8010279e:	0f ac d0 0c          	shrd   $0xc,%dx,%ax
801027a2:	c1 ea 0c             	shr    $0xc,%dx
801027a5:	83 f8 01             	cmp    $0x1,%ax
801027a8:	0f 8e d3 01          	jle    8010297f <bundle_pages_alloc+0x20f>
801027ac:	00 00                	add    %al,(%bx,%si)
801027ae:	31 ed                	xor    %bp,%bp
801027b0:	bb 01 00             	mov    $0x1,%bx
801027b3:	00 00                	add    %al,(%bx,%si)
801027b5:	8d 76 00             	lea    0x0(%bp),%si
801027b8:	01 db                	add    %bx,%bx
801027ba:	45                   	inc    %bp
801027bb:	39 d8                	cmp    %bx,%ax
801027bd:	7f f9                	jg     801027b8 <bundle_pages_alloc+0x48>
801027bf:	83 fd 0a             	cmp    $0xa,%bp
801027c2:	0f 8f 90 00          	jg     80102856 <bundle_pages_alloc+0xe6>
801027c6:	00 00                	add    %al,(%bx,%si)
801027c8:	89 e8                	mov    %bp,%ax
801027ca:	e8 79 fd             	call   80102546 <switch_map_bitcount+0x46>
801027cd:	ff                   	(bad)  
801027ce:	ff 89 c6 89          	decw   -0x763a(%bx,%di)
801027d2:	d7                   	xlat   %ds:(%bx)
801027d3:	89 d0                	mov    %dx,%ax
801027d5:	21 f0                	and    %si,%ax
801027d7:	40                   	inc    %ax
801027d8:	74 5a                	je     80102834 <bundle_pages_alloc+0xc4>
801027da:	89 f0                	mov    %si,%ax
801027dc:	89 fa                	mov    %di,%dx
801027de:	0f ac d0 0c          	shrd   $0xc,%dx,%ax
801027e2:	c1 ea 0c             	shr    $0xc,%dx
801027e5:	89 04                	mov    %ax,(%si)
801027e7:	24 89                	and    $0x89,%al
801027e9:	54                   	push   %sp
801027ea:	24 04                	and    $0x4,%al
801027ec:	8d 4d 01             	lea    0x1(%di),%cx
801027ef:	8b 04                	mov    (%si),%ax
801027f1:	24 8b                	and    $0x8b,%al
801027f3:	54                   	push   %sp
801027f4:	24 04                	and    $0x4,%al
801027f6:	0f ad d0             	shrd   %cl,%dx,%ax
801027f9:	d3 ea                	shr    %cl,%dx
801027fb:	f6 c1 20             	test   $0x20,%cl
801027fe:	74 04                	je     80102804 <bundle_pages_alloc+0x94>
80102800:	89 d0                	mov    %dx,%ax
80102802:	31 d2                	xor    %dx,%dx
80102804:	89 c2                	mov    %ax,%dx
80102806:	89 e8                	mov    %bp,%ax
80102808:	e8 f3 fc             	call   801024fe <new_page_node+0x46>
8010280b:	ff                   	(bad)  
8010280c:	ff 8b 44 24          	decw   0x2444(%bp,%di)
80102810:	40                   	inc    %ax
80102811:	89 30                	mov    %si,(%bx,%si)
80102813:	89 78 04             	mov    %di,0x4(%bx,%si)
80102816:	89 d8                	mov    %bx,%ax
80102818:	99                   	cwtd   
80102819:	8b 7c 24             	mov    0x24(%si),%di
8010281c:	08 29                	or     %ch,(%bx,%di)
8010281e:	9f                   	lahf   
8010281f:	a0 29 00             	mov    0x29,%al
80102822:	00 19                	add    %bl,(%bx,%di)
80102824:	97                   	xchg   %ax,%di
80102825:	a4                   	movsb  %ds:(%si),%es:(%di)
80102826:	29 00                	sub    %ax,(%bx,%si)
80102828:	00 31                	add    %dh,(%bx,%di)
8010282a:	c0 83 c4 2c 5b       	rolb   $0x5b,0x2cc4(%bp,%di)
8010282f:	5e                   	pop    %si
80102830:	5f                   	pop    %di
80102831:	5d                   	pop    %bp
80102832:	c3                   	ret    
80102833:	90                   	nop
80102834:	89 e8                	mov    %bp,%ax
80102836:	89 2c                	mov    %bp,(%si)
80102838:	24 89                	and    $0x89,%al
8010283a:	dd 89 c3 8d          	fisttpll -0x723d(%bx,%di)
8010283e:	76 00                	jbe    80102840 <bundle_pages_alloc+0xd0>
80102840:	89 d8                	mov    %bx,%ax
80102842:	e8 01 fd             	call   80102546 <switch_map_bitcount+0x46>
80102845:	ff                   	(bad)  
80102846:	ff 89 c6 89          	decw   -0x763a(%bx,%di)
8010284a:	d7                   	xlat   %ds:(%bx)
8010284b:	89 d0                	mov    %dx,%ax
8010284d:	21 f0                	and    %si,%ax
8010284f:	40                   	inc    %ax
80102850:	75 16                	jne    80102868 <bundle_pages_alloc+0xf8>
80102852:	43                   	inc    %bx
80102853:	83 fb 0b             	cmp    $0xb,%bx
80102856:	75 e8                	jne    80102840 <bundle_pages_alloc+0xd0>
80102858:	b8 ff ff             	mov    $0xffff,%ax
8010285b:	ff                   	(bad)  
8010285c:	ff 83 c4 2c          	incw   0x2cc4(%bp,%di)
80102860:	5b                   	pop    %bx
80102861:	5e                   	pop    %si
80102862:	5f                   	pop    %di
80102863:	5d                   	pop    %bp
80102864:	c3                   	ret    
80102865:	8d 76 00             	lea    0x0(%bp),%si
80102868:	89 d8                	mov    %bx,%ax
8010286a:	89 5c 24             	mov    %bx,0x24(%si)
8010286d:	0c 89                	or     $0x89,%al
8010286f:	eb 8b                	jmp    801027fc <bundle_pages_alloc+0x8c>
80102871:	2c 24                	sub    $0x24,%al
80102873:	39 c5                	cmp    %ax,%bp
80102875:	74 e1                	je     80102858 <bundle_pages_alloc+0xe8>
80102877:	0f 8d 5d ff          	jge    801027d8 <bundle_pages_alloc+0x68>
8010287b:	ff                   	(bad)  
8010287c:	ff 89 f2 89          	decw   -0x760e(%bx,%di)
80102880:	f9                   	stc    
80102881:	0f ac ca 0c          	shrd   $0xc,%cx,%dx
80102885:	c1 e9 0c             	shr    $0xc,%cx
80102888:	89 14                	mov    %dx,(%si)
8010288a:	24 89                	and    $0x89,%al
8010288c:	4c                   	dec    %sp
8010288d:	24 04                	and    $0x4,%al
8010288f:	8d 48 ff             	lea    -0x1(%bx,%si),%cx
80102892:	89 c8                	mov    %cx,%ax
80102894:	c1 e0 04             	shl    $0x4,%ax
80102897:	8b 54 24             	mov    0x24(%si),%dx
8010289a:	08 8d 84 02          	or     %cl,0x284(%di)
8010289e:	c0 29 00             	shrb   $0x0,(%bx,%di)
801028a1:	00 89 74 24          	add    %cl,0x2474(%bx,%di)
801028a5:	10 89 7c 24          	adc    %cl,0x247c(%bx,%di)
801028a9:	14 89                	adc    $0x89,%al
801028ab:	5c                   	pop    %sp
801028ac:	24 1c                	and    $0x1c,%al
801028ae:	89 6c 24             	mov    %bp,0x24(%si)
801028b1:	18 89 c7 89          	sbb    %cl,-0x7639(%bx,%di)
801028b5:	cd eb                	int    $0xeb
801028b7:	01 4d 8b             	add    %cx,-0x75(%di)
801028ba:	44                   	inc    %sp
801028bb:	24 0c                	and    $0xc,%al
801028bd:	83 f8 0a             	cmp    $0xa,%ax
801028c0:	74 1f                	je     801028e1 <bundle_pages_alloc+0x171>
801028c2:	8d 48 01             	lea    0x1(%bx,%si),%cx
801028c5:	8b 1c                	mov    (%si),%bx
801028c7:	24 8b                	and    $0x8b,%al
801028c9:	74 24                	je     801028ef <bundle_pages_alloc+0x17f>
801028cb:	04 0f                	add    $0xf,%al
801028cd:	ad                   	lods   %ds:(%si),%ax
801028ce:	f3 d3 ee             	repz shr %cl,%si
801028d1:	f6 c1 20             	test   $0x20,%cl
801028d4:	74 04                	je     801028da <bundle_pages_alloc+0x16a>
801028d6:	89 f3                	mov    %si,%bx
801028d8:	31 f6                	xor    %si,%si
801028da:	89 da                	mov    %bx,%dx
801028dc:	e8 1f fc             	call   801024fe <new_page_node+0x46>
801028df:	ff                   	(bad)  
801028e0:	ff                   	(bad)  
801028e1:	b8 00 10             	mov    $0x1000,%ax
801028e4:	00 00                	add    %al,(%bx,%si)
801028e6:	89 e9                	mov    %bp,%cx
801028e8:	d3 e0                	shl    %cl,%ax
801028ea:	89 c1                	mov    %ax,%cx
801028ec:	89 c3                	mov    %ax,%bx
801028ee:	c1 fb 1f             	sar    $0x1f,%bx
801028f1:	03 4c 24             	add    0x24(%si),%cx
801028f4:	10 13                	adc    %dl,(%bp,%di)
801028f6:	5c                   	pop    %sp
801028f7:	24 14                	and    $0x14,%al
801028f9:	89 de                	mov    %bx,%si
801028fb:	89 cb                	mov    %cx,%bx
801028fd:	e8 b6 fb             	call   801024b6 <mmu_handlers_apply+0x2e>
80102900:	ff                   	(bad)  
80102901:	ff 89 18 89          	decw   -0x76e8(%bx,%di)
80102905:	70 04                	jo     8010290b <bundle_pages_alloc+0x19b>
80102907:	8b 57 0c             	mov    0xc(%bx),%dx
8010290a:	89 42 08             	mov    %ax,0x8(%bp,%si)
8010290d:	89 50 0c             	mov    %dx,0xc(%bx,%si)
80102910:	89 78 08             	mov    %di,0x8(%bx,%si)
80102913:	89 47 0c             	mov    %ax,0xc(%bx)
80102916:	8b 04                	mov    (%si),%ax
80102918:	24 8b                	and    $0x8b,%al
8010291a:	54                   	push   %sp
8010291b:	24 04                	and    $0x4,%al
8010291d:	8a 4c 24             	mov    0x24(%si),%cl
80102920:	0c 0f                	or     $0xf,%al
80102922:	ad                   	lods   %ds:(%si),%ax
80102923:	d0 d3                	rcl    %bl
80102925:	ea f6 c1 20 74       	ljmp   $0x7420,$0xc1f6
8010292a:	04 89                	add    $0x89,%al
8010292c:	d0                   	(bad)  
8010292d:	31 d2                	xor    %dx,%dx
8010292f:	89 c1                	mov    %ax,%cx
80102931:	83 fd 09             	cmp    $0x9,%bp
80102934:	7f 57                	jg     8010298d <bundle_pages_alloc+0x21d>
80102936:	8b 44 24             	mov    0x24(%si),%ax
80102939:	08 8b 84 a8          	or     %cl,-0x577c(%bp,%di)
8010293d:	80 2a 00             	subb   $0x0,(%bp,%si)
80102940:	00 85 c0 74          	add    %al,0x74c0(%di)
80102944:	48                   	dec    %ax
80102945:	89 ca                	mov    %cx,%dx
80102947:	c1 fa 03             	sar    $0x3,%dx
8010294a:	83 e1 07             	and    $0x7,%cx
8010294d:	be 01 00             	mov    $0x1,%si
80102950:	00 00                	add    %al,(%bx,%si)
80102952:	d3 e6                	shl    %cl,%si
80102954:	89 f1                	mov    %si,%cx
80102956:	f7 d1                	not    %cx
80102958:	20 0c                	and    %cl,(%si)
8010295a:	10 83 ef 10          	adc    %al,0x10ef(%bp,%di)
8010295e:	89 6c 24             	mov    %bp,0x24(%si)
80102961:	0c 3b                	or     $0x3b,%al
80102963:	6c                   	insb   (%dx),%es:(%di)
80102964:	24 18                	and    $0x18,%al
80102966:	0f 85 4c ff          	jne    801028b6 <bundle_pages_alloc+0x146>
8010296a:	ff                   	(bad)  
8010296b:	ff 8b 74 24          	decw   0x2474(%bp,%di)
8010296f:	10 8b 7c 24          	adc    %cl,0x247c(%bp,%di)
80102973:	14 8b                	adc    $0x8b,%al
80102975:	5c                   	pop    %sp
80102976:	24 1c                	and    $0x1c,%al
80102978:	8b 6c 24             	mov    0x24(%si),%bp
8010297b:	18 e9                	sbb    %ch,%cl
8010297d:	6b fe ff             	imul   $0xffff,%si,%di
80102980:	ff                   	(bad)  
80102981:	bb 01 00             	mov    $0x1,%bx
80102984:	00 00                	add    %al,(%bx,%si)
80102986:	31 ed                	xor    %bp,%bp
80102988:	e9 3b fe             	jmp    801027c6 <bundle_pages_alloc+0x56>
8010298b:	ff                   	(bad)  
8010298c:	ff 83 ec 0c          	incw   0xcec(%bp,%di)
80102990:	8b 5c 24             	mov    0x24(%si),%bx
80102993:	14 8d                	adc    $0x8d,%al
80102995:	83 1a ae             	sbbw   $0xffae,(%bp,%si)
80102998:	ff                   	(bad)  
80102999:	ff 50 e8             	call   *-0x18(%bx,%si)
8010299c:	2c 09                	sub    $0x9,%al
	...

801029a0 <bundle_pages_free>:
801029a0:	55                   	push   %bp
801029a1:	57                   	push   %di
801029a2:	56                   	push   %si
801029a3:	53                   	push   %bx
801029a4:	83 ec 3c             	sub    $0x3c,%sp
801029a7:	e8 e8 2d             	call   80105792 <__x86.get_pc_thunk.si+0x2>
801029aa:	00 00                	add    %al,(%bx,%si)
801029ac:	05 14 89             	add    $0x8914,%ax
801029af:	00 00                	add    %al,(%bx,%si)
801029b1:	89 44 24             	mov    %ax,0x24(%si)
801029b4:	18 8b 5c 24          	sbb    %cl,0x245c(%bp,%di)
801029b8:	50                   	push   %ax
801029b9:	8b 43 08             	mov    0x8(%bp,%di),%ax
801029bc:	8b 53 0c             	mov    0xc(%bp,%di),%dx
801029bf:	05 ff 0f             	add    $0xfff,%ax
801029c2:	00 00                	add    %al,(%bx,%si)
801029c4:	83 d2 00             	adc    $0x0,%dx
801029c7:	0f ac d0 0c          	shrd   $0xc,%dx,%ax
801029cb:	c1 ea 0c             	shr    $0xc,%dx
801029ce:	83 f8 01             	cmp    $0x1,%ax
801029d1:	0f 8e aa 02          	jle    80102c7f <bundle_pages_free+0x2df>
801029d5:	00 00                	add    %al,(%bx,%si)
801029d7:	31 ed                	xor    %bp,%bp
801029d9:	ba 01 00             	mov    $0x1,%dx
801029dc:	00 00                	add    %al,(%bx,%si)
801029de:	66 90                	xchg   %eax,%eax
801029e0:	01 d2                	add    %dx,%dx
801029e2:	45                   	inc    %bp
801029e3:	39 d0                	cmp    %dx,%ax
801029e5:	7f f9                	jg     801029e0 <bundle_pages_free+0x40>
801029e7:	89 d0                	mov    %dx,%ax
801029e9:	99                   	cwtd   
801029ea:	8b 4c 24             	mov    0x24(%si),%cx
801029ed:	18 01                	sbb    %al,(%bx,%di)
801029ef:	81 a0 29 00 00 11    	andw   $0x1100,0x29(%bx,%si)
801029f5:	91                   	xchg   %ax,%cx
801029f6:	a4                   	movsb  %ds:(%si),%es:(%di)
801029f7:	29 00                	sub    %ax,(%bx,%si)
801029f9:	00 83 fd 0a          	add    %al,0xafd(%bp,%di)
801029fd:	0f 8f d8 02          	jg     80102cd9 <bundle_pages_free+0x339>
80102a01:	00 00                	add    %al,(%bx,%si)
80102a03:	b8 00 f0             	mov    $0xf000,%ax
80102a06:	ff                   	(bad)  
80102a07:	ff 89 e9 d3          	decw   -0x2c17(%bx,%di)
80102a0b:	e0 89                	loopne 80102996 <bundle_pages_alloc+0x226>
80102a0d:	c1 c1 f9             	rol    $0xf9,%cx
80102a10:	1f                   	pop    %ds
80102a11:	23 03                	and    (%bp,%di),%ax
80102a13:	89 44 24             	mov    %ax,0x24(%si)
80102a16:	08 8b 43 04          	or     %cl,0x443(%bp,%di)
80102a1a:	21 c8                	and    %cx,%ax
80102a1c:	89 44 24             	mov    %ax,0x24(%si)
80102a1f:	0c 83                	or     $0x83,%al
80102a21:	fd                   	std    
80102a22:	0a 0f                	or     (%bx),%cl
80102a24:	84 fa                	test   %bh,%dl
80102a26:	01 00                	add    %ax,(%bx,%si)
80102a28:	00 8d 45 01          	add    %cl,0x145(%di)
80102a2c:	89 c3                	mov    %ax,%bx
80102a2e:	89 44 24             	mov    %ax,0x24(%si)
80102a31:	14 8b                	adc    $0x8b,%al
80102a33:	44                   	inc    %sp
80102a34:	24 08                	and    $0x8,%al
80102a36:	8b 54 24             	mov    0x24(%si),%dx
80102a39:	0c 0f                	or     $0xf,%al
80102a3b:	ac                   	lods   %ds:(%si),%al
80102a3c:	d0 0c                	rorb   (%si)
80102a3e:	c1 ea 0c             	shr    $0xc,%dx
80102a41:	88 d9                	mov    %bl,%cl
80102a43:	0f ad d0             	shrd   %cl,%dx,%ax
80102a46:	d3 ea                	shr    %cl,%dx
80102a48:	f6 c1 20             	test   $0x20,%cl
80102a4b:	74 04                	je     80102a51 <bundle_pages_free+0xb1>
80102a4d:	89 d0                	mov    %dx,%ax
80102a4f:	31 d2                	xor    %dx,%dx
80102a51:	89 44 24             	mov    %ax,0x24(%si)
80102a54:	1c 8b                	sbb    $0x8b,%al
80102a56:	44                   	inc    %sp
80102a57:	24 18                	and    $0x18,%al
80102a59:	8b 84 a8 80          	mov    -0x7f58(%si),%ax
80102a5d:	2a 00                	sub    (%bx,%si),%al
80102a5f:	00 85 c0 0f          	add    %al,0xfc0(%di)
80102a63:	84 4d 02             	test   %cl,0x2(%di)
80102a66:	00 00                	add    %al,(%bx,%si)
80102a68:	8b 4c 24             	mov    0x24(%si),%cx
80102a6b:	1c 89                	sbb    $0x89,%al
80102a6d:	ca c1 fa             	lret   $0xfac1
80102a70:	03 0f                	add    (%bx),%cx
80102a72:	b6 04                	mov    $0x4,%dh
80102a74:	10 83 e1 07          	adc    %al,0x7e1(%bp,%di)
80102a78:	d3 f8                	sar    %cl,%ax
80102a7a:	a8 01                	test   $0x1,%al
80102a7c:	0f 84 2a 02          	je     80102caa <bundle_pages_free+0x30a>
80102a80:	00 00                	add    %al,(%bx,%si)
80102a82:	89 e8                	mov    %bp,%ax
80102a84:	c1 e0 04             	shl    $0x4,%ax
80102a87:	8b 5c 24             	mov    0x24(%si),%bx
80102a8a:	18 8d 9b c0          	sbb    %cl,-0x3f65(%di)
80102a8e:	29 00                	sub    %ax,(%bx,%si)
80102a90:	00 89 5c 24          	add    %cl,0x245c(%bx,%di)
80102a94:	2c 8d                	sub    $0x8d,%al
80102a96:	2c 03                	sub    $0x3,%al
80102a98:	89 34                	mov    %si,(%si)
80102a9a:	24 89                	and    $0x89,%al
80102a9c:	7c 24                	jl     80102ac2 <bundle_pages_free+0x122>
80102a9e:	04 90                	add    $0x90,%al
80102aa0:	8b 5c 24             	mov    0x24(%si),%bx
80102aa3:	14 89                	adc    $0x89,%al
80102aa5:	d8 48 89             	fmuls  -0x77(%bx,%si)
80102aa8:	44                   	inc    %sp
80102aa9:	24 28                	and    $0x28,%al
80102aab:	ba 00 10             	mov    $0x1000,%dx
80102aae:	00 00                	add    %al,(%bx,%si)
80102ab0:	88 d9                	mov    %bl,%cl
80102ab2:	d3 e2                	shl    %cl,%dx
80102ab4:	89 d1                	mov    %dx,%cx
80102ab6:	f7 d9                	neg    %cx
80102ab8:	89 ce                	mov    %cx,%si
80102aba:	c1 fe 1f             	sar    $0x1f,%si
80102abd:	89 ca                	mov    %cx,%dx
80102abf:	8b 4c 24             	mov    0x24(%si),%cx
80102ac2:	08 8b 5c 24          	or     %cl,0x245c(%bp,%di)
80102ac6:	0c 21                	or     $0x21,%al
80102ac8:	ca 89 14             	lret   $0x1489
80102acb:	24 89                	and    $0x89,%al
80102acd:	f2 89 ce             	repnz mov %cx,%si
80102ad0:	89 df                	mov    %bx,%di
80102ad2:	21 da                	and    %bx,%dx
80102ad4:	89 54 24             	mov    %dx,0x24(%si)
80102ad7:	04 bb                	add    $0xbb,%al
80102ad9:	00 10                	add    %dl,(%bx,%si)
80102adb:	00 00                	add    %al,(%bx,%si)
80102add:	88 c1                	mov    %al,%cl
80102adf:	d3 e3                	shl    %cl,%bx
80102ae1:	89 d8                	mov    %bx,%ax
80102ae3:	99                   	cwtd   
80102ae4:	03 04                	add    (%si),%ax
80102ae6:	24 13                	and    $0x13,%al
80102ae8:	54                   	push   %sp
80102ae9:	24 04                	and    $0x4,%al
80102aeb:	89 44 24             	mov    %ax,0x24(%si)
80102aee:	20 89 54 24          	and    %cl,0x2454(%bx,%di)
80102af2:	24 8b                	and    $0x8b,%al
80102af4:	0c 24                	or     $0x24,%al
80102af6:	31 f1                	xor    %si,%cx
80102af8:	8b 5c 24             	mov    0x24(%si),%bx
80102afb:	04 31                	add    $0x31,%al
80102afd:	fb                   	sti    
80102afe:	09 cb                	or     %cx,%bx
80102b00:	0f 84 ef 00          	je     80102bf3 <bundle_pages_free+0x253>
80102b04:	00 00                	add    %al,(%bx,%si)
80102b06:	8b 4c 24             	mov    0x24(%si),%cx
80102b09:	08 8b 5c 24          	or     %cl,0x245c(%bp,%di)
80102b0d:	0c 8b                	or     $0x8b,%al
80102b0f:	74 24                	je     80102b35 <bundle_pages_free+0x195>
80102b11:	20 8b 7c 24          	and    %cl,0x247c(%bp,%di)
80102b15:	24 89                	and    $0x89,%al
80102b17:	f0 31 c8             	lock xor %cx,%ax
80102b1a:	89 fa                	mov    %di,%dx
80102b1c:	31 da                	xor    %bx,%dx
80102b1e:	09 c2                	or     %ax,%dx
80102b20:	0f 85 c8 01          	jne    80102cec <bundle_pages_free+0x34c>
80102b24:	00 00                	add    %al,(%bx,%si)
80102b26:	8b 4d 0c             	mov    0xc(%di),%cx
80102b29:	8b 34                	mov    (%si),%si
80102b2b:	24 8b                	and    $0x8b,%al
80102b2d:	7c 24                	jl     80102b53 <bundle_pages_free+0x1b3>
80102b2f:	04 eb                	add    $0xeb,%al
80102b31:	0d 66 90             	or     $0x9066,%ax
80102b34:	8b 49 0c             	mov    0xc(%bx,%di),%cx
80102b37:	39 cd                	cmp    %cx,%bp
80102b39:	0f 84 89 01          	je     80102cc6 <bundle_pages_free+0x326>
80102b3d:	00 00                	add    %al,(%bx,%si)
80102b3f:	8b 01                	mov    (%bx,%di),%ax
80102b41:	31 f0                	xor    %si,%ax
80102b43:	8b 51 04             	mov    0x4(%bx,%di),%dx
80102b46:	31 fa                	xor    %di,%dx
80102b48:	09 c2                	or     %ax,%dx
80102b4a:	75 e8                	jne    80102b34 <bundle_pages_free+0x194>
80102b4c:	89 34                	mov    %si,(%si)
80102b4e:	24 89                	and    $0x89,%al
80102b50:	7c 24                	jl     80102b76 <bundle_pages_free+0x1d6>
80102b52:	04 8b                	add    $0x8b,%al
80102b54:	41                   	inc    %cx
80102b55:	08 8b 51 0c          	or     %cl,0xc51(%bp,%di)
80102b59:	89 50 0c             	mov    %dx,0xc(%bx,%si)
80102b5c:	8b 51 0c             	mov    0xc(%bx,%di),%dx
80102b5f:	89 42 08             	mov    %ax,0x8(%bp,%si)
80102b62:	83 ec 0c             	sub    $0xc,%sp
80102b65:	51                   	push   %cx
80102b66:	8b 5c 24             	mov    0x24(%si),%bx
80102b69:	28 e8                	sub    %ch,%al
80102b6b:	89 ee                	mov    %bp,%si
80102b6d:	ff                   	(bad)  
80102b6e:	ff 8b 54 24          	decw   0x2454(%bp,%di)
80102b72:	2c 8b                	sub    $0x8b,%al
80102b74:	44                   	inc    %sp
80102b75:	24 38                	and    $0x38,%al
80102b77:	e8 84 f9             	call   801024fe <new_page_node+0x46>
80102b7a:	ff                   	(bad)  
80102b7b:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
80102b7f:	83 7c 24 14          	cmpw   $0x14,0x24(%si)
80102b83:	0a 0f                	or     (%bx),%cl
80102b85:	84 ee                	test   %ch,%dh
80102b87:	00 00                	add    %al,(%bx,%si)
80102b89:	00 8b 44 24          	add    %cl,0x2444(%bp,%di)
80102b8d:	14 8d                	adc    $0x8d,%al
80102b8f:	58                   	pop    %ax
80102b90:	01 8b 04 24          	add    %cx,0x2404(%bp,%di)
80102b94:	8b 54 24             	mov    0x24(%si),%dx
80102b97:	04 0f                	add    $0xf,%al
80102b99:	ac                   	lods   %ds:(%si),%al
80102b9a:	d0 0c                	rorb   (%si)
80102b9c:	c1 ea 0c             	shr    $0xc,%dx
80102b9f:	88 d9                	mov    %bl,%cl
80102ba1:	0f ad d0             	shrd   %cl,%dx,%ax
80102ba4:	d3 ea                	shr    %cl,%dx
80102ba6:	f6 c1 20             	test   $0x20,%cl
80102ba9:	74 04                	je     80102baf <bundle_pages_free+0x20f>
80102bab:	89 d0                	mov    %dx,%ax
80102bad:	31 d2                	xor    %dx,%dx
80102baf:	89 c1                	mov    %ax,%cx
80102bb1:	89 44 24             	mov    %ax,0x24(%si)
80102bb4:	1c 8b                	sbb    $0x8b,%al
80102bb6:	44                   	inc    %sp
80102bb7:	24 18                	and    $0x18,%al
80102bb9:	8b 84 98 7c          	mov    0x7c98(%si),%ax
80102bbd:	2a 00                	sub    (%bx,%si),%al
80102bbf:	00 85 c0 0f          	add    %al,0xfc0(%di)
80102bc3:	84 ed                	test   %ch,%ch
80102bc5:	00 00                	add    %al,(%bx,%si)
80102bc7:	00 89 ca c1          	add    %cl,-0x3e36(%bx,%di)
80102bcb:	fa                   	cli    
80102bcc:	03 0f                	add    (%bx),%cx
80102bce:	b6 04                	mov    $0x4,%dh
80102bd0:	10 83 e1 07          	adc    %al,0x7e1(%bp,%di)
80102bd4:	d3 f8                	sar    %cl,%ax
80102bd6:	83 c5 10             	add    $0x10,%bp
80102bd9:	8b 34                	mov    (%si),%si
80102bdb:	24 8b                	and    $0x8b,%al
80102bdd:	7c 24                	jl     80102c03 <bundle_pages_free+0x263>
80102bdf:	04 89                	add    $0x89,%al
80102be1:	74 24                	je     80102c07 <bundle_pages_free+0x267>
80102be3:	08 89 7c 24          	or     %cl,0x247c(%bx,%di)
80102be7:	0c a8                	or     $0xa8,%al
80102be9:	01 74 55             	add    %si,0x55(%si)
80102bec:	89 5c 24             	mov    %bx,0x24(%si)
80102bef:	14 e9                	adc    $0xe9,%al
80102bf1:	ab                   	stos   %ax,%es:(%di)
80102bf2:	fe                   	(bad)  
80102bf3:	ff                   	(bad)  
80102bf4:	ff 8b 4d 0c          	decw   0xc4d(%bp,%di)
80102bf8:	8b 44 24             	mov    0x24(%si),%ax
80102bfb:	20 8b 54 24          	and    %cl,0x2454(%bp,%di)
80102bff:	24 89                	and    $0x89,%al
80102c01:	ef                   	out    %ax,(%dx)
80102c02:	eb 0b                	jmp    80102c0f <bundle_pages_free+0x26f>
80102c04:	8b 49 0c             	mov    0xc(%bx,%di),%cx
80102c07:	39 cf                	cmp    %cx,%di
80102c09:	0f 84 b9 00          	je     80102cc6 <bundle_pages_free+0x326>
80102c0d:	00 00                	add    %al,(%bx,%si)
80102c0f:	8b 19                	mov    (%bx,%di),%bx
80102c11:	31 c3                	xor    %ax,%bx
80102c13:	8b 69 04             	mov    0x4(%bx,%di),%bp
80102c16:	31 d5                	xor    %dx,%bp
80102c18:	09 dd                	or     %bx,%bp
80102c1a:	75 e8                	jne    80102c04 <bundle_pages_free+0x264>
80102c1c:	89 fd                	mov    %di,%bp
80102c1e:	e9 30 ff             	jmp    80102b51 <bundle_pages_free+0x1b1>
80102c21:	ff                   	(bad)  
80102c22:	ff c7                	inc    %di
80102c24:	44                   	inc    %sp
80102c25:	24 14                	and    $0x14,%al
80102c27:	0a 00                	or     (%bx,%si),%al
80102c29:	00 00                	add    %al,(%bx,%si)
80102c2b:	8b 74 24             	mov    0x24(%si),%si
80102c2e:	08 8b 7c 24          	or     %cl,0x247c(%bp,%di)
80102c32:	0c 8b                	or     $0x8b,%al
80102c34:	44                   	inc    %sp
80102c35:	24 18                	and    $0x18,%al
80102c37:	8d 80 c0 29          	lea    0x29c0(%bx,%si),%ax
80102c3b:	00 00                	add    %al,(%bx,%si)
80102c3d:	89 44 24             	mov    %ax,0x24(%si)
80102c40:	2c e8                	sub    $0xe8,%al
80102c42:	72 f8                	jb     80102c3c <bundle_pages_free+0x29c>
80102c44:	ff                   	(bad)  
80102c45:	ff 89 30 89          	decw   -0x76d0(%bx,%di)
80102c49:	78 04                	js     80102c4f <bundle_pages_free+0x2af>
80102c4b:	8b 54 24             	mov    0x24(%si),%dx
80102c4e:	14 c1                	adc    $0xc1,%al
80102c50:	e2 04                	loop   80102c56 <bundle_pages_free+0x2b6>
80102c52:	8b 7c 24             	mov    0x24(%si),%di
80102c55:	18 8d 8c 17          	sbb    %cl,0x178c(%di)
80102c59:	c0 29 00             	shrb   $0x0,(%bx,%di)
80102c5c:	00 8b 59 0c          	add    %cl,0xc59(%bp,%di)
80102c60:	89 43 08             	mov    %ax,0x8(%bp,%di)
80102c63:	89 58 0c             	mov    %bx,0xc(%bx,%si)
80102c66:	03 54 24             	add    0x24(%si),%dx
80102c69:	2c 89                	sub    $0x89,%al
80102c6b:	50                   	push   %ax
80102c6c:	08 89 41 0c          	or     %cl,0xc41(%bx,%di)
80102c70:	83 c4 3c             	add    $0x3c,%sp
80102c73:	5b                   	pop    %bx
80102c74:	5e                   	pop    %si
80102c75:	5f                   	pop    %di
80102c76:	5d                   	pop    %bp
80102c77:	c3                   	ret    
80102c78:	8b 34                	mov    (%si),%si
80102c7a:	24 8b                	and    $0x8b,%al
80102c7c:	7c 24                	jl     80102ca2 <bundle_pages_free+0x302>
80102c7e:	04 eb                	add    $0xeb,%al
80102c80:	c0 8b 44 24 18       	rorb   $0x18,0x2444(%bp,%di)
80102c85:	83 80 a0 29 00       	addw   $0x0,0x29a0(%bx,%si)
80102c8a:	00 01                	add    %al,(%bx,%di)
80102c8c:	83 90 a4 29 00       	adcw   $0x0,0x29a4(%bx,%si)
80102c91:	00 00                	add    %al,(%bx,%si)
80102c93:	8b 03                	mov    (%bp,%di),%ax
80102c95:	25 00 f0             	and    $0xf000,%ax
80102c98:	ff                   	(bad)  
80102c99:	ff 89 44 24          	decw   0x2444(%bx,%di)
80102c9d:	08 8b 43 04          	or     %cl,0x443(%bp,%di)
80102ca1:	89 44 24             	mov    %ax,0x24(%si)
80102ca4:	0c 31                	or     $0x31,%al
80102ca6:	ed                   	in     (%dx),%ax
80102ca7:	e9 7d fd             	jmp    80102a27 <bundle_pages_free+0x87>
80102caa:	ff                   	(bad)  
80102cab:	ff 89 6c 24          	decw   0x246c(%bx,%di)
80102caf:	14 e9                	adc    $0xe9,%al
80102cb1:	76 ff                	jbe    80102cb2 <bundle_pages_free+0x312>
80102cb3:	ff                   	(bad)  
80102cb4:	ff 83 ec 0c          	incw   0xcec(%bp,%di)
80102cb8:	8b 5c 24             	mov    0x24(%si),%bx
80102cbb:	24 8d                	and    $0x8d,%al
80102cbd:	83 1a ae             	sbbw   $0xffae,(%bp,%si)
80102cc0:	ff                   	(bad)  
80102cc1:	ff 50 e8             	call   *-0x18(%bx,%si)
80102cc4:	04 06                	add    $0x6,%al
80102cc6:	00 00                	add    %al,(%bx,%si)
80102cc8:	83 ec 0c             	sub    $0xc,%sp
80102ccb:	8b 5c 24             	mov    0x24(%si),%bx
80102cce:	24 8d                	and    $0x8d,%al
80102cd0:	83 14 ac             	adcw   $0xffac,(%si)
80102cd3:	ff                   	(bad)  
80102cd4:	ff 50 e8             	call   *-0x18(%bx,%si)
80102cd7:	f1                   	icebp  
80102cd8:	05 00 00             	add    $0x0,%ax
80102cdb:	83 ec 0c             	sub    $0xc,%sp
80102cde:	8b 5c 24             	mov    0x24(%si),%bx
80102ce1:	24 8d                	and    $0x8d,%al
80102ce3:	83 c8 ab             	or     $0xffab,%ax
80102ce6:	ff                   	(bad)  
80102ce7:	ff 50 e8             	call   *-0x18(%bx,%si)
80102cea:	de 05                	fiadd  (%di)
80102cec:	00 00                	add    %al,(%bx,%si)
80102cee:	83 ec 0c             	sub    $0xc,%sp
80102cf1:	8b 5c 24             	mov    0x24(%si),%bx
80102cf4:	24 8d                	and    $0x8d,%al
80102cf6:	83 ec ab             	sub    $0xffab,%sp
80102cf9:	ff                   	(bad)  
80102cfa:	ff 50 e8             	call   *-0x18(%bx,%si)
80102cfd:	cb                   	lret   
80102cfe:	05 00 00             	add    $0x0,%ax
80102d01:	8d 76 00             	lea    0x0(%bp),%si

80102d04 <bundle_pages_size>:
80102d04:	e8 8b 2a             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80102d07:	00 00                	add    %al,(%bx,%si)
80102d09:	05 b7 85             	add    $0x85b7,%ax
80102d0c:	00 00                	add    %al,(%bx,%si)
80102d0e:	8b 90 a4 29          	mov    0x29a4(%bx,%si),%dx
80102d12:	00 00                	add    %al,(%bx,%si)
80102d14:	8b 80 a0 29          	mov    0x29a0(%bx,%si),%ax
80102d18:	00 00                	add    %al,(%bx,%si)
80102d1a:	0f a4 c2 0c          	shld   $0xc,%ax,%dx
80102d1e:	c1 e0 0c             	shl    $0xc,%ax
80102d21:	c3                   	ret    
80102d22:	66 90                	xchg   %eax,%eax

80102d24 <set_page_allocator>:
80102d24:	57                   	push   %di
80102d25:	56                   	push   %si
80102d26:	e8 69 2a             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80102d29:	00 00                	add    %al,(%bx,%si)
80102d2b:	05 95 85             	add    $0x8595,%ax
80102d2e:	00 00                	add    %al,(%bx,%si)
80102d30:	8b 74 24             	mov    0x24(%si),%si
80102d33:	0c 8d                	or     $0x8d,%al
80102d35:	80 0c 00             	orb    $0x0,(%si)
80102d38:	00 00                	add    %al,(%bx,%si)
80102d3a:	b9 03 00             	mov    $0x3,%cx
80102d3d:	00 00                	add    %al,(%bx,%si)
80102d3f:	89 c7                	mov    %ax,%di
80102d41:	f3 a5                	rep movsw %ds:(%si),%es:(%di)
80102d43:	5e                   	pop    %si
80102d44:	5f                   	pop    %di
80102d45:	c3                   	ret    
80102d46:	66 90                	xchg   %eax,%eax

80102d48 <pmemset>:
80102d48:	57                   	push   %di
80102d49:	56                   	push   %si
80102d4a:	53                   	push   %bx
80102d4b:	8b 54 24             	mov    0x24(%si),%dx
80102d4e:	10 8b 44 24          	adc    %cl,0x2444(%bp,%di)
80102d52:	18 8b 5c 24          	sbb    %cl,0x245c(%bp,%di)
80102d56:	1c 8b                	sbb    $0x8b,%al
80102d58:	74 24                	je     80102d7e <pmemset+0x36>
80102d5a:	20 83 fe 00          	and    %al,0xfe(%bp,%di)
80102d5e:	7e 2c                	jle    80102d8c <pmemset+0x44>
80102d60:	81 c2 00 00          	add    $0x0,%dx
80102d64:	00 80 66 90          	add    %al,-0x6f9a(%bx,%si)
80102d68:	b9 00 10             	mov    $0x1000,%cx
80102d6b:	00 00                	add    %al,(%bx,%si)
80102d6d:	89 d7                	mov    %dx,%di
80102d6f:	f3 aa                	rep stos %al,%es:(%di)
80102d71:	81 c3 00 f0          	add    $0xf000,%bx
80102d75:	ff                   	(bad)  
80102d76:	ff 83 d6 ff          	incw   -0x2a(%bp,%di)
80102d7a:	89 fa                	mov    %di,%dx
80102d7c:	83 fe 00             	cmp    $0x0,%si
80102d7f:	7f e7                	jg     80102d68 <pmemset+0x20>
80102d81:	7c 05                	jl     80102d88 <pmemset+0x40>
80102d83:	83 fb 00             	cmp    $0x0,%bx
80102d86:	77 e0                	ja     80102d68 <pmemset+0x20>
80102d88:	5b                   	pop    %bx
80102d89:	5e                   	pop    %si
80102d8a:	5f                   	pop    %di
80102d8b:	c3                   	ret    
80102d8c:	7c fa                	jl     80102d88 <pmemset+0x40>
80102d8e:	83 fb 00             	cmp    $0x0,%bx
80102d91:	76 f5                	jbe    80102d88 <pmemset+0x40>
80102d93:	eb cb                	jmp    80102d60 <pmemset+0x18>
80102d95:	8d 76 00             	lea    0x0(%bp),%si

80102d98 <alloc_pages>:
80102d98:	55                   	push   %bp
80102d99:	57                   	push   %di
80102d9a:	56                   	push   %si
80102d9b:	53                   	push   %bx
80102d9c:	83 ec 0c             	sub    $0xc,%sp
80102d9f:	e8 f0 29             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80102da2:	00 00                	add    %al,(%bx,%si)
80102da4:	05 1c 85             	add    $0x851c,%ax
80102da7:	00 00                	add    %al,(%bx,%si)
80102da9:	8b 7c 24             	mov    0x24(%si),%di
80102dac:	20 85 ff 74          	and    %al,0x74ff(%di)
80102db0:	66 83 ec 0c          	sub    $0xc,%esp
80102db4:	57                   	push   %di
80102db5:	ff 90 0c 00          	call   *0xc(%bx,%si)
80102db9:	00 00                	add    %al,(%bx,%si)
80102dbb:	89 c5                	mov    %ax,%bp
80102dbd:	83 c4 10             	add    $0x10,%sp
80102dc0:	f6 47 10 02          	testb  $0x2,0x10(%bx)
80102dc4:	74 3e                	je     80102e04 <alloc_pages+0x6c>
80102dc6:	8b 5f 08             	mov    0x8(%bx),%bx
80102dc9:	8b 77 0c             	mov    0xc(%bx),%si
80102dcc:	8b 17                	mov    (%bx),%dx
80102dce:	83 fe 00             	cmp    $0x0,%si
80102dd1:	7c 31                	jl     80102e04 <alloc_pages+0x6c>
80102dd3:	7e 3b                	jle    80102e10 <alloc_pages+0x78>
80102dd5:	81 c2 00 00          	add    $0x0,%dx
80102dd9:	00 80 31 c0          	add    %al,-0x3fcf(%bx,%si)
80102ddd:	8d 76 00             	lea    0x0(%bp),%si
80102de0:	b9 00 04             	mov    $0x400,%cx
80102de3:	00 00                	add    %al,(%bx,%si)
80102de5:	89 d7                	mov    %dx,%di
80102de7:	f3 ab                	rep stos %ax,%es:(%di)
80102de9:	81 c3 00 f0          	add    $0xf000,%bx
80102ded:	ff                   	(bad)  
80102dee:	ff 83 d6 ff          	incw   -0x2a(%bp,%di)
80102df2:	81 c2 00 10          	add    $0x1000,%dx
80102df6:	00 00                	add    %al,(%bx,%si)
80102df8:	83 fe 00             	cmp    $0x0,%si
80102dfb:	7f e3                	jg     80102de0 <alloc_pages+0x48>
80102dfd:	7c 05                	jl     80102e04 <alloc_pages+0x6c>
80102dff:	83 fb 00             	cmp    $0x0,%bx
80102e02:	77 dc                	ja     80102de0 <alloc_pages+0x48>
80102e04:	89 e8                	mov    %bp,%ax
80102e06:	83 c4 0c             	add    $0xc,%sp
80102e09:	5b                   	pop    %bx
80102e0a:	5e                   	pop    %si
80102e0b:	5f                   	pop    %di
80102e0c:	5d                   	pop    %bp
80102e0d:	c3                   	ret    
80102e0e:	66 90                	xchg   %eax,%eax
80102e10:	83 fb 00             	cmp    $0x0,%bx
80102e13:	76 ef                	jbe    80102e04 <alloc_pages+0x6c>
80102e15:	eb be                	jmp    80102dd5 <alloc_pages+0x3d>
80102e17:	bd ff ff             	mov    $0xffff,%bp
80102e1a:	ff                   	(bad)  
80102e1b:	ff                   	(bad)  
80102e1c:	eb e6                	jmp    80102e04 <alloc_pages+0x6c>
80102e1e:	66 90                	xchg   %eax,%eax

80102e20 <free_pages>:
80102e20:	55                   	push   %bp
80102e21:	57                   	push   %di
80102e22:	56                   	push   %si
80102e23:	53                   	push   %bx
80102e24:	83 ec 1c             	sub    $0x1c,%sp
80102e27:	e8 68 29             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80102e2a:	00 00                	add    %al,(%bx,%si)
80102e2c:	05 94 84             	add    $0x8494,%ax
80102e2f:	00 00                	add    %al,(%bx,%si)
80102e31:	89 44 24             	mov    %ax,0x24(%si)
80102e34:	0c 8b                	or     $0x8b,%al
80102e36:	6c                   	insb   (%dx),%es:(%di)
80102e37:	24 30                	and    $0x30,%al
80102e39:	f6 45 10 01          	testb  $0x1,0x10(%di)
80102e3d:	75 39                	jne    80102e78 <free_pages+0x58>
80102e3f:	8b 5d 08             	mov    0x8(%di),%bx
80102e42:	8b 75 0c             	mov    0xc(%di),%si
80102e45:	8b 55 00             	mov    0x0(%di),%dx
80102e48:	83 fe 00             	cmp    $0x0,%si
80102e4b:	7c 2b                	jl     80102e78 <free_pages+0x58>
80102e4d:	7e 41                	jle    80102e90 <free_pages+0x70>
80102e4f:	81 c2 00 00          	add    $0x0,%dx
80102e53:	00 80 b0 20          	add    %al,0x20b0(%bx,%si)
80102e57:	90                   	nop
80102e58:	b9 00 10             	mov    $0x1000,%cx
80102e5b:	00 00                	add    %al,(%bx,%si)
80102e5d:	89 d7                	mov    %dx,%di
80102e5f:	f3 aa                	rep stos %al,%es:(%di)
80102e61:	81 c3 00 f0          	add    $0xf000,%bx
80102e65:	ff                   	(bad)  
80102e66:	ff 83 d6 ff          	incw   -0x2a(%bp,%di)
80102e6a:	89 fa                	mov    %di,%dx
80102e6c:	83 fe 00             	cmp    $0x0,%si
80102e6f:	7f e7                	jg     80102e58 <free_pages+0x38>
80102e71:	7c 05                	jl     80102e78 <free_pages+0x58>
80102e73:	83 fb 00             	cmp    $0x0,%bx
80102e76:	77 e0                	ja     80102e58 <free_pages+0x38>
80102e78:	89 6c 24             	mov    %bp,0x24(%si)
80102e7b:	30 8b 44 24          	xor    %cl,0x2444(%bp,%di)
80102e7f:	0c 8b                	or     $0x8b,%al
80102e81:	80 10 00             	adcb   $0x0,(%bx,%si)
80102e84:	00 00                	add    %al,(%bx,%si)
80102e86:	83 c4 1c             	add    $0x1c,%sp
80102e89:	5b                   	pop    %bx
80102e8a:	5e                   	pop    %si
80102e8b:	5f                   	pop    %di
80102e8c:	5d                   	pop    %bp
80102e8d:	ff e0                	jmp    *%ax
80102e8f:	90                   	nop
80102e90:	83 fb 00             	cmp    $0x0,%bx
80102e93:	76 e3                	jbe    80102e78 <free_pages+0x58>
80102e95:	eb b8                	jmp    80102e4f <free_pages+0x2f>
80102e97:	90                   	nop

80102e98 <alloc_aligned_pages>:
80102e98:	55                   	push   %bp
80102e99:	57                   	push   %di
80102e9a:	56                   	push   %si
80102e9b:	53                   	push   %bx
80102e9c:	83 ec 4c             	sub    $0x4c,%sp
80102e9f:	8b 44 24             	mov    0x24(%si),%ax
80102ea2:	64 8b 54 24          	mov    %fs:0x24(%si),%dx
80102ea6:	68 8d 7c             	push   $0x7c8d
80102ea9:	24 18                	and    $0x18,%al
80102eab:	b9 05 00             	mov    $0x5,%cx
80102eae:	00 00                	add    %al,(%bx,%si)
80102eb0:	8b 74 24             	mov    0x24(%si),%si
80102eb3:	60                   	pusha  
80102eb4:	f3 a5                	rep movsw %ds:(%si),%es:(%di)
80102eb6:	89 c3                	mov    %ax,%bx
80102eb8:	89 d6                	mov    %dx,%si
80102eba:	03 44 24             	add    0x24(%si),%ax
80102ebd:	20 13                	and    %dl,(%bp,%di)
80102ebf:	54                   	push   %sp
80102ec0:	24 24                	and    $0x24,%al
80102ec2:	05 00 f0             	add    $0xf000,%ax
80102ec5:	ff                   	(bad)  
80102ec6:	ff 83 d2 ff          	incw   -0x2e(%bp,%di)
80102eca:	89 44 24             	mov    %ax,0x24(%si)
80102ecd:	20 89 54 24          	and    %cl,0x2454(%bx,%di)
80102ed1:	24 83                	and    $0x83,%al
80102ed3:	ec                   	in     (%dx),%al
80102ed4:	0c 8d                	or     $0x8d,%al
80102ed6:	44                   	inc    %sp
80102ed7:	24 24                	and    $0x24,%al
80102ed9:	50                   	push   %ax
80102eda:	e8 b9 fe             	call   80102d96 <pmemset+0x4e>
80102edd:	ff                   	(bad)  
80102ede:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
80102ee2:	85 c0                	test   %ax,%ax
80102ee4:	0f 88 88 00          	js     80102f70 <alloc_aligned_pages+0xd8>
80102ee8:	00 00                	add    %al,(%bx,%si)
80102eea:	8b 44 24             	mov    0x24(%si),%ax
80102eed:	18 8b 54 24          	sbb    %cl,0x2454(%bp,%di)
80102ef1:	1c 89                	sbb    $0x89,%al
80102ef3:	c7                   	(bad)  
80102ef4:	89 d5                	mov    %dx,%bp
80102ef6:	83 c7 ff             	add    $0xffff,%di
80102ef9:	83 d5 ff             	adc    $0xffff,%bp
80102efc:	89 7c 24             	mov    %di,0x24(%si)
80102eff:	08 89 6c 24          	or     %cl,0x246c(%bx,%di)
80102f03:	0c 89                	or     $0x89,%al
80102f05:	d9 89 f3 83          	(bad)  -0x7c0d(%bx,%di)
80102f09:	c1 ff 83             	sar    $0x83,%di
80102f0c:	d3 ff                	sar    %cl,%di
80102f0e:	8b 6c 24             	mov    0x24(%si),%bp
80102f11:	08 09                	or     %cl,(%bx,%di)
80102f13:	cd 89                	int    $0x89
80102f15:	ee                   	out    %al,(%dx)
80102f16:	8b 6c 24             	mov    0x24(%si),%bp
80102f19:	0c 09                	or     $0x9,%al
80102f1b:	dd 89 ef 83          	fisttpll -0x7c11(%bx,%di)
80102f1f:	c6 01 83             	movb   $0x83,(%bx,%di)
80102f22:	d7                   	xlat   %ds:(%bx)
80102f23:	00 8b 5c 24          	add    %cl,0x245c(%bp,%di)
80102f27:	60                   	pusha  
80102f28:	89 33                	mov    %si,(%bp,%di)
80102f2a:	89 7b 04             	mov    %di,0x4(%bp,%di)
80102f2d:	8b 4c 24             	mov    0x24(%si),%cx
80102f30:	28 89 4c 24          	sub    %cl,0x244c(%bx,%di)
80102f34:	3c 39                	cmp    $0x39,%al
80102f36:	fa                   	cli    
80102f37:	77 07                	ja     80102f40 <alloc_aligned_pages+0xa8>
80102f39:	72 7d                	jb     80102fb8 <alloc_aligned_pages+0x120>
80102f3b:	39 f0                	cmp    %si,%ax
80102f3d:	72 79                	jb     80102fb8 <alloc_aligned_pages+0x120>
80102f3f:	90                   	nop
80102f40:	03 44 24             	add    0x24(%si),%ax
80102f43:	20 13                	and    %dl,(%bp,%di)
80102f45:	54                   	push   %sp
80102f46:	24 24                	and    $0x24,%al
80102f48:	89 44 24             	mov    %ax,0x24(%si)
80102f4b:	08 89 54 24          	or     %cl,0x2454(%bx,%di)
80102f4f:	0c 8b                	or     $0x8b,%al
80102f51:	5c                   	pop    %sp
80102f52:	24 60                	and    $0x60,%al
80102f54:	8b 4b 08             	mov    0x8(%bp,%di),%cx
80102f57:	8b 5b 0c             	mov    0xc(%bp,%di),%bx
80102f5a:	89 c8                	mov    %cx,%ax
80102f5c:	89 da                	mov    %bx,%dx
80102f5e:	01 f0                	add    %si,%ax
80102f60:	11 fa                	adc    %di,%dx
80102f62:	39 54 24             	cmp    %dx,0x24(%si)
80102f65:	0c 72                	or     $0x72,%al
80102f67:	08 77 12             	or     %dh,0x12(%bx)
80102f6a:	39 44 24             	cmp    %ax,0x24(%si)
80102f6d:	08 77 0c             	or     %dh,0xc(%bx)
80102f70:	31 c0                	xor    %ax,%ax
80102f72:	83 c4 4c             	add    $0x4c,%sp
80102f75:	5b                   	pop    %bx
80102f76:	5e                   	pop    %si
80102f77:	5f                   	pop    %di
80102f78:	5d                   	pop    %bp
80102f79:	c3                   	ret    
80102f7a:	66 90                	xchg   %eax,%eax
80102f7c:	89 44 24             	mov    %ax,0x24(%si)
80102f7f:	2c 89                	sub    $0x89,%al
80102f81:	54                   	push   %sp
80102f82:	24 30                	and    $0x30,%al
80102f84:	8b 44 24             	mov    0x24(%si),%ax
80102f87:	08 8b 54 24          	or     %cl,0x2454(%bp,%di)
80102f8b:	0c 29                	or     $0x29,%al
80102f8d:	f0 19 fa             	lock sbb %di,%dx
80102f90:	29 c8                	sub    %cx,%ax
80102f92:	19 da                	sbb    %bx,%dx
80102f94:	89 44 24             	mov    %ax,0x24(%si)
80102f97:	34 89                	xor    $0x89,%al
80102f99:	54                   	push   %sp
80102f9a:	24 38                	and    $0x38,%al
80102f9c:	83 ec 0c             	sub    $0xc,%sp
80102f9f:	8d 44 24             	lea    0x24(%si),%ax
80102fa2:	38 50 e8             	cmp    %dl,-0x18(%bx,%si)
80102fa5:	77 fe                	ja     80102fa5 <alloc_aligned_pages+0x10d>
80102fa7:	ff                   	(bad)  
80102fa8:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
80102fac:	31 c0                	xor    %ax,%ax
80102fae:	83 c4 4c             	add    $0x4c,%sp
80102fb1:	5b                   	pop    %bx
80102fb2:	5e                   	pop    %si
80102fb3:	5f                   	pop    %di
80102fb4:	5d                   	pop    %bp
80102fb5:	c3                   	ret    
80102fb6:	66 90                	xchg   %eax,%eax
80102fb8:	89 44 24             	mov    %ax,0x24(%si)
80102fbb:	2c 89                	sub    $0x89,%al
80102fbd:	54                   	push   %sp
80102fbe:	24 30                	and    $0x30,%al
80102fc0:	29 c6                	sub    %ax,%si
80102fc2:	19 d7                	sbb    %dx,%di
80102fc4:	89 74 24             	mov    %si,0x24(%si)
80102fc7:	34 89                	xor    $0x89,%al
80102fc9:	7c 24                	jl     80102fef <alloc_aligned_pages+0x157>
80102fcb:	38 83 ec 0c          	cmp    %al,0xcec(%bp,%di)
80102fcf:	8d 44 24             	lea    0x24(%si),%ax
80102fd2:	38 50 e8             	cmp    %dl,-0x18(%bx,%si)
80102fd5:	47                   	inc    %di
80102fd6:	fe                   	(bad)  
80102fd7:	ff                   	(bad)  
80102fd8:	ff 8b 44 24          	decw   0x2444(%bp,%di)
80102fdc:	28 8b 54 24          	sub    %cl,0x2454(%bp,%di)
80102fe0:	2c 8b                	sub    $0x8b,%al
80102fe2:	7c 24                	jl     80103008 <page_allocator_move+0x4>
80102fe4:	70 8b                	jo     80102f71 <alloc_aligned_pages+0xd9>
80102fe6:	37                   	aaa    
80102fe7:	8b 7f 04             	mov    0x4(%bx),%di
80102fea:	83 c4 10             	add    $0x10,%sp
80102fed:	e9 4e ff             	jmp    80102f3e <alloc_aligned_pages+0xa6>
80102ff0:	ff                   	(bad)  
80102ff1:	ff 66 90             	jmp    *-0x70(%bp)

80102ff4 <get_free_memory>:
80102ff4:	e8 9b 27             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80102ff7:	00 00                	add    %al,(%bx,%si)
80102ff9:	05 c7 82             	add    $0x82c7,%ax
80102ffc:	00 00                	add    %al,(%bx,%si)
80102ffe:	ff a0 14 00          	jmp    *0x14(%bx,%si)
	...

80103004 <page_allocator_move>:
80103004:	53                   	push   %bx
80103005:	83 ec 08             	sub    $0x8,%sp
80103008:	e8 7f 27             	call   8010578a <__text_end_kern+0x2>
8010300b:	00 00                	add    %al,(%bx,%si)
8010300d:	81 c3 b3 82          	add    $0x82b3,%bx
80103011:	00 00                	add    %al,(%bx,%si)
80103013:	e8 74 f3             	call   8010238a <bundle_kfree+0x12>
80103016:	ff                   	(bad)  
80103017:	ff 31                	pushw  (%bx,%di)
80103019:	c0 83 c4 08 5b       	rolb   $0x5b,0x8c4(%bp,%di)
8010301e:	c3                   	ret    
8010301f:	90                   	nop

80103020 <__simple_alloc>:
80103020:	31 c0                	xor    %ax,%ax
80103022:	c3                   	ret    
80103023:	90                   	nop

80103024 <__simple_size>:
80103024:	31 c0                	xor    %ax,%ax
80103026:	c3                   	ret    
80103027:	90                   	nop

80103028 <__caching_destroy>:
80103028:	b8 ff ff             	mov    $0xffff,%ax
8010302b:	ff                   	(bad)  
8010302c:	ff c3                	inc    %bx
8010302e:	66 90                	xchg   %eax,%eax

80103030 <__caching_alloc>:
80103030:	31 c0                	xor    %ax,%ax
80103032:	c3                   	ret    
80103033:	90                   	nop

80103034 <__caching_free>:
80103034:	b8 ff ff             	mov    $0xffff,%ax
80103037:	ff                   	(bad)  
80103038:	ff c3                	inc    %bx
8010303a:	66 90                	xchg   %eax,%eax

8010303c <__caching_trim>:
8010303c:	c3                   	ret    
8010303d:	8d 76 00             	lea    0x0(%bp),%si

80103040 <__caching_create>:
80103040:	b8 ff ff             	mov    $0xffff,%ax
80103043:	ff                   	(bad)  
80103044:	ff c3                	inc    %bx
80103046:	66 90                	xchg   %eax,%eax

80103048 <__simple_free>:
80103048:	c3                   	ret    
80103049:	8d 76 00             	lea    0x0(%bp),%si

8010304c <kmalloc>:
8010304c:	57                   	push   %di
8010304d:	56                   	push   %si
8010304e:	53                   	push   %bx
8010304f:	e8 38 27             	call   8010578a <__text_end_kern+0x2>
80103052:	00 00                	add    %al,(%bx,%si)
80103054:	81 c3 6c 82          	add    $0x826c,%bx
80103058:	00 00                	add    %al,(%bx,%si)
8010305a:	8b 74 24             	mov    0x24(%si),%si
8010305d:	10 8b 7c 24          	adc    %cl,0x247c(%bp,%di)
80103061:	14 81                	adc    $0x81,%al
80103063:	fe 00                	incb   (%bx,%si)
80103065:	08 00                	or     %al,(%bx,%si)
80103067:	00 77 23             	add    %dh,0x23(%bx)
8010306a:	83 ec 08             	sub    $0x8,%sp
8010306d:	57                   	push   %di
8010306e:	56                   	push   %si
8010306f:	ff 93 a4 ff          	call   *-0x5c(%bp,%di)
80103073:	ff                   	(bad)  
80103074:	ff 89 c2 83          	decw   -0x7c3e(%bx,%di)
80103078:	c4 10                	les    (%bx,%si),%dx
8010307a:	83 e7 02             	and    $0x2,%di
8010307d:	74 08                	je     80103087 <kmalloc+0x3b>
8010307f:	31 c0                	xor    %ax,%ax
80103081:	89 d7                	mov    %dx,%di
80103083:	89 f1                	mov    %si,%cx
80103085:	f3 aa                	rep stos %al,%es:(%di)
80103087:	89 d0                	mov    %dx,%ax
80103089:	5b                   	pop    %bx
8010308a:	5e                   	pop    %si
8010308b:	5f                   	pop    %di
8010308c:	c3                   	ret    
8010308d:	50                   	push   %ax
8010308e:	50                   	push   %ax
8010308f:	56                   	push   %si
80103090:	8d 93 33 ae          	lea    -0x51cd(%bp,%di),%dx
80103094:	ff                   	(bad)  
80103095:	ff 52 e8             	call   *-0x18(%bp,%si)
80103098:	30 02                	xor    %al,(%bp,%si)
	...

8010309c <kfree>:
8010309c:	e8 f7 26             	call   80105796 <__x86.get_pc_thunk.ax+0x2>
8010309f:	00 00                	add    %al,(%bx,%si)
801030a1:	81 c2 1f 82          	add    $0x821f,%dx
801030a5:	00 00                	add    %al,(%bx,%si)
801030a7:	8b 44 24             	mov    0x24(%si),%ax
801030aa:	04 85                	add    $0x85,%al
801030ac:	c0                   	(bad)  
801030ad:	74 09                	je     801030b8 <kfree+0x1c>
801030af:	ff a2 a8 ff          	jmp    *-0x58(%bp,%si)
801030b3:	ff                   	(bad)  
801030b4:	ff 8d 76 00          	decw   0x76(%di)
801030b8:	c3                   	ret    
801030b9:	8d 76 00             	lea    0x0(%bp),%si

801030bc <ksize>:
801030bc:	e8 d7 26             	call   80105796 <__x86.get_pc_thunk.ax+0x2>
801030bf:	00 00                	add    %al,(%bx,%si)
801030c1:	81 c2 ff 81          	add    $0x81ff,%dx
801030c5:	00 00                	add    %al,(%bx,%si)
801030c7:	8b 44 24             	mov    0x24(%si),%ax
801030ca:	04 85                	add    $0x85,%al
801030cc:	c0                   	(bad)  
801030cd:	74 09                	je     801030d8 <ksize+0x1c>
801030cf:	ff a2 ac ff          	jmp    *-0x54(%bp,%si)
801030d3:	ff                   	(bad)  
801030d4:	ff 8d 76 00          	decw   0x76(%di)
801030d8:	31 c0                	xor    %ax,%ax
801030da:	c3                   	ret    
801030db:	90                   	nop

801030dc <set_simple_allocator>:
801030dc:	57                   	push   %di
801030dd:	56                   	push   %si
801030de:	e8 b1 26             	call   80105792 <__x86.get_pc_thunk.si+0x2>
801030e1:	00 00                	add    %al,(%bx,%si)
801030e3:	05 dd 81             	add    $0x81dd,%ax
801030e6:	00 00                	add    %al,(%bx,%si)
801030e8:	8b 74 24             	mov    0x24(%si),%si
801030eb:	0c 85                	or     $0x85,%al
801030ed:	f6 74 0f             	divb   0xf(%si)
801030f0:	8d 80 a4 ff          	lea    -0x5c(%bx,%si),%ax
801030f4:	ff                   	(bad)  
801030f5:	ff                   	(bad)  
801030f6:	b9 03 00             	mov    $0x3,%cx
801030f9:	00 00                	add    %al,(%bx,%si)
801030fb:	89 c7                	mov    %ax,%di
801030fd:	f3 a5                	rep movsw %ds:(%si),%es:(%di)
801030ff:	5e                   	pop    %si
80103100:	5f                   	pop    %di
80103101:	c3                   	ret    
80103102:	66 90                	xchg   %eax,%eax

80103104 <get_simple_allocator>:
80103104:	57                   	push   %di
80103105:	56                   	push   %si
80103106:	e8 8d 26             	call   80105796 <__x86.get_pc_thunk.ax+0x2>
80103109:	00 00                	add    %al,(%bx,%si)
8010310b:	81 c2 b5 81          	add    $0x81b5,%dx
8010310f:	00 00                	add    %al,(%bx,%si)
80103111:	8b 44 24             	mov    0x24(%si),%ax
80103114:	0c 85                	or     $0x85,%al
80103116:	c0                   	(bad)  
80103117:	74 0f                	je     80103128 <get_simple_allocator+0x24>
80103119:	8d b2 a4 ff          	lea    -0x5c(%bp,%si),%si
8010311d:	ff                   	(bad)  
8010311e:	ff                   	(bad)  
8010311f:	b9 03 00             	mov    $0x3,%cx
80103122:	00 00                	add    %al,(%bx,%si)
80103124:	89 c7                	mov    %ax,%di
80103126:	f3 a5                	rep movsw %ds:(%si),%es:(%di)
80103128:	5e                   	pop    %si
80103129:	5f                   	pop    %di
8010312a:	c3                   	ret    
8010312b:	90                   	nop

8010312c <set_caching_allocator>:
8010312c:	57                   	push   %di
8010312d:	56                   	push   %si
8010312e:	e8 61 26             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80103131:	00 00                	add    %al,(%bx,%si)
80103133:	05 8d 81             	add    $0x818d,%ax
80103136:	00 00                	add    %al,(%bx,%si)
80103138:	8b 74 24             	mov    0x24(%si),%si
8010313b:	0c 85                	or     $0x85,%al
8010313d:	f6 74 0f             	divb   0xf(%si)
80103140:	8d 80 90 ff          	lea    -0x70(%bx,%si),%ax
80103144:	ff                   	(bad)  
80103145:	ff                   	(bad)  
80103146:	b9 05 00             	mov    $0x5,%cx
80103149:	00 00                	add    %al,(%bx,%si)
8010314b:	89 c7                	mov    %ax,%di
8010314d:	f3 a5                	rep movsw %ds:(%si),%es:(%di)
8010314f:	5e                   	pop    %si
80103150:	5f                   	pop    %di
80103151:	c3                   	ret    
80103152:	66 90                	xchg   %eax,%eax

80103154 <cache_create>:
80103154:	e8 3f 26             	call   80105796 <__x86.get_pc_thunk.ax+0x2>
80103157:	00 00                	add    %al,(%bx,%si)
80103159:	81 c2 67 81          	add    $0x8167,%dx
8010315d:	00 00                	add    %al,(%bx,%si)
8010315f:	8b 44 24             	mov    0x24(%si),%ax
80103162:	04 85                	add    $0x85,%al
80103164:	c0                   	(bad)  
80103165:	74 09                	je     80103170 <cache_create+0x1c>
80103167:	ff a2 90 ff          	jmp    *-0x70(%bp,%si)
8010316b:	ff                   	(bad)  
8010316c:	ff 8d 76 00          	decw   0x76(%di)
80103170:	b8 ff ff             	mov    $0xffff,%ax
80103173:	ff                   	(bad)  
80103174:	ff c3                	inc    %bx
80103176:	66 90                	xchg   %eax,%eax

80103178 <cache_destroy>:
80103178:	e8 1b 26             	call   80105796 <__x86.get_pc_thunk.ax+0x2>
8010317b:	00 00                	add    %al,(%bx,%si)
8010317d:	81 c2 43 81          	add    $0x8143,%dx
80103181:	00 00                	add    %al,(%bx,%si)
80103183:	8b 44 24             	mov    0x24(%si),%ax
80103186:	04 85                	add    $0x85,%al
80103188:	c0                   	(bad)  
80103189:	74 09                	je     80103194 <cache_destroy+0x1c>
8010318b:	ff a2 94 ff          	jmp    *-0x6c(%bp,%si)
8010318f:	ff                   	(bad)  
80103190:	ff 8d 76 00          	decw   0x76(%di)
80103194:	b8 ff ff             	mov    $0xffff,%ax
80103197:	ff                   	(bad)  
80103198:	ff c3                	inc    %bx
8010319a:	66 90                	xchg   %eax,%eax

8010319c <cache_alloc>:
8010319c:	57                   	push   %di
8010319d:	53                   	push   %bx
8010319e:	51                   	push   %cx
8010319f:	e8 f0 25             	call   80105792 <__x86.get_pc_thunk.si+0x2>
801031a2:	00 00                	add    %al,(%bx,%si)
801031a4:	05 1c 81             	add    $0x811c,%ax
801031a7:	00 00                	add    %al,(%bx,%si)
801031a9:	8b 5c 24             	mov    0x24(%si),%bx
801031ac:	10 85 db 74          	adc    %al,0x74db(%di)
801031b0:	27                   	daa    
801031b1:	83 ec 0c             	sub    $0xc,%sp
801031b4:	53                   	push   %bx
801031b5:	ff 90 98 ff          	call   *-0x68(%bx,%si)
801031b9:	ff                   	(bad)  
801031ba:	ff 89 c2 83          	decw   -0x7c3e(%bx,%di)
801031be:	c4 10                	les    (%bx,%si),%dx
801031c0:	f6 43 0c 02          	testb  $0x2,0xc(%bp,%di)
801031c4:	74 09                	je     801031cf <cache_alloc+0x33>
801031c6:	8b 4b 04             	mov    0x4(%bp,%di),%cx
801031c9:	31 c0                	xor    %ax,%ax
801031cb:	89 d7                	mov    %dx,%di
801031cd:	f3 aa                	rep stos %al,%es:(%di)
801031cf:	89 d0                	mov    %dx,%ax
801031d1:	5a                   	pop    %dx
801031d2:	5b                   	pop    %bx
801031d3:	5f                   	pop    %di
801031d4:	c3                   	ret    
801031d5:	8d 76 00             	lea    0x0(%bp),%si
801031d8:	31 d2                	xor    %dx,%dx
801031da:	eb f3                	jmp    801031cf <cache_alloc+0x33>

801031dc <cache_free>:
801031dc:	57                   	push   %di
801031dd:	56                   	push   %si
801031de:	53                   	push   %bx
801031df:	e8 ac 25             	call   8010578e <__x86.get_pc_thunk.bx+0x2>
801031e2:	00 00                	add    %al,(%bx,%si)
801031e4:	81 c6 dc 80          	add    $0x80dc,%si
801031e8:	00 00                	add    %al,(%bx,%si)
801031ea:	8b 54 24             	mov    0x24(%si),%dx
801031ed:	10 8b 5c 24          	adc    %cl,0x245c(%bp,%di)
801031f1:	14 85                	adc    $0x85,%al
801031f3:	d2                   	(bad)  
801031f4:	74 25                	je     8010321b <cache_free+0x3f>
801031f6:	f6 42 0c 01          	testb  $0x1,0xc(%bp,%si)
801031fa:	74 14                	je     80103210 <cache_free+0x34>
801031fc:	89 5c 24             	mov    %bx,0x24(%si)
801031ff:	14 89                	adc    $0x89,%al
80103201:	54                   	push   %sp
80103202:	24 10                	and    $0x10,%al
80103204:	8b 86 9c ff          	mov    -0x64(%bp),%ax
80103208:	ff                   	(bad)  
80103209:	ff 5b 5e             	lcall  *0x5e(%bp,%di)
8010320c:	5f                   	pop    %di
8010320d:	ff e0                	jmp    *%ax
8010320f:	90                   	nop
80103210:	8b 4a 04             	mov    0x4(%bp,%si),%cx
80103213:	b0 20                	mov    $0x20,%al
80103215:	89 df                	mov    %bx,%di
80103217:	f3 aa                	rep stos %al,%es:(%di)
80103219:	eb e1                	jmp    801031fc <cache_free+0x20>
8010321b:	b8 ff ff             	mov    $0xffff,%ax
8010321e:	ff                   	(bad)  
8010321f:	ff 5b 5e             	lcall  *0x5e(%bp,%di)
80103222:	5f                   	pop    %di
80103223:	c3                   	ret    

80103224 <cache_trim>:
80103224:	e8 6f 25             	call   80105796 <__x86.get_pc_thunk.ax+0x2>
80103227:	00 00                	add    %al,(%bx,%si)
80103229:	81 c2 97 80          	add    $0x8097,%dx
8010322d:	00 00                	add    %al,(%bx,%si)
8010322f:	8b 44 24             	mov    0x24(%si),%ax
80103232:	04 85                	add    $0x85,%al
80103234:	c0                   	(bad)  
80103235:	74 09                	je     80103240 <cache_trim+0x1c>
80103237:	ff a2 a0 ff          	jmp    *-0x60(%bp,%si)
8010323b:	ff                   	(bad)  
8010323c:	ff 8d 76 00          	decw   0x76(%di)
80103240:	c3                   	ret    
80103241:	8d 76 00             	lea    0x0(%bp),%si

80103244 <simple_allocator_bootstrap>:
80103244:	53                   	push   %bx
80103245:	83 ec 08             	sub    $0x8,%sp
80103248:	e8 3f 25             	call   8010578a <__text_end_kern+0x2>
8010324b:	00 00                	add    %al,(%bx,%si)
8010324d:	81 c3 73 80          	add    $0x8073,%bx
80103251:	00 00                	add    %al,(%bx,%si)
80103253:	8b 44 24             	mov    0x24(%si),%ax
80103256:	10 89 c1 89          	adc    %cl,-0x763f(%bx,%di)
8010325a:	c2 03 54             	ret    $0x5403
8010325d:	24 14                	and    $0x14,%al
8010325f:	78 1b                	js     8010327c <simple_allocator_bootstrap+0x38>
80103261:	85 c0                	test   %ax,%ax
80103263:	79 06                	jns    8010326b <simple_allocator_bootstrap+0x27>
80103265:	8d 88 00 00          	lea    0x0(%bx,%si),%cx
80103269:	00 80 83 ec          	add    %al,-0x137d(%bx,%si)
8010326d:	08 52 51             	or     %dl,0x51(%bp,%si)
80103270:	e8 17 e8             	call   80101a8a <early_simple_init+0x5e>
80103273:	ff                   	(bad)  
80103274:	ff 31                	pushw  (%bx,%di)
80103276:	c0 83 c4 18 5b       	rolb   $0x5b,0x18c4(%bp,%di)
8010327b:	c3                   	ret    
8010327c:	81 c2 00 00          	add    $0x0,%dx
80103280:	00 80 eb dd          	add    %al,-0x2215(%bx,%si)

80103284 <simple_allocator_init>:
80103284:	53                   	push   %bx
80103285:	83 ec 08             	sub    $0x8,%sp
80103288:	e8 ff 24             	call   8010578a <__text_end_kern+0x2>
8010328b:	00 00                	add    %al,(%bx,%si)
8010328d:	81 c3 33 80          	add    $0x8033,%bx
80103291:	00 00                	add    %al,(%bx,%si)
80103293:	c7 c2 00 80          	mov    $0x8000,%dx
80103297:	12 80 85 d2          	adc    -0x2d7b(%bx,%si),%al
8010329b:	78 23                	js     801032c0 <simple_allocator_init+0x3c>
8010329d:	c7 c0 00 80          	mov    $0x8000,%ax
801032a1:	11 80 85 c0          	adc    %ax,-0x3f7b(%bx,%si)
801032a5:	79 05                	jns    801032ac <simple_allocator_init+0x28>
801032a7:	05 00 00             	add    $0x0,%ax
801032aa:	00 80 83 ec          	add    %al,-0x137d(%bx,%si)
801032ae:	08 52 50             	or     %dl,0x50(%bp,%si)
801032b1:	e8 d6 e7             	call   80101a8a <early_simple_init+0x5e>
801032b4:	ff                   	(bad)  
801032b5:	ff 31                	pushw  (%bx,%di)
801032b7:	c0 83 c4 18 5b       	rolb   $0x5b,0x18c4(%bp,%di)
801032bc:	c3                   	ret    
801032bd:	8d 76 00             	lea    0x0(%bp),%si
801032c0:	81 c2 00 00          	add    $0x0,%dx
801032c4:	00 80 eb d5          	add    %al,-0x2a15(%bx,%si)

801032c8 <__local_panic>:
801032c8:	eb fe                	jmp    801032c8 <__local_panic>
801032ca:	66 90                	xchg   %eax,%eax

801032cc <panic>:
801032cc:	57                   	push   %di
801032cd:	56                   	push   %si
801032ce:	53                   	push   %bx
801032cf:	e8 b8 24             	call   8010578a <__text_end_kern+0x2>
801032d2:	00 00                	add    %al,(%bx,%si)
801032d4:	81 c3 ec 7f          	add    $0x7fec,%bx
801032d8:	00 00                	add    %al,(%bx,%si)
801032da:	8d 44 24             	lea    0x24(%si),%ax
801032dd:	14 50                	adc    $0x50,%al
801032df:	ff 74 24             	pushw  0x24(%si)
801032e2:	14 68                	adc    $0x68,%al
801032e4:	00 04                	add    %al,(%si)
801032e6:	00 00                	add    %al,(%bx,%si)
801032e8:	8d b3 c0 2a          	lea    0x2ac0(%bp,%di),%si
801032ec:	00 00                	add    %al,(%bx,%si)
801032ee:	56                   	push   %si
801032ef:	e8 bc 1b             	call   80104eae <io_port_init+0x46>
801032f2:	00 00                	add    %al,(%bx,%si)
801032f4:	89 c7                	mov    %ax,%di
801032f6:	8d 83 50 ae          	lea    -0x51b0(%bp,%di),%ax
801032fa:	ff                   	(bad)  
801032fb:	ff 89 04 24          	decw   0x2404(%bx,%di)
801032ff:	e8 44 e1             	call   80101446 <get_default_kputs+0x12>
80103302:	ff                   	(bad)  
80103303:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
80103307:	81 ff ff 03          	cmp    $0x3ff,%di
8010330b:	00 00                	add    %al,(%bx,%si)
8010330d:	7f 0e                	jg     8010331d <panic+0x51>
8010330f:	83 ec 0c             	sub    $0xc,%sp
80103312:	56                   	push   %si
80103313:	e8 30 e1             	call   80101446 <get_default_kputs+0x12>
80103316:	ff                   	(bad)  
80103317:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
8010331b:	eb fe                	jmp    8010331b <panic+0x4f>
8010331d:	83 ec 0c             	sub    $0xc,%sp
80103320:	8d 83 6a ae          	lea    -0x5196(%bp,%di),%ax
80103324:	ff                   	(bad)  
80103325:	ff 50 e8             	call   *-0x18(%bx,%si)
80103328:	1c e1                	sbb    $0xe1,%al
8010332a:	ff                   	(bad)  
8010332b:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
8010332f:	eb de                	jmp    8010330f <panic+0x43>
80103331:	66 90                	xchg   %eax,%eax
80103333:	90                   	nop

80103334 <clear_bss_kern>:
80103334:	57                   	push   %di
80103335:	52                   	push   %dx
80103336:	e8 59 24             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80103339:	00 00                	add    %al,(%bx,%si)
8010333b:	05 85 7f             	add    $0x7f85,%ax
8010333e:	00 00                	add    %al,(%bx,%si)
80103340:	c7 c2 00 70          	mov    $0x7000,%dx
80103344:	11 80 89 14          	adc    %ax,0x1489(%bx,%si)
80103348:	24 c7                	and    $0xc7,%al
8010334a:	c7                   	(bad)  
8010334b:	e0 b2                	loopne 801032ff <panic+0x33>
8010334d:	10 80 39 fa          	adc    %al,-0x5c7(%bx,%si)
80103351:	76 0c                	jbe    8010335f <clear_bss_kern+0x2b>
80103353:	89 d1                	mov    %dx,%cx
80103355:	29 f9                	sub    %di,%cx
80103357:	c1 f9 02             	sar    $0x2,%cx
8010335a:	31 c0                	xor    %ax,%ax
8010335c:	fc                   	cld    
8010335d:	f3 aa                	rep stos %al,%es:(%di)
8010335f:	58                   	pop    %ax
80103360:	5f                   	pop    %di
80103361:	c3                   	ret    
80103362:	66 90                	xchg   %eax,%eax

80103364 <arch_load_gdt>:
80103364:	83 ec 10             	sub    $0x10,%sp
80103367:	e8 28 24             	call   80105792 <__x86.get_pc_thunk.si+0x2>
8010336a:	00 00                	add    %al,(%bx,%si)
8010336c:	05 54 7f             	add    $0x7f54,%ax
8010336f:	00 00                	add    %al,(%bx,%si)
80103371:	66 c7 80 c0 2e 00 00 	movl   $0x0,0x2ec0(%bx,%si)
80103378:	00 00 
8010337a:	66 c7 80 c2 2e 00 00 	movl   $0x0,0x2ec2(%bx,%si)
80103381:	00 00 
80103383:	c6 80 c4 2e 00       	movb   $0x0,0x2ec4(%bx,%si)
80103388:	00 00                	add    %al,(%bx,%si)
8010338a:	c6 80 c5 2e 00       	movb   $0x0,0x2ec5(%bx,%si)
8010338f:	00 90 c6 80          	add    %dl,-0x7f3a(%bx,%si)
80103393:	c6                   	(bad)  
80103394:	2e 00 00             	add    %al,%cs:(%bx,%si)
80103397:	c0 c6 80             	rol    $0x80,%dh
8010339a:	c7                   	(bad)  
8010339b:	2e 00 00             	add    %al,%cs:(%bx,%si)
8010339e:	00 66 c7             	add    %ah,-0x39(%bp)
801033a1:	80 c8 2e             	or     $0x2e,%al
801033a4:	00 00                	add    %al,(%bx,%si)
801033a6:	ff                   	(bad)  
801033a7:	ff 66 c7             	jmp    *-0x39(%bp)
801033aa:	80 ca 2e             	or     $0x2e,%dl
801033ad:	00 00                	add    %al,(%bx,%si)
801033af:	00 00                	add    %al,(%bx,%si)
801033b1:	c6 80 cc 2e 00       	movb   $0x0,0x2ecc(%bx,%si)
801033b6:	00 00                	add    %al,(%bx,%si)
801033b8:	c6 80 cd 2e 00       	movb   $0x0,0x2ecd(%bx,%si)
801033bd:	00 9a c6 80          	add    %bl,-0x7f3a(%bp,%si)
801033c1:	ce                   	into   
801033c2:	2e 00 00             	add    %al,%cs:(%bx,%si)
801033c5:	cf                   	iret   
801033c6:	c6 80 cf 2e 00       	movb   $0x0,0x2ecf(%bx,%si)
801033cb:	00 00                	add    %al,(%bx,%si)
801033cd:	66 c7 80 d0 2e 00 00 	movl   $0xffff0000,0x2ed0(%bx,%si)
801033d4:	ff ff 
801033d6:	66 c7 80 d2 2e 00 00 	movl   $0x0,0x2ed2(%bx,%si)
801033dd:	00 00 
801033df:	c6 80 d4 2e 00       	movb   $0x0,0x2ed4(%bx,%si)
801033e4:	00 00                	add    %al,(%bx,%si)
801033e6:	c6 80 d5 2e 00       	movb   $0x0,0x2ed5(%bx,%si)
801033eb:	00 92 c6 80          	add    %dl,-0x7f3a(%bp,%si)
801033ef:	d6                   	(bad)  
801033f0:	2e 00 00             	add    %al,%cs:(%bx,%si)
801033f3:	cf                   	iret   
801033f4:	c6 80 d7 2e 00       	movb   $0x0,0x2ed7(%bx,%si)
801033f9:	00 00                	add    %al,(%bx,%si)
801033fb:	66 c7 80 e0 2e 00 00 	movl   $0xffff0000,0x2ee0(%bx,%si)
80103402:	ff ff 
80103404:	66 c7 80 e2 2e 00 00 	movl   $0x0,0x2ee2(%bx,%si)
8010340b:	00 00 
8010340d:	c6 80 e4 2e 00       	movb   $0x0,0x2ee4(%bx,%si)
80103412:	00 00                	add    %al,(%bx,%si)
80103414:	c6 80 e5 2e 00       	movb   $0x0,0x2ee5(%bx,%si)
80103419:	00 fa                	add    %bh,%dl
8010341b:	c6 80 e6 2e 00       	movb   $0x0,0x2ee6(%bx,%si)
80103420:	00 cf                	add    %cl,%bh
80103422:	c6 80 e7 2e 00       	movb   $0x0,0x2ee7(%bx,%si)
80103427:	00 00                	add    %al,(%bx,%si)
80103429:	66 c7 80 e8 2e 00 00 	movl   $0xffff0000,0x2ee8(%bx,%si)
80103430:	ff ff 
80103432:	66 c7 80 ea 2e 00 00 	movl   $0x0,0x2eea(%bx,%si)
80103439:	00 00 
8010343b:	c6 80 ec 2e 00       	movb   $0x0,0x2eec(%bx,%si)
80103440:	00 00                	add    %al,(%bx,%si)
80103442:	c6 80 ed 2e 00       	movb   $0x0,0x2eed(%bx,%si)
80103447:	00 f2                	add    %dh,%dl
80103449:	c6 80 ee 2e 00       	movb   $0x0,0x2eee(%bx,%si)
8010344e:	00 cf                	add    %cl,%bh
80103450:	c6 80 ef 2e 00       	movb   $0x0,0x2eef(%bx,%si)
80103455:	00 00                	add    %al,(%bx,%si)
80103457:	66 c7 80 d8 2e 00 00 	movl   $0x0,0x2ed8(%bx,%si)
8010345e:	00 00 
80103460:	66 c7 80 da 2e 00 00 	movl   $0x0,0x2eda(%bx,%si)
80103467:	00 00 
80103469:	c6 80 dc 2e 00       	movb   $0x0,0x2edc(%bx,%si)
8010346e:	00 00                	add    %al,(%bx,%si)
80103470:	c6 80 dd 2e 00       	movb   $0x0,0x2edd(%bx,%si)
80103475:	00 90 c6 80          	add    %dl,-0x7f3a(%bx,%si)
80103479:	de 2e 00 00          	fisubr 0x0
8010347d:	c0 c6 80             	rol    $0x80,%dh
80103480:	df 2e 00 00          	fildll 0x0
80103484:	00 66 c7             	add    %ah,-0x39(%bp)
80103487:	44                   	inc    %sp
80103488:	24 0a                	and    $0xa,%al
8010348a:	37                   	aaa    
8010348b:	00 8d 80 c0          	add    %cl,-0x3f80(%di)
8010348f:	2e 00 00             	add    %al,%cs:(%bx,%si)
80103492:	66 89 44 24          	mov    %eax,0x24(%si)
80103496:	0c c1                	or     $0xc1,%al
80103498:	e8 10 66             	call   80109aab <sizes+0x1ab>
8010349b:	89 44 24             	mov    %ax,0x24(%si)
8010349e:	0e                   	push   %cs
8010349f:	8d 44 24             	lea    0x24(%si),%ax
801034a2:	0a 0f                	or     (%bx),%cl
801034a4:	01 10                	add    %dx,(%bx,%si)
801034a6:	83 c4 10             	add    $0x10,%sp
801034a9:	c3                   	ret    
801034aa:	66 90                	xchg   %eax,%eax

801034ac <arch_early_init>:
801034ac:	53                   	push   %bx
801034ad:	83 ec 08             	sub    $0x8,%sp
801034b0:	e8 d7 22             	call   8010578a <__text_end_kern+0x2>
801034b3:	00 00                	add    %al,(%bx,%si)
801034b5:	81 c3 0b 7e          	add    $0x7e0b,%bx
801034b9:	00 00                	add    %al,(%bx,%si)
801034bb:	e8 a4 fe             	call   80103362 <clear_bss_kern+0x2e>
801034be:	ff                   	(bad)  
801034bf:	ff                   	(bad)  
801034c0:	e8 cd 1f             	call   80105490 <entryother_gdtdesc+0x4>
801034c3:	00 00                	add    %al,(%bx,%si)
801034c5:	83 c4 08             	add    $0x8,%sp
801034c8:	5b                   	pop    %bx
801034c9:	c3                   	ret    
801034ca:	66 90                	xchg   %eax,%eax

801034cc <arch_early_continue>:
801034cc:	53                   	push   %bx
801034cd:	83 ec 08             	sub    $0x8,%sp
801034d0:	e8 b7 22             	call   8010578a <__text_end_kern+0x2>
801034d3:	00 00                	add    %al,(%bx,%si)
801034d5:	81 c3 eb 7d          	add    $0x7deb,%bx
801034d9:	00 00                	add    %al,(%bx,%si)
801034db:	e8 60 02             	call   8010373e <page_index_early_map+0x52>
801034de:	00 00                	add    %al,(%bx,%si)
801034e0:	e8 9f e3             	call   80101882 <page_allocator_init+0xae>
801034e3:	ff                   	(bad)  
801034e4:	ff 83 c4 08          	incw   0x8c4(%bp,%di)
801034e8:	5b                   	pop    %bx
801034e9:	c3                   	ret    
801034ea:	66 90                	xchg   %eax,%eax

801034ec <sleep1>:
801034ec:	fa                   	cli    
801034ed:	8d 76 00             	lea    0x0(%bp),%si
801034f0:	f4                   	hlt    
801034f1:	eb fd                	jmp    801034f0 <sleep1+0x4>
801034f3:	90                   	nop

801034f4 <memset>:
801034f4:	57                   	push   %di
801034f5:	8b 54 24             	mov    0x24(%si),%dx
801034f8:	08 89 d7 8b          	or     %cl,-0x7429(%bx,%di)
801034fc:	4c                   	dec    %sp
801034fd:	24 10                	and    $0x10,%al
801034ff:	8b 44 24             	mov    0x24(%si),%ax
80103502:	0c fc                	or     $0xfc,%al
80103504:	f3 aa                	rep stos %al,%es:(%di)
80103506:	89 d0                	mov    %dx,%ax
80103508:	5f                   	pop    %di
80103509:	c3                   	ret    
8010350a:	66 90                	xchg   %eax,%eax

8010350c <strcmp>:
8010350c:	53                   	push   %bx
8010350d:	8b 54 24             	mov    0x24(%si),%dx
80103510:	08 8b 5c 24          	or     %cl,0x245c(%bp,%di)
80103514:	0c 0f                	or     $0xf,%al
80103516:	be 02 0f             	mov    $0xf02,%si
80103519:	be 0b 38             	mov    $0x380b,%si
8010351c:	c8 74 11 eb          	enter  $0x1174,$0xeb
80103520:	17                   	pop    %ss
80103521:	8d 76 00             	lea    0x0(%bp),%si
80103524:	42                   	inc    %dx
80103525:	43                   	inc    %bx
80103526:	0f be 02             	movsbw (%bp,%si),%ax
80103529:	0f be 0b             	movsbw (%bp,%di),%cx
8010352c:	38 c8                	cmp    %cl,%al
8010352e:	75 08                	jne    80103538 <strcmp+0x2c>
80103530:	84 c0                	test   %al,%al
80103532:	75 f0                	jne    80103524 <strcmp+0x18>
80103534:	31 c0                	xor    %ax,%ax
80103536:	5b                   	pop    %bx
80103537:	c3                   	ret    
80103538:	29 c8                	sub    %cx,%ax
8010353a:	5b                   	pop    %bx
8010353b:	c3                   	ret    

8010353c <memmove>:
8010353c:	57                   	push   %di
8010353d:	56                   	push   %si
8010353e:	53                   	push   %bx
8010353f:	8b 7c 24             	mov    0x24(%si),%di
80103542:	10 8b 5c 24          	adc    %cl,0x245c(%bp,%di)
80103546:	14 8b                	adc    $0x8b,%al
80103548:	4c                   	dec    %sp
80103549:	24 18                	and    $0x18,%al
8010354b:	39 fb                	cmp    %di,%bx
8010354d:	76 07                	jbe    80103556 <memmove+0x1a>
8010354f:	8d 14                	lea    (%si),%dx
80103551:	0f 39                	(bad)  
80103553:	d3                   	(bad)  
80103554:	72 26                	jb     8010357c <memmove+0x40>
80103556:	8d 71 ff             	lea    -0x1(%bx,%di),%si
80103559:	01 f3                	add    %si,%bx
8010355b:	01 fe                	add    %di,%si
8010355d:	85 c9                	test   %cx,%cx
8010355f:	74 12                	je     80103573 <memmove+0x37>
80103561:	f7 d9                	neg    %cx
80103563:	31 d2                	xor    %dx,%dx
80103565:	8d 76 00             	lea    0x0(%bp),%si
80103568:	8a 04                	mov    (%si),%al
8010356a:	13 88 04 16          	adc    0x1604(%bx,%si),%cx
8010356e:	4a                   	dec    %dx
8010356f:	39 ca                	cmp    %cx,%dx
80103571:	75 f5                	jne    80103568 <memmove+0x2c>
80103573:	89 f8                	mov    %di,%ax
80103575:	5b                   	pop    %bx
80103576:	5e                   	pop    %si
80103577:	5f                   	pop    %di
80103578:	c3                   	ret    
80103579:	8d 76 00             	lea    0x0(%bp),%si
8010357c:	31 d2                	xor    %dx,%dx
8010357e:	85 c9                	test   %cx,%cx
80103580:	74 f1                	je     80103573 <memmove+0x37>
80103582:	66 90                	xchg   %eax,%eax
80103584:	8a 04                	mov    (%si),%al
80103586:	13 88 04 17          	adc    0x1704(%bx,%si),%cx
8010358a:	42                   	inc    %dx
8010358b:	39 d1                	cmp    %dx,%cx
8010358d:	75 f5                	jne    80103584 <memmove+0x48>
8010358f:	89 f8                	mov    %di,%ax
80103591:	5b                   	pop    %bx
80103592:	5e                   	pop    %si
80103593:	5f                   	pop    %di
80103594:	c3                   	ret    
80103595:	8d 76 00             	lea    0x0(%bp),%si

80103598 <memcmp>:
80103598:	57                   	push   %di
80103599:	56                   	push   %si
8010359a:	53                   	push   %bx
8010359b:	8b 74 24             	mov    0x24(%si),%si
8010359e:	10 8b 7c 24          	adc    %cl,0x247c(%bp,%di)
801035a2:	14 8b                	adc    $0x8b,%al
801035a4:	5c                   	pop    %sp
801035a5:	24 18                	and    $0x18,%al
801035a7:	85 db                	test   %bx,%bx
801035a9:	74 22                	je     801035cd <memcmp+0x35>
801035ab:	8a 16 0f be          	mov    -0x41f1,%dl
801035af:	0f 38 d1             	(bad)  
801035b2:	75 20                	jne    801035d4 <memcmp+0x3c>
801035b4:	b8 01 00             	mov    $0x1,%ax
801035b7:	00 00                	add    %al,(%bx,%si)
801035b9:	eb 0e                	jmp    801035c9 <memcmp+0x31>
801035bb:	90                   	nop
801035bc:	8a 14                	mov    (%si),%dl
801035be:	06                   	push   %es
801035bf:	40                   	inc    %ax
801035c0:	0f be 4c 07          	movsbw 0x7(%si),%cx
801035c4:	ff                   	(bad)  
801035c5:	38 ca                	cmp    %cl,%dl
801035c7:	75 0b                	jne    801035d4 <memcmp+0x3c>
801035c9:	39 d8                	cmp    %bx,%ax
801035cb:	75 ef                	jne    801035bc <memcmp+0x24>
801035cd:	31 c0                	xor    %ax,%ax
801035cf:	5b                   	pop    %bx
801035d0:	5e                   	pop    %si
801035d1:	5f                   	pop    %di
801035d2:	c3                   	ret    
801035d3:	90                   	nop
801035d4:	0f be c2             	movsbw %dl,%ax
801035d7:	29 c8                	sub    %cx,%ax
801035d9:	5b                   	pop    %bx
801035da:	5e                   	pop    %si
801035db:	5f                   	pop    %di
801035dc:	c3                   	ret    
801035dd:	8d 76 00             	lea    0x0(%bp),%si

801035e0 <strlcpy>:
801035e0:	53                   	push   %bx
801035e1:	8b 54 24             	mov    0x24(%si),%dx
801035e4:	08 8b 4c 24          	or     %cl,0x244c(%bp,%di)
801035e8:	0c 8b                	or     $0x8b,%al
801035ea:	5c                   	pop    %sp
801035eb:	24 10                	and    $0x10,%al
801035ed:	85 db                	test   %bx,%bx
801035ef:	74 1c                	je     8010360d <strlcpy+0x2d>
801035f1:	8d 43 ff             	lea    -0x1(%bp,%di),%ax
801035f4:	eb 0c                	jmp    80103602 <strlcpy+0x22>
801035f6:	66 90                	xchg   %eax,%eax
801035f8:	88 1a                	mov    %bl,(%bp,%si)
801035fa:	42                   	inc    %dx
801035fb:	41                   	inc    %cx
801035fc:	48                   	dec    %ax
801035fd:	83 f8 ff             	cmp    $0xffff,%ax
80103600:	74 06                	je     80103608 <strlcpy+0x28>
80103602:	8a 19                	mov    (%bx,%di),%bl
80103604:	84 db                	test   %bl,%bl
80103606:	75 f0                	jne    801035f8 <strlcpy+0x18>
80103608:	c6 02 00             	movb   $0x0,(%bp,%si)
8010360b:	5b                   	pop    %bx
8010360c:	c3                   	ret    
8010360d:	b8 ff ff             	mov    $0xffff,%ax
80103610:	ff                   	(bad)  
80103611:	ff                   	(bad)  
80103612:	eb f4                	jmp    80103608 <strlcpy+0x28>

80103614 <walk_page_dir>:
80103614:	55                   	push   %bp
80103615:	57                   	push   %di
80103616:	56                   	push   %si
80103617:	53                   	push   %bx
80103618:	83 ec 3c             	sub    $0x3c,%sp
8010361b:	e8 6c 21             	call   8010578a <__text_end_kern+0x2>
8010361e:	00 00                	add    %al,(%bx,%si)
80103620:	81 c3 a0 7c          	add    $0x7ca0,%bx
80103624:	00 00                	add    %al,(%bx,%si)
80103626:	89 d6                	mov    %dx,%si
80103628:	c1 ee 16             	shr    $0x16,%si
8010362b:	8d 2c                	lea    (%si),%bp
8010362d:	b0 8b                	mov    $0x8b,%al
8010362f:	45                   	inc    %bp
80103630:	00 89 c6 83          	add    %cl,-0x7c3a(%bx,%di)
80103634:	e6 01                	out    %al,$0x1
80103636:	74 24                	je     8010365c <walk_page_dir+0x48>
80103638:	25 00 f0             	and    $0xf000,%ax
8010363b:	ff                   	(bad)  
8010363c:	ff                   	(bad)  
8010363d:	78 05                	js     80103644 <walk_page_dir+0x30>
8010363f:	05 00 00             	add    $0x0,%ax
80103642:	00 80 89 c6          	add    %al,-0x3977(%bx,%si)
80103646:	c1 ea 0a             	shr    $0xa,%dx
80103649:	81 e2 fc 0f          	and    $0xffc,%dx
8010364d:	00 00                	add    %al,(%bx,%si)
8010364f:	8d 04                	lea    (%si),%ax
80103651:	16                   	push   %ss
80103652:	83 c4 3c             	add    $0x3c,%sp
80103655:	5b                   	pop    %bx
80103656:	5e                   	pop    %si
80103657:	5f                   	pop    %di
80103658:	5d                   	pop    %bp
80103659:	c3                   	ret    
8010365a:	66 90                	xchg   %eax,%eax
8010365c:	85 c9                	test   %cx,%cx
8010365e:	74 74                	je     801036d4 <walk_page_dir+0xc0>
80103660:	89 54 24             	mov    %dx,0x24(%si)
80103663:	0c c7                	or     $0xc7,%al
80103665:	44                   	inc    %sp
80103666:	24 24                	and    $0x24,%al
80103668:	00 10                	add    %dl,(%bx,%si)
8010366a:	00 00                	add    %al,(%bx,%si)
8010366c:	c7 44 24 28 00       	movw   $0x28,0x24(%si)
80103671:	00 00                	add    %al,(%bx,%si)
80103673:	00 c7                	add    %al,%bh
80103675:	44                   	inc    %sp
80103676:	24 2c                	and    $0x2c,%al
80103678:	00 00                	add    %al,(%bx,%si)
8010367a:	00 00                	add    %al,(%bx,%si)
8010367c:	83 ec 0c             	sub    $0xc,%sp
8010367f:	8d 44 24             	lea    0x24(%si),%ax
80103682:	28 50 e8             	sub    %dl,-0x18(%bx,%si)
80103685:	0f f7 ff             	maskmovq %mm7,%mm7
80103688:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
8010368c:	85 c0                	test   %ax,%ax
8010368e:	8b 54 24             	mov    0x24(%si),%dx
80103691:	0c 75                	or     $0x75,%al
80103693:	1c 8b                	sbb    $0x8b,%al
80103695:	74 24                	je     801036bb <walk_page_dir+0xa7>
80103697:	1c 85                	sbb    $0x85,%al
80103699:	f6 74 38             	divb   0x38(%si)
8010369c:	b9 00 04             	mov    $0x400,%cx
8010369f:	00 00                	add    %al,(%bx,%si)
801036a1:	89 f7                	mov    %si,%di
801036a3:	f3 ab                	rep stos %ax,%es:(%di)
801036a5:	78 37                	js     801036de <walk_page_dir+0xca>
801036a7:	89 f0                	mov    %si,%ax
801036a9:	83 c8 07             	or     $0x7,%ax
801036ac:	eb 1c                	jmp    801036ca <walk_page_dir+0xb6>
801036ae:	66 90                	xchg   %eax,%eax
801036b0:	bb ff ff             	mov    $0xffff,%bx
801036b3:	ff                   	(bad)  
801036b4:	ff                   	(bad)  
801036b5:	b9 00 04             	mov    $0x400,%cx
801036b8:	00 00                	add    %al,(%bx,%si)
801036ba:	89 df                	mov    %bx,%di
801036bc:	89 f0                	mov    %si,%ax
801036be:	f3 ab                	rep stos %ax,%es:(%di)
801036c0:	b8 ff ff             	mov    $0xffff,%ax
801036c3:	ff                   	(bad)  
801036c4:	7f be                	jg     80103684 <walk_page_dir+0x70>
801036c6:	ff                   	(bad)  
801036c7:	ff                   	(bad)  
801036c8:	ff                   	(bad)  
801036c9:	ff 89 45 00          	decw   0x45(%bx,%di)
801036cd:	e9 74 ff             	jmp    80103644 <walk_page_dir+0x30>
801036d0:	ff                   	(bad)  
801036d1:	ff 66 90             	jmp    *-0x70(%bp)
801036d4:	31 c0                	xor    %ax,%ax
801036d6:	83 c4 3c             	add    $0x3c,%sp
801036d9:	5b                   	pop    %bx
801036da:	5e                   	pop    %si
801036db:	5f                   	pop    %di
801036dc:	5d                   	pop    %bp
801036dd:	c3                   	ret    
801036de:	8d 86 00 00          	lea    0x0(%bp),%ax
801036e2:	00 80 83 c8          	add    %al,-0x377d(%bx,%si)
801036e6:	07                   	pop    %es
801036e7:	eb e1                	jmp    801036ca <walk_page_dir+0xb6>
801036e9:	8d 76 00             	lea    0x0(%bp),%si

801036ec <page_index_early_map>:
801036ec:	57                   	push   %di
801036ed:	56                   	push   %si
801036ee:	53                   	push   %bx
801036ef:	8b 7c 24             	mov    0x24(%si),%di
801036f2:	10 8b 54 24          	adc    %cl,0x2454(%bp,%di)
801036f6:	1c 89                	sbb    $0x89,%al
801036f8:	d0 25                	shlb   (%di)
801036fa:	00 f0                	add    %dh,%al
801036fc:	ff                   	(bad)  
801036fd:	ff 8b 4c 24          	decw   0x244c(%bp,%di)
80103701:	20 8d b4 0a          	and    %cl,0xab4(%di)
80103705:	fe 0f                	decb   (%bx)
80103707:	00 00                	add    %al,(%bx,%si)
80103709:	81 e6 00 f0          	and    $0xf000,%si
8010370d:	ff                   	(bad)  
8010370e:	ff 8b 5c 24          	decw   0x245c(%bp,%di)
80103712:	14 81                	adc    $0x81,%al
80103714:	e3 00                	jcxz   80103716 <page_index_early_map+0x2a>
80103716:	f0 ff                	lock (bad) 
80103718:	ff 29                	ljmp   *(%bx,%di)
8010371a:	c3                   	ret    
8010371b:	39 f0                	cmp    %si,%ax
8010371d:	77 18                	ja     80103737 <page_index_early_map+0x4b>
8010371f:	90                   	nop
80103720:	89 c1                	mov    %ax,%cx
80103722:	c1 e9 16             	shr    $0x16,%cx
80103725:	8d 14                	lea    (%si),%dx
80103727:	18 80 ca 83          	sbb    %al,-0x7c36(%bx,%si)
8010372b:	89 14                	mov    %dx,(%si)
8010372d:	8f 05                	popw   (%di)
8010372f:	00 00                	add    %al,(%bx,%si)
80103731:	40                   	inc    %ax
80103732:	00 39                	add    %bh,(%bx,%di)
80103734:	c6                   	(bad)  
80103735:	73 e9                	jae    80103720 <page_index_early_map+0x34>
80103737:	b8 01 00             	mov    $0x1,%ax
8010373a:	00 00                	add    %al,(%bx,%si)
8010373c:	5b                   	pop    %bx
8010373d:	5e                   	pop    %si
8010373e:	5f                   	pop    %di
8010373f:	c3                   	ret    

80103740 <early_mm_init>:
80103740:	53                   	push   %bx
80103741:	e8 52 20             	call   80105796 <__x86.get_pc_thunk.ax+0x2>
80103744:	00 00                	add    %al,(%bx,%si)
80103746:	81 c2 7a 7b          	add    $0x7b7a,%dx
8010374a:	00 00                	add    %al,(%bx,%si)
8010374c:	b8 00 00             	mov    $0x0,%ax
8010374f:	00 80 c7 c1          	add    %al,-0x3e39(%bx,%si)
80103753:	00 a0 10 80          	add    %ah,-0x7ff0(%bx,%si)
80103757:	90                   	nop
80103758:	89 c3                	mov    %ax,%bx
8010375a:	c1 eb 16             	shr    $0x16,%bx
8010375d:	8d 90 00 00          	lea    0x0(%bx,%si),%dx
80103761:	00 80 80 ca          	add    %al,-0x3580(%bx,%si)
80103765:	83 89 14 99 05       	orw    $0x5,-0x66ec(%bx,%di)
8010376a:	00 00                	add    %al,(%bx,%si)
8010376c:	40                   	inc    %ax
8010376d:	00 3d                	add    %bh,(%di)
8010376f:	00 00                	add    %al,(%bx,%si)
80103771:	40                   	inc    %ax
80103772:	8e 75 e3             	mov    -0x1d(%di),%?
80103775:	31 c0                	xor    %ax,%ax
80103777:	90                   	nop
80103778:	89 c2                	mov    %ax,%dx
8010377a:	c1 ea 16             	shr    $0x16,%dx
8010377d:	89 c3                	mov    %ax,%bx
8010377f:	80 cb 83             	or     $0x83,%bl
80103782:	89 1c                	mov    %bx,(%si)
80103784:	91                   	xchg   %ax,%cx
80103785:	05 00 00             	add    $0x0,%ax
80103788:	40                   	inc    %ax
80103789:	00 3d                	add    %bh,(%di)
8010378b:	00 00                	add    %al,(%bx,%si)
8010378d:	40                   	inc    %ax
8010378e:	0e                   	push   %cs
8010378f:	75 e7                	jne    80103778 <early_mm_init+0x38>
80103791:	c7 81 e0 0f 00 00    	movw   $0x0,0xfe0(%bx,%di)
80103797:	83 00 00             	addw   $0x0,(%bx,%si)
8010379a:	fe c7                	inc    %bh
8010379c:	81 e4 0f 00          	and    $0xf,%sp
801037a0:	00 83 00 40          	add    %al,0x4000(%bp,%di)
801037a4:	fe c7                	inc    %bh
801037a6:	81 e8 0f 00          	sub    $0xf,%ax
801037aa:	00 83 00 80          	add    %al,-0x8000(%bp,%di)
801037ae:	fe c7                	inc    %bh
801037b0:	81 ec 0f 00          	sub    $0xf,%sp
801037b4:	00 83 00 c0          	add    %al,-0x4000(%bp,%di)
801037b8:	fe c7                	inc    %bh
801037ba:	81 f0 0f 00          	xor    $0xf,%ax
801037be:	00 83 00 00          	add    %al,0x0(%bp,%di)
801037c2:	ff 5b c3             	lcall  *-0x3d(%bp,%di)
801037c5:	8d 76 00             	lea    0x0(%bp),%si

801037c8 <early_mapping_valid>:
801037c8:	b8 01 00             	mov    $0x1,%ax
801037cb:	00 00                	add    %al,(%bx,%si)
801037cd:	c3                   	ret    
801037ce:	66 90                	xchg   %eax,%eax

801037d0 <mmu_init>:
801037d0:	8b 44 24             	mov    0x24(%si),%ax
801037d3:	04 0f                	add    $0xf,%al
801037d5:	22 d8                	and    %al,%bl
801037d7:	c3                   	ret    

801037d8 <page_index_clear>:
801037d8:	57                   	push   %di
801037d9:	b9 00 10             	mov    $0x1000,%cx
801037dc:	00 00                	add    %al,(%bx,%si)
801037de:	b0 20                	mov    $0x20,%al
801037e0:	8b 7c 24             	mov    0x24(%si),%di
801037e3:	08 f3                	or     %dh,%bl
801037e5:	aa                   	stos   %al,%es:(%di)
801037e6:	5f                   	pop    %di
801037e7:	c3                   	ret    

801037e8 <map_pages>:
801037e8:	55                   	push   %bp
801037e9:	57                   	push   %di
801037ea:	56                   	push   %si
801037eb:	53                   	push   %bx
801037ec:	83 ec 1c             	sub    $0x1c,%sp
801037ef:	e8 a0 1f             	call   80105792 <__x86.get_pc_thunk.si+0x2>
801037f2:	00 00                	add    %al,(%bx,%si)
801037f4:	05 cc 7a             	add    $0x7acc,%ax
801037f7:	00 00                	add    %al,(%bx,%si)
801037f9:	89 44 24             	mov    %ax,0x24(%si)
801037fc:	0c 8b                	or     $0x8b,%al
801037fe:	44                   	inc    %sp
801037ff:	24 34                	and    $0x34,%al
80103801:	8b 6c 24             	mov    0x24(%si),%bp
80103804:	38 89 c7 81          	cmp    %cl,-0x7e39(%bx,%di)
80103808:	e7 00                	out    %ax,$0x0
8010380a:	f0 ff                	lock (bad) 
8010380c:	ff 89 fb 8b          	decw   -0x7405(%bx,%di)
80103810:	54                   	push   %sp
80103811:	24 40                	and    $0x40,%al
80103813:	8d 74 10             	lea    0x10(%si),%si
80103816:	ff 81 e6 00          	incw   0xe6(%bx,%di)
8010381a:	f0 ff                	lock (bad) 
8010381c:	ff                   	(bad)  
8010381d:	39 f7                	cmp    %si,%di
8010381f:	77 57                	ja     80103878 <map_pages+0x90>
80103821:	8b 44 24             	mov    0x24(%si),%ax
80103824:	44                   	inc    %sp
80103825:	25 ff 0f             	and    $0xfff,%ax
80103828:	00 00                	add    %al,(%bx,%si)
8010382a:	83 c8 01             	or     $0x1,%ax
8010382d:	89 44 24             	mov    %ax,0x24(%si)
80103830:	08 eb                	or     %ch,%bl
80103832:	22 90 f6 00          	and    0xf6(%bx,%si),%dl
80103836:	01 75 4f             	add    %si,0x4f(%di)
80103839:	89 ea                	mov    %bp,%dx
8010383b:	29 fa                	sub    %di,%dx
8010383d:	01 da                	add    %bx,%dx
8010383f:	81 e2 00 f0          	and    $0xf000,%dx
80103843:	ff                   	(bad)  
80103844:	ff 0b                	decw   (%bp,%di)
80103846:	54                   	push   %sp
80103847:	24 08                	and    $0x8,%al
80103849:	89 10                	mov    %dx,(%bx,%si)
8010384b:	81 c3 00 10          	add    $0x1000,%bx
8010384f:	00 00                	add    %al,(%bx,%si)
80103851:	39 de                	cmp    %bx,%si
80103853:	72 23                	jb     80103878 <map_pages+0x90>
80103855:	b9 01 00             	mov    $0x1,%cx
80103858:	00 00                	add    %al,(%bx,%si)
8010385a:	89 da                	mov    %bx,%dx
8010385c:	8b 44 24             	mov    0x24(%si),%ax
8010385f:	30 e8                	xor    %ch,%al
80103861:	af                   	scas   %es:(%di),%ax
80103862:	fd                   	std    
80103863:	ff                   	(bad)  
80103864:	ff 85 c0 75          	incw   0x75c0(%di)
80103868:	cb                   	lret   
80103869:	b8 ff ff             	mov    $0xffff,%ax
8010386c:	ff                   	(bad)  
8010386d:	ff 83 c4 1c          	incw   0x1cc4(%bp,%di)
80103871:	5b                   	pop    %bx
80103872:	5e                   	pop    %si
80103873:	5f                   	pop    %di
80103874:	5d                   	pop    %bp
80103875:	c3                   	ret    
80103876:	66 90                	xchg   %eax,%eax
80103878:	8d 86 ff 0f          	lea    0xfff(%bp),%ax
8010387c:	00 00                	add    %al,(%bx,%si)
8010387e:	29 d8                	sub    %bx,%ax
80103880:	83 c4 1c             	add    $0x1c,%sp
80103883:	5b                   	pop    %bx
80103884:	5e                   	pop    %si
80103885:	5f                   	pop    %di
80103886:	5d                   	pop    %bp
80103887:	c3                   	ret    
80103888:	83 ec 0c             	sub    $0xc,%sp
8010388b:	8b 5c 24             	mov    0x24(%si),%bx
8010388e:	18 8d 83 87          	sbb    %cl,-0x787d(%di)
80103892:	ae                   	scas   %es:(%di),%al
80103893:	ff                   	(bad)  
80103894:	ff 50 e8             	call   *-0x18(%bx,%si)
80103897:	31 fa                	xor    %di,%dx
80103899:	ff                   	(bad)  
8010389a:	ff                   	.byte 0xff
8010389b:	90                   	nop

8010389c <unmap_pages>:
8010389c:	57                   	push   %di
8010389d:	56                   	push   %si
8010389e:	53                   	push   %bx
8010389f:	8b 7c 24             	mov    0x24(%si),%di
801038a2:	10 8b 5c 24          	adc    %cl,0x245c(%bp,%di)
801038a6:	14 81                	adc    $0x81,%al
801038a8:	e3 00                	jcxz   801038aa <unmap_pages+0xe>
801038aa:	f0 ff                	lock (bad) 
801038ac:	ff 8b 44 24          	decw   0x2444(%bp,%di)
801038b0:	18 8d 74 03          	sbb    %cl,0x374(%di)
801038b4:	ff                   	(bad)  
801038b5:	39 f3                	cmp    %si,%bx
801038b7:	77 22                	ja     801038db <unmap_pages+0x3f>
801038b9:	8d 76 00             	lea    0x0(%bp),%si
801038bc:	31 c9                	xor    %cx,%cx
801038be:	89 da                	mov    %bx,%dx
801038c0:	89 f8                	mov    %di,%ax
801038c2:	e8 4d fd             	call   80103612 <strlcpy+0x32>
801038c5:	ff                   	(bad)  
801038c6:	ff 85 c0 74          	incw   0x74c0(%di)
801038ca:	06                   	push   %es
801038cb:	c7 00 00 00          	movw   $0x0,(%bx,%si)
801038cf:	00 00                	add    %al,(%bx,%si)
801038d1:	81 c3 00 10          	add    $0x1000,%bx
801038d5:	00 00                	add    %al,(%bx,%si)
801038d7:	39 de                	cmp    %bx,%si
801038d9:	73 e1                	jae    801038bc <unmap_pages+0x20>
801038db:	29 de                	sub    %bx,%si
801038dd:	8d 86 ff 0f          	lea    0xfff(%bp),%ax
801038e1:	00 00                	add    %al,(%bx,%si)
801038e3:	5b                   	pop    %bx
801038e4:	5e                   	pop    %si
801038e5:	5f                   	pop    %di
801038e6:	c3                   	ret    
801038e7:	90                   	nop

801038e8 <set_pages_perm>:
801038e8:	55                   	push   %bp
801038e9:	57                   	push   %di
801038ea:	56                   	push   %si
801038eb:	53                   	push   %bx
801038ec:	83 ec 0c             	sub    $0xc,%sp
801038ef:	8b 6c 24             	mov    0x24(%si),%bp
801038f2:	20 8b 5c 24          	and    %cl,0x245c(%bp,%di)
801038f6:	24 81                	and    $0x81,%al
801038f8:	e3 00                	jcxz   801038fa <set_pages_perm+0x12>
801038fa:	f0 ff                	lock (bad) 
801038fc:	ff 8b 44 24          	decw   0x2444(%bp,%di)
80103900:	28 8d 74 03          	sub    %cl,0x374(%di)
80103904:	ff                   	(bad)  
80103905:	39 f3                	cmp    %si,%bx
80103907:	77 47                	ja     80103950 <set_pages_perm+0x68>
80103909:	8b 7c 24             	mov    0x24(%si),%di
8010390c:	2c 81                	sub    $0x81,%al
8010390e:	e7 ff                	out    %ax,$0xff
80103910:	0f 00 00             	sldt   (%bx,%si)
80103913:	eb 1c                	jmp    80103931 <set_pages_perm+0x49>
80103915:	8d 76 00             	lea    0x0(%bp),%si
80103918:	8b 10                	mov    (%bx,%si),%dx
8010391a:	81 e2 00 f0          	and    $0xf000,%dx
8010391e:	ff                   	(bad)  
8010391f:	ff 09                	decw   (%bx,%di)
80103921:	fa                   	cli    
80103922:	83 f2 04             	xor    $0x4,%dx
80103925:	89 10                	mov    %dx,(%bx,%si)
80103927:	81 c3 00 10          	add    $0x1000,%bx
8010392b:	00 00                	add    %al,(%bx,%si)
8010392d:	39 de                	cmp    %bx,%si
8010392f:	72 1f                	jb     80103950 <set_pages_perm+0x68>
80103931:	31 c9                	xor    %cx,%cx
80103933:	89 da                	mov    %bx,%dx
80103935:	89 e8                	mov    %bp,%ax
80103937:	e8 d8 fc             	call   80103612 <strlcpy+0x32>
8010393a:	ff                   	(bad)  
8010393b:	ff 85 c0 75          	incw   0x75c0(%di)
8010393f:	d8 b8 ff ff          	fdivrs -0x1(%bx,%si)
80103943:	ff                   	(bad)  
80103944:	ff 83 c4 0c          	incw   0xcc4(%bp,%di)
80103948:	5b                   	pop    %bx
80103949:	5e                   	pop    %si
8010394a:	5f                   	pop    %di
8010394b:	5d                   	pop    %bp
8010394c:	c3                   	ret    
8010394d:	8d 76 00             	lea    0x0(%bp),%si
80103950:	29 de                	sub    %bx,%si
80103952:	8d 86 ff 0f          	lea    0xfff(%bp),%ax
80103956:	00 00                	add    %al,(%bx,%si)
80103958:	83 c4 0c             	add    $0xc,%sp
8010395b:	5b                   	pop    %bx
8010395c:	5e                   	pop    %si
8010395d:	5f                   	pop    %di
8010395e:	5d                   	pop    %bp
8010395f:	c3                   	ret    

80103960 <invalidate_pages>:
80103960:	57                   	push   %di
80103961:	56                   	push   %si
80103962:	53                   	push   %bx
80103963:	8b 7c 24             	mov    0x24(%si),%di
80103966:	10 8b 5c 24          	adc    %cl,0x245c(%bp,%di)
8010396a:	14 81                	adc    $0x81,%al
8010396c:	e3 00                	jcxz   8010396e <invalidate_pages+0xe>
8010396e:	f0 ff                	lock (bad) 
80103970:	ff 8b 44 24          	decw   0x2444(%bp,%di)
80103974:	18 8d 74 03          	sbb    %cl,0x374(%di)
80103978:	ff                   	(bad)  
80103979:	39 f3                	cmp    %si,%bx
8010397b:	77 22                	ja     8010399f <invalidate_pages+0x3f>
8010397d:	8d 76 00             	lea    0x0(%bp),%si
80103980:	31 c9                	xor    %cx,%cx
80103982:	89 da                	mov    %bx,%dx
80103984:	89 f8                	mov    %di,%ax
80103986:	e8 89 fc             	call   80103612 <strlcpy+0x32>
80103989:	ff                   	(bad)  
8010398a:	ff 85 c0 74          	incw   0x74c0(%di)
8010398e:	06                   	push   %es
8010398f:	81 20 00 f0          	andw   $0xf000,(%bx,%si)
80103993:	ff                   	(bad)  
80103994:	ff 81 c3 00          	incw   0xc3(%bx,%di)
80103998:	10 00                	adc    %al,(%bx,%si)
8010399a:	00 39                	add    %bh,(%bx,%di)
8010399c:	de 73 e1             	fidiv  -0x1f(%bp,%di)
8010399f:	29 de                	sub    %bx,%si
801039a1:	8d 86 ff 0f          	lea    0xfff(%bp),%ax
801039a5:	00 00                	add    %al,(%bx,%si)
801039a7:	5b                   	pop    %bx
801039a8:	5e                   	pop    %si
801039a9:	5f                   	pop    %di
801039aa:	c3                   	ret    
801039ab:	90                   	nop

801039ac <switch_pgindex>:
801039ac:	83 ec 10             	sub    $0x10,%sp
801039af:	8b 44 24             	mov    0x24(%si),%ax
801039b2:	14 89                	adc    $0x89,%al
801039b4:	44                   	inc    %sp
801039b5:	24 0c                	and    $0xc,%al
801039b7:	8b 44 24             	mov    0x24(%si),%ax
801039ba:	0c 0f                	or     $0xf,%al
801039bc:	22 d8                	and    %al,%bl
801039be:	b8 01 00             	mov    $0x1,%ax
801039c1:	00 00                	add    %al,(%bx,%si)
801039c3:	83 c4 10             	add    $0x10,%sp
801039c6:	c3                   	ret    
801039c7:	90                   	nop

801039c8 <get_pgindex>:
801039c8:	0f 20 d8             	mov    %cr3,%eax
801039cb:	c3                   	ret    

801039cc <uva2kva>:
801039cc:	83 ec 0c             	sub    $0xc,%sp
801039cf:	31 c9                	xor    %cx,%cx
801039d1:	8b 54 24             	mov    0x24(%si),%dx
801039d4:	14 8b                	adc    $0x8b,%al
801039d6:	44                   	inc    %sp
801039d7:	24 10                	and    $0x10,%al
801039d9:	e8 36 fc             	call   80103612 <strlcpy+0x32>
801039dc:	ff                   	(bad)  
801039dd:	ff 25                	jmp    *(%di)
801039df:	00 f0                	add    %dh,%al
801039e1:	ff                   	(bad)  
801039e2:	ff 74 1b             	pushw  0x1b(%si)
801039e5:	89 c2                	mov    %ax,%dx
801039e7:	8b 44 24             	mov    0x24(%si),%ax
801039ea:	14 25                	adc    $0x25,%al
801039ec:	ff 0f                	decw   (%bx)
801039ee:	00 00                	add    %al,(%bx,%si)
801039f0:	09 d0                	or     %dx,%ax
801039f2:	78 05                	js     801039f9 <uva2kva+0x2d>
801039f4:	05 00 00             	add    $0x0,%ax
801039f7:	00 80 83 c4          	add    %al,-0x3b7d(%bx,%si)
801039fb:	0c c3                	or     $0xc3,%al
801039fd:	8d 76 00             	lea    0x0(%bp),%si
80103a00:	31 c0                	xor    %ax,%ax
80103a02:	eb f5                	jmp    801039f9 <uva2kva+0x2d>

80103a04 <idt_init>:
80103a04:	55                   	push   %bp
80103a05:	57                   	push   %di
80103a06:	56                   	push   %si
80103a07:	53                   	push   %bx
80103a08:	e8 7b 1d             	call   80105786 <__umoddi3+0x13a>
80103a0b:	00 00                	add    %al,(%bx,%si)
80103a0d:	81 c1 b3 78          	add    $0x78b3,%cx
80103a11:	00 00                	add    %al,(%bx,%si)
80103a13:	31 c0                	xor    %ax,%ax
80103a15:	c7 c6 ec 94          	mov    $0x94ec,%si
80103a19:	10 80 8d 2d          	adc    %al,0x2d8d(%bx,%si)
80103a1d:	00 2f                	add    %ch,(%bx)
80103a1f:	00 00                	add    %al,(%bx,%si)
80103a21:	8d b9 00 2f          	lea    0x2f00(%bx,%di),%di
80103a25:	00 00                	add    %al,(%bx,%si)
80103a27:	90                   	nop
80103a28:	8b 14                	mov    (%si),%dx
80103a2a:	86 66 89             	xchg   %ah,-0x77(%bp)
80103a2d:	14 c7                	adc    $0xc7,%al
80103a2f:	8d 9c c1 00          	lea    0xc1(%si),%bx
80103a33:	2f                   	das    
80103a34:	00 00                	add    %al,(%bx,%si)
80103a36:	66 c7 43 02 08 00 c6 	movl   $0x84c60008,0x2(%bp,%di)
80103a3d:	84 
80103a3e:	c1 04 2f             	rolw   $0x2f,(%si)
80103a41:	00 00                	add    %al,(%bx,%si)
80103a43:	00 c6                	add    %al,%dh
80103a45:	84 c1                	test   %al,%cl
80103a47:	05 2f 00             	add    $0x2f,%ax
80103a4a:	00 8e c1 ea          	add    %cl,-0x153f(%bp)
80103a4e:	10 66 89             	adc    %ah,-0x77(%bp)
80103a51:	53                   	push   %bx
80103a52:	06                   	push   %es
80103a53:	40                   	inc    %ax
80103a54:	3d 00 01             	cmp    $0x100,%ax
80103a57:	00 00                	add    %al,(%bx,%si)
80103a59:	75 cd                	jne    80103a28 <idt_init+0x24>
80103a5b:	8b 86 00 02          	mov    0x200(%bp),%ax
80103a5f:	00 00                	add    %al,(%bx,%si)
80103a61:	66 89 84 0d 00       	mov    %eax,0xd(%si)
80103a66:	04 00                	add    $0x0,%al
80103a68:	00 66 c7             	add    %ah,-0x39(%bp)
80103a6b:	84 0d                	test   %cl,(%di)
80103a6d:	02 04                	add    (%si),%al
80103a6f:	00 00                	add    %al,(%bx,%si)
80103a71:	08 00                	or     %al,(%bx,%si)
80103a73:	c6 81 04 33 00       	movb   $0x0,0x3304(%bx,%di)
80103a78:	00 00                	add    %al,(%bx,%si)
80103a7a:	c6 81 05 33 00       	movb   $0x0,0x3305(%bx,%di)
80103a7f:	00 ef                	add    %ch,%bh
80103a81:	c1 e8 10             	shr    $0x10,%ax
80103a84:	66 89 84 0d 06       	mov    %eax,0x60d(%si)
80103a89:	04 00                	add    $0x0,%al
80103a8b:	00 5b 5e             	add    %bl,0x5e(%bp,%di)
80103a8e:	5f                   	pop    %di
80103a8f:	5d                   	pop    %bp
80103a90:	c3                   	ret    
80103a91:	8d 76 00             	lea    0x0(%bp),%si

80103a94 <trap>:
80103a94:	56                   	push   %si
80103a95:	53                   	push   %bx
80103a96:	51                   	push   %cx
80103a97:	e8 f0 1c             	call   8010578a <__text_end_kern+0x2>
80103a9a:	00 00                	add    %al,(%bx,%si)
80103a9c:	81 c3 24 78          	add    $0x7824,%bx
80103aa0:	00 00                	add    %al,(%bx,%si)
80103aa2:	8b 74 24             	mov    0x24(%si),%si
80103aa5:	10 8b 46 30          	adc    %cl,0x3046(%bp,%di)
80103aa9:	3d 80 00             	cmp    $0x80,%ax
80103aac:	00 00                	add    %al,(%bx,%si)
80103aae:	74 18                	je     80103ac8 <trap+0x34>
80103ab0:	83 e8 20             	sub    $0x20,%ax
80103ab3:	83 f8 1f             	cmp    $0x1f,%ax
80103ab6:	77 32                	ja     80103aea <trap+0x56>
80103ab8:	83 ec 0c             	sub    $0xc,%sp
80103abb:	50                   	push   %ax
80103abc:	e8 57 1a             	call   80105516 <handle_syscall+0x56>
80103abf:	00 00                	add    %al,(%bx,%si)
80103ac1:	83 c4 10             	add    $0x10,%sp
80103ac4:	58                   	pop    %ax
80103ac5:	5b                   	pop    %bx
80103ac6:	5e                   	pop    %si
80103ac7:	c3                   	ret    
80103ac8:	52                   	push   %dx
80103ac9:	ff 76 08             	pushw  0x8(%bp)
80103acc:	ff 36 ff 76          	pushw  0x76ff
80103ad0:	04 ff                	add    $0xff,%al
80103ad2:	76 14                	jbe    80103ae8 <trap+0x54>
80103ad4:	ff 76 18             	pushw  0x18(%bp)
80103ad7:	ff 76 10             	pushw  0x10(%bp)
80103ada:	ff 76 1c             	pushw  0x1c(%bp)
80103add:	e8 de 19             	call   801054be <set_cr_mmu+0x2c>
80103ae0:	00 00                	add    %al,(%bx,%si)
80103ae2:	89 46 1c             	mov    %ax,0x1c(%bp)
80103ae5:	83 c4 20             	add    $0x20,%sp
80103ae8:	eb da                	jmp    80103ac4 <trap+0x30>
80103aea:	83 ec 0c             	sub    $0xc,%sp
80103aed:	8d 83 9a ae          	lea    -0x5166(%bp,%di),%ax
80103af1:	ff                   	(bad)  
80103af2:	ff 50 e8             	call   *-0x18(%bx,%si)
80103af5:	d3                   	(bad)  
80103af6:	f7 ff                	idiv   %di
80103af8:	ff 8d 76 00          	decw   0x76(%di)

80103afc <trap_init>:
80103afc:	53                   	push   %bx
80103afd:	83 ec 10             	sub    $0x10,%sp
80103b00:	e8 87 1c             	call   8010578a <__text_end_kern+0x2>
80103b03:	00 00                	add    %al,(%bx,%si)
80103b05:	81 c3 bb 77          	add    $0x77bb,%bx
80103b09:	00 00                	add    %al,(%bx,%si)
80103b0b:	e8 f4 fe             	call   80103a02 <uva2kva+0x36>
80103b0e:	ff                   	(bad)  
80103b0f:	ff 66 c7             	jmp    *-0x39(%bp)
80103b12:	44                   	inc    %sp
80103b13:	24 0a                	and    $0xa,%al
80103b15:	ff 07                	incw   (%bx)
80103b17:	8d 83 00 2f          	lea    0x2f00(%bp,%di),%ax
80103b1b:	00 00                	add    %al,(%bx,%si)
80103b1d:	66 89 44 24          	mov    %eax,0x24(%si)
80103b21:	0c c1                	or     $0xc1,%al
80103b23:	e8 10 66             	call   8010a136 <entrypgdir+0x136>
80103b26:	89 44 24             	mov    %ax,0x24(%si)
80103b29:	0e                   	push   %cs
80103b2a:	8d 44 24             	lea    0x24(%si),%ax
80103b2d:	0a 0f                	or     (%bx),%cl
80103b2f:	01 18                	add    %bx,(%bx,%si)
80103b31:	83 c4 10             	add    $0x10,%sp
80103b34:	5b                   	pop    %bx
80103b35:	c3                   	ret    
80103b36:	66 90                	xchg   %eax,%eax

80103b38 <picenable>:
80103b38:	e8 5b 1c             	call   80105796 <__x86.get_pc_thunk.ax+0x2>
80103b3b:	00 00                	add    %al,(%bx,%si)
80103b3d:	81 c2 83 77          	add    $0x7783,%dx
80103b41:	00 00                	add    %al,(%bx,%si)
80103b43:	b8 fe ff             	mov    $0xfffe,%ax
80103b46:	ff                   	(bad)  
80103b47:	ff 8b 4c 24          	decw   0x244c(%bp,%di)
80103b4b:	04 d3                	add    $0xd3,%al
80103b4d:	c0 66 23 82          	shlb   $0x82,0x23(%bp)
80103b51:	40                   	inc    %ax
80103b52:	fd                   	std    
80103b53:	ff                   	(bad)  
80103b54:	ff 66 89             	jmp    *-0x77(%bp)
80103b57:	82                   	(bad)  
80103b58:	40                   	inc    %ax
80103b59:	fd                   	std    
80103b5a:	ff                   	(bad)  
80103b5b:	ff                   	(bad)  
80103b5c:	ba 21 00             	mov    $0x21,%dx
80103b5f:	00 00                	add    %al,(%bx,%si)
80103b61:	ee                   	out    %al,(%dx)
80103b62:	66 c1 e8 08          	shr    $0x8,%eax
80103b66:	ba a1 00             	mov    $0xa1,%dx
80103b69:	00 00                	add    %al,(%bx,%si)
80103b6b:	ee                   	out    %al,(%dx)
80103b6c:	c3                   	ret    
80103b6d:	8d 76 00             	lea    0x0(%bp),%si

80103b70 <picinit>:
80103b70:	55                   	push   %bp
80103b71:	57                   	push   %di
80103b72:	56                   	push   %si
80103b73:	53                   	push   %bx
80103b74:	e8 23 1c             	call   8010579a <__x86.get_pc_thunk.dx+0x2>
80103b77:	00 00                	add    %al,(%bx,%si)
80103b79:	81 c5 47 77          	add    $0x7747,%bp
80103b7d:	00 00                	add    %al,(%bx,%si)
80103b7f:	b0 ff                	mov    $0xff,%al
80103b81:	bb 21 00             	mov    $0x21,%bx
80103b84:	00 00                	add    %al,(%bx,%si)
80103b86:	89 da                	mov    %bx,%dx
80103b88:	ee                   	out    %al,(%dx)
80103b89:	b9 a1 00             	mov    $0xa1,%cx
80103b8c:	00 00                	add    %al,(%bx,%si)
80103b8e:	89 ca                	mov    %cx,%dx
80103b90:	ee                   	out    %al,(%dx)
80103b91:	be 20 00             	mov    $0x20,%si
80103b94:	00 00                	add    %al,(%bx,%si)
80103b96:	b0 11                	mov    $0x11,%al
80103b98:	89 f2                	mov    %si,%dx
80103b9a:	ee                   	out    %al,(%dx)
80103b9b:	b0 20                	mov    $0x20,%al
80103b9d:	89 da                	mov    %bx,%dx
80103b9f:	ee                   	out    %al,(%dx)
80103ba0:	b0 04                	mov    $0x4,%al
80103ba2:	ee                   	out    %al,(%dx)
80103ba3:	bf 03 00             	mov    $0x3,%di
80103ba6:	00 00                	add    %al,(%bx,%si)
80103ba8:	89 f8                	mov    %di,%ax
80103baa:	ee                   	out    %al,(%dx)
80103bab:	bb a0 00             	mov    $0xa0,%bx
80103bae:	00 00                	add    %al,(%bx,%si)
80103bb0:	b0 11                	mov    $0x11,%al
80103bb2:	89 da                	mov    %bx,%dx
80103bb4:	ee                   	out    %al,(%dx)
80103bb5:	b0 28                	mov    $0x28,%al
80103bb7:	89 ca                	mov    %cx,%dx
80103bb9:	ee                   	out    %al,(%dx)
80103bba:	b0 02                	mov    $0x2,%al
80103bbc:	ee                   	out    %al,(%dx)
80103bbd:	89 f8                	mov    %di,%ax
80103bbf:	ee                   	out    %al,(%dx)
80103bc0:	bf 68 00             	mov    $0x68,%di
80103bc3:	00 00                	add    %al,(%bx,%si)
80103bc5:	89 f8                	mov    %di,%ax
80103bc7:	89 f2                	mov    %si,%dx
80103bc9:	ee                   	out    %al,(%dx)
80103bca:	b1 0a                	mov    $0xa,%cl
80103bcc:	88 c8                	mov    %cl,%al
80103bce:	ee                   	out    %al,(%dx)
80103bcf:	89 f8                	mov    %di,%ax
80103bd1:	89 da                	mov    %bx,%dx
80103bd3:	ee                   	out    %al,(%dx)
80103bd4:	88 c8                	mov    %cl,%al
80103bd6:	ee                   	out    %al,(%dx)
80103bd7:	66 8b 85 40 fd       	mov    -0x2c0(%di),%eax
80103bdc:	ff                   	(bad)  
80103bdd:	ff 66 83             	jmp    *-0x7d(%bp)
80103be0:	f8                   	clc    
80103be1:	ff 74 10             	pushw  0x10(%si)
80103be4:	ba 21 00             	mov    $0x21,%dx
80103be7:	00 00                	add    %al,(%bx,%si)
80103be9:	ee                   	out    %al,(%dx)
80103bea:	66 c1 e8 08          	shr    $0x8,%eax
80103bee:	ba a1 00             	mov    $0xa1,%dx
80103bf1:	00 00                	add    %al,(%bx,%si)
80103bf3:	ee                   	out    %al,(%dx)
80103bf4:	5b                   	pop    %bx
80103bf5:	5e                   	pop    %si
80103bf6:	5f                   	pop    %di
80103bf7:	5d                   	pop    %bp
80103bf8:	c3                   	ret    
80103bf9:	66 90                	xchg   %eax,%eax
80103bfb:	90                   	nop

80103bfc <ioapic_init>:
80103bfc:	57                   	push   %di
80103bfd:	56                   	push   %si
80103bfe:	53                   	push   %bx
80103bff:	e8 88 1b             	call   8010578a <__text_end_kern+0x2>
80103c02:	00 00                	add    %al,(%bx,%si)
80103c04:	81 c3 bc 76          	add    $0x76bc,%bx
80103c08:	00 00                	add    %al,(%bx,%si)
80103c0a:	c7 c0 24 70          	mov    $0x7024,%ax
80103c0e:	11 80 8b 00          	adc    %ax,0x8b(%bx,%si)
80103c12:	85 c0                	test   %ax,%ax
80103c14:	0f 84 87 00          	je     80103c9f <ioapic_init+0xa3>
80103c18:	00 00                	add    %al,(%bx,%si)
80103c1a:	c7 c6 08 70          	mov    $0x7008,%si
80103c1e:	11 80 c7 06          	adc    %ax,0x6c7(%bx,%si)
80103c22:	00 00                	add    %al,(%bx,%si)
80103c24:	c0 fe c7             	sar    $0xc7,%dh
80103c27:	05 00 00             	add    $0x0,%ax
80103c2a:	c0 fe 01             	sar    $0x1,%dh
80103c2d:	00 00                	add    %al,(%bx,%si)
80103c2f:	00 8b 3d 10          	add    %cl,0x103d(%bp,%di)
80103c33:	00 c0                	add    %al,%al
80103c35:	fe c1                	inc    %cl
80103c37:	ef                   	out    %ax,(%dx)
80103c38:	10 89 f8 0f          	adc    %cl,0xff8(%bx,%di)
80103c3c:	b6 f8                	mov    $0xf8,%dh
80103c3e:	c7 05 00 00          	movw   $0x0,(%di)
80103c42:	c0 fe 00             	sar    $0x0,%dh
80103c45:	00 00                	add    %al,(%bx,%si)
80103c47:	00 a1 10 00          	add    %ah,0x10(%bx,%di)
80103c4b:	c0 fe c1             	sar    $0xc1,%dh
80103c4e:	e8 18 c7             	call   80100369 <console_putc+0x75>
80103c51:	c2 20 70             	ret    $0x7020
80103c54:	11 80 0f b6          	adc    %ax,-0x49f1(%bx,%si)
80103c58:	12 39                	adc    (%bx,%di),%bh
80103c5a:	d0                   	(bad)  
80103c5b:	74 4b                	je     80103ca8 <ioapic_init+0xac>
80103c5d:	83 ec 0c             	sub    $0xc,%sp
80103c60:	8d 83 48 ac          	lea    -0x53b8(%bp,%di),%ax
80103c64:	ff                   	(bad)  
80103c65:	ff 50 e8             	call   *-0x18(%bx,%si)
80103c68:	50                   	push   %ax
80103c69:	d7                   	xlat   %ds:(%bx)
80103c6a:	ff                   	(bad)  
80103c6b:	ff 8b 0e 83          	decw   -0x7cf2(%bp,%di)
80103c6f:	c4 10                	les    (%bx,%si),%dx
80103c71:	83 c7 21             	add    $0x21,%di
80103c74:	ba 11 00             	mov    $0x11,%dx
80103c77:	00 00                	add    %al,(%bx,%si)
80103c79:	b8 20 00             	mov    $0x20,%ax
80103c7c:	00 00                	add    %al,(%bx,%si)
80103c7e:	66 90                	xchg   %eax,%eax
80103c80:	89 c3                	mov    %ax,%bx
80103c82:	81 cb 00 00          	or     $0x0,%bx
80103c86:	01 00                	add    %ax,(%bx,%si)
80103c88:	8d 72 ff             	lea    -0x1(%bp,%si),%si
80103c8b:	89 31                	mov    %si,(%bx,%di)
80103c8d:	89 59 10             	mov    %bx,0x10(%bx,%di)
80103c90:	89 11                	mov    %dx,(%bx,%di)
80103c92:	c7 41 10 00 00       	movw   $0x0,0x10(%bx,%di)
80103c97:	00 00                	add    %al,(%bx,%si)
80103c99:	40                   	inc    %ax
80103c9a:	83 c2 02             	add    $0x2,%dx
80103c9d:	39 f8                	cmp    %di,%ax
80103c9f:	75 df                	jne    80103c80 <ioapic_init+0x84>
80103ca1:	5b                   	pop    %bx
80103ca2:	5e                   	pop    %si
80103ca3:	5f                   	pop    %di
80103ca4:	c3                   	ret    
80103ca5:	8d 76 00             	lea    0x0(%bp),%si
80103ca8:	b9 00 00             	mov    $0x0,%cx
80103cab:	c0 fe eb             	sar    $0xeb,%dh
80103cae:	c2                   	.byte 0xc2
80103caf:	90                   	nop

80103cb0 <ioapicenable>:
80103cb0:	53                   	push   %bx
80103cb1:	e8 d2 1a             	call   80105786 <__umoddi3+0x13a>
80103cb4:	00 00                	add    %al,(%bx,%si)
80103cb6:	81 c1 0a 76          	add    $0x760a,%cx
80103cba:	00 00                	add    %al,(%bx,%si)
80103cbc:	8b 44 24             	mov    0x24(%si),%ax
80103cbf:	08 c7                	or     %al,%bh
80103cc1:	c2 24 70             	ret    $0x7024
80103cc4:	11 80 8b 12          	adc    %ax,0x128b(%bx,%si)
80103cc8:	85 d2                	test   %dx,%dx
80103cca:	74 21                	je     80103ced <ioapicenable+0x3d>
80103ccc:	8d 58 20             	lea    0x20(%bx,%si),%bx
80103ccf:	8d 54 00             	lea    0x0(%si),%dx
80103cd2:	10 c7                	adc    %al,%bh
80103cd4:	c0 08 70             	rorb   $0x70,(%bx,%si)
80103cd7:	11 80 8b 00          	adc    %ax,0x8b(%bx,%si)
80103cdb:	89 10                	mov    %dx,(%bx,%si)
80103cdd:	89 58 10             	mov    %bx,0x10(%bx,%si)
80103ce0:	8b 4c 24             	mov    0x24(%si),%cx
80103ce3:	0c c1                	or     $0xc1,%al
80103ce5:	e1 18                	loope  80103cff <lapic_init+0xf>
80103ce7:	42                   	inc    %dx
80103ce8:	89 10                	mov    %dx,(%bx,%si)
80103cea:	89 48 10             	mov    %cx,0x10(%bx,%si)
80103ced:	5b                   	pop    %bx
80103cee:	c3                   	ret    
80103cef:	90                   	nop

80103cf0 <lapic_init>:
80103cf0:	e8 9f 1a             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80103cf3:	00 00                	add    %al,(%bx,%si)
80103cf5:	05 cb 75             	add    $0x75cb,%ax
80103cf8:	00 00                	add    %al,(%bx,%si)
80103cfa:	c7 c0 0c 70          	mov    $0x700c,%ax
80103cfe:	11 80 8b 00          	adc    %ax,0x8b(%bx,%si)
80103d02:	85 c0                	test   %ax,%ax
80103d04:	0f 84 c2 00          	je     80103dca <lapic_init+0xda>
80103d08:	00 00                	add    %al,(%bx,%si)
80103d0a:	c7 80 f0 00 00 00    	movw   $0x0,0xf0(%bx,%si)
80103d10:	3f                   	aas    
80103d11:	01 00                	add    %ax,(%bx,%si)
80103d13:	00 8b 50 20          	add    %cl,0x2050(%bp,%di)
80103d17:	c7 80 e0 03 00 00    	movw   $0x0,0x3e0(%bx,%si)
80103d1d:	0b 00                	or     (%bx,%si),%ax
80103d1f:	00 00                	add    %al,(%bx,%si)
80103d21:	8b 50 20             	mov    0x20(%bx,%si),%dx
80103d24:	c7 80 20 03 00 00    	movw   $0x0,0x320(%bx,%si)
80103d2a:	20 00                	and    %al,(%bx,%si)
80103d2c:	02 00                	add    (%bx,%si),%al
80103d2e:	8b 50 20             	mov    0x20(%bx,%si),%dx
80103d31:	c7 80 80 03 00 00    	movw   $0x0,0x380(%bx,%si)
80103d37:	80 96 98 00 8b       	adcb   $0x8b,0x98(%bp)
80103d3c:	50                   	push   %ax
80103d3d:	20 c7                	and    %al,%bh
80103d3f:	80 50 03 00          	adcb   $0x0,0x3(%bx,%si)
80103d43:	00 00                	add    %al,(%bx,%si)
80103d45:	00 01                	add    %al,(%bx,%di)
80103d47:	00 8b 50 20          	add    %cl,0x2050(%bp,%di)
80103d4b:	c7 80 60 03 00 00    	movw   $0x0,0x360(%bx,%si)
80103d51:	00 00                	add    %al,(%bx,%si)
80103d53:	01 00                	add    %ax,(%bx,%si)
80103d55:	8b 50 20             	mov    0x20(%bx,%si),%dx
80103d58:	8b 50 30             	mov    0x30(%bx,%si),%dx
80103d5b:	c1 ea 10             	shr    $0x10,%dx
80103d5e:	80 fa 03             	cmp    $0x3,%dl
80103d61:	77 6d                	ja     80103dd0 <lapic_init+0xe0>
80103d63:	c7 80 70 03 00 00    	movw   $0x0,0x370(%bx,%si)
80103d69:	33 00                	xor    (%bx,%si),%ax
80103d6b:	00 00                	add    %al,(%bx,%si)
80103d6d:	8b 50 20             	mov    0x20(%bx,%si),%dx
80103d70:	c7 80 80 02 00 00    	movw   $0x0,0x280(%bx,%si)
80103d76:	00 00                	add    %al,(%bx,%si)
80103d78:	00 00                	add    %al,(%bx,%si)
80103d7a:	8b 50 20             	mov    0x20(%bx,%si),%dx
80103d7d:	c7 80 80 02 00 00    	movw   $0x0,0x280(%bx,%si)
80103d83:	00 00                	add    %al,(%bx,%si)
80103d85:	00 00                	add    %al,(%bx,%si)
80103d87:	8b 50 20             	mov    0x20(%bx,%si),%dx
80103d8a:	c7 80 b0 00 00 00    	movw   $0x0,0xb0(%bx,%si)
80103d90:	00 00                	add    %al,(%bx,%si)
80103d92:	00 00                	add    %al,(%bx,%si)
80103d94:	8b 50 20             	mov    0x20(%bx,%si),%dx
80103d97:	c7 80 10 03 00 00    	movw   $0x0,0x310(%bx,%si)
80103d9d:	00 00                	add    %al,(%bx,%si)
80103d9f:	00 00                	add    %al,(%bx,%si)
80103da1:	8b 50 20             	mov    0x20(%bx,%si),%dx
80103da4:	c7 80 00 03 00 00    	movw   $0x0,0x300(%bx,%si)
80103daa:	00 85 08 00          	add    %al,0x8(%di)
80103dae:	8b 50 20             	mov    0x20(%bx,%si),%dx
80103db1:	8d 76 00             	lea    0x0(%bp),%si
80103db4:	8b 90 00 03          	mov    0x300(%bx,%si),%dx
80103db8:	00 00                	add    %al,(%bx,%si)
80103dba:	80 e6 10             	and    $0x10,%dh
80103dbd:	75 f5                	jne    80103db4 <lapic_init+0xc4>
80103dbf:	c7 80 80 00 00 00    	movw   $0x0,0x80(%bx,%si)
80103dc5:	00 00                	add    %al,(%bx,%si)
80103dc7:	00 00                	add    %al,(%bx,%si)
80103dc9:	8b 40 20             	mov    0x20(%bx,%si),%ax
80103dcc:	c3                   	ret    
80103dcd:	8d 76 00             	lea    0x0(%bp),%si
80103dd0:	c7 80 40 03 00 00    	movw   $0x0,0x340(%bx,%si)
80103dd6:	00 00                	add    %al,(%bx,%si)
80103dd8:	01 00                	add    %ax,(%bx,%si)
80103dda:	8b 50 20             	mov    0x20(%bx,%si),%dx
80103ddd:	eb 84                	jmp    80103d63 <lapic_init+0x73>
80103ddf:	90                   	nop

80103de0 <cpunum>:
80103de0:	57                   	push   %di
80103de1:	56                   	push   %si
80103de2:	53                   	push   %bx
80103de3:	e8 a4 19             	call   8010578a <__text_end_kern+0x2>
80103de6:	00 00                	add    %al,(%bx,%si)
80103de8:	81 c3 d8 74          	add    $0x74d8,%bx
80103dec:	00 00                	add    %al,(%bx,%si)
80103dee:	9c                   	pushf  
80103def:	58                   	pop    %ax
80103df0:	f6 c4 02             	test   $0x2,%ah
80103df3:	74 13                	je     80103e08 <cpunum+0x28>
80103df5:	8b 83 00 37          	mov    0x3700(%bp,%di),%ax
80103df9:	00 00                	add    %al,(%bx,%si)
80103dfb:	8d 50 01             	lea    0x1(%bx,%si),%dx
80103dfe:	89 93 00 37          	mov    %dx,0x3700(%bp,%di)
80103e02:	00 00                	add    %al,(%bx,%si)
80103e04:	85 c0                	test   %ax,%ax
80103e06:	74 4a                	je     80103e52 <cpunum+0x72>
80103e08:	c7 c0 0c 70          	mov    $0x700c,%ax
80103e0c:	11 80 8b 00          	adc    %ax,0x8b(%bx,%si)
80103e10:	85 c0                	test   %ax,%ax
80103e12:	74 60                	je     80103e74 <cpunum+0x94>
80103e14:	8b 70 20             	mov    0x20(%bx,%si),%si
80103e17:	c1 ee 18             	shr    $0x18,%si
80103e1a:	c7 c0 20 76          	mov    $0x7620,%ax
80103e1e:	11 80 8b 38          	adc    %ax,0x388b(%bx,%si)
80103e22:	85 ff                	test   %di,%di
80103e24:	7e 54                	jle    80103e7a <cpunum+0x9a>
80103e26:	c7 c0 40 70          	mov    $0x7040,%ax
80103e2a:	11 80 0f b6          	adc    %ax,-0x49f1(%bx,%si)
80103e2e:	10 39                	adc    %bh,(%bx,%di)
80103e30:	d6                   	(bad)  
80103e31:	74 41                	je     80103e74 <cpunum+0x94>
80103e33:	8d 90 bc 00          	lea    0xbc(%bx,%si),%dx
80103e37:	00 00                	add    %al,(%bx,%si)
80103e39:	31 c0                	xor    %ax,%ax
80103e3b:	90                   	nop
80103e3c:	40                   	inc    %ax
80103e3d:	39 f8                	cmp    %di,%ax
80103e3f:	74 39                	je     80103e7a <cpunum+0x9a>
80103e41:	0f b6 0a             	movzbw (%bp,%si),%cx
80103e44:	81 c2 bc 00          	add    $0xbc,%dx
80103e48:	00 00                	add    %al,(%bx,%si)
80103e4a:	39 ce                	cmp    %cx,%si
80103e4c:	75 ee                	jne    80103e3c <cpunum+0x5c>
80103e4e:	5b                   	pop    %bx
80103e4f:	5e                   	pop    %si
80103e50:	5f                   	pop    %di
80103e51:	c3                   	ret    
80103e52:	83 ec 08             	sub    $0x8,%sp
80103e55:	ff 74 24             	pushw  0x24(%si)
80103e58:	14 8d                	adc    $0x8d,%al
80103e5a:	83 7c ac ff          	cmpw   $0xffff,-0x54(%si)
80103e5e:	ff 50 e8             	call   *-0x18(%bx,%si)
80103e61:	57                   	push   %di
80103e62:	d5 ff                	aad    $0xff
80103e64:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
80103e68:	c7 c0 0c 70          	mov    $0x700c,%ax
80103e6c:	11 80 8b 00          	adc    %ax,0x8b(%bx,%si)
80103e70:	85 c0                	test   %ax,%ax
80103e72:	75 a0                	jne    80103e14 <cpunum+0x34>
80103e74:	31 c0                	xor    %ax,%ax
80103e76:	5b                   	pop    %bx
80103e77:	5e                   	pop    %si
80103e78:	5f                   	pop    %di
80103e79:	c3                   	ret    
80103e7a:	83 ec 0c             	sub    $0xc,%sp
80103e7d:	8d 83 b8 ae          	lea    -0x5148(%bp,%di),%ax
80103e81:	ff                   	(bad)  
80103e82:	ff 50 e8             	call   *-0x18(%bx,%si)
80103e85:	43                   	inc    %bx
80103e86:	f4                   	hlt    
80103e87:	ff                   	(bad)  
80103e88:	ff 8d 76 00          	decw   0x76(%di)

80103e8c <lapiceoi>:
80103e8c:	e8 03 19             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80103e8f:	00 00                	add    %al,(%bx,%si)
80103e91:	05 2f 74             	add    $0x742f,%ax
80103e94:	00 00                	add    %al,(%bx,%si)
80103e96:	c7 c0 0c 70          	mov    $0x700c,%ax
80103e9a:	11 80 8b 00          	adc    %ax,0x8b(%bx,%si)
80103e9e:	85 c0                	test   %ax,%ax
80103ea0:	74 0d                	je     80103eaf <lapiceoi+0x23>
80103ea2:	c7 80 b0 00 00 00    	movw   $0x0,0xb0(%bx,%si)
80103ea8:	00 00                	add    %al,(%bx,%si)
80103eaa:	00 00                	add    %al,(%bx,%si)
80103eac:	8b 40 20             	mov    0x20(%bx,%si),%ax
80103eaf:	c3                   	ret    

80103eb0 <microdelay>:
80103eb0:	c3                   	ret    
80103eb1:	8d 76 00             	lea    0x0(%bp),%si

80103eb4 <lapicstartap>:
80103eb4:	56                   	push   %si
80103eb5:	53                   	push   %bx
80103eb6:	e8 d5 18             	call   8010578e <__x86.get_pc_thunk.bx+0x2>
80103eb9:	00 00                	add    %al,(%bx,%si)
80103ebb:	81 c6 05 74          	add    $0x7405,%si
80103ebf:	00 00                	add    %al,(%bx,%si)
80103ec1:	8b 5c 24             	mov    0x24(%si),%bx
80103ec4:	0c 8b                	or     $0x8b,%al
80103ec6:	4c                   	dec    %sp
80103ec7:	24 10                	and    $0x10,%al
80103ec9:	ba 70 00             	mov    $0x70,%dx
80103ecc:	00 00                	add    %al,(%bx,%si)
80103ece:	b0 0f                	mov    $0xf,%al
80103ed0:	ee                   	out    %al,(%dx)
80103ed1:	ba 71 00             	mov    $0x71,%dx
80103ed4:	00 00                	add    %al,(%bx,%si)
80103ed6:	b0 0a                	mov    $0xa,%al
80103ed8:	ee                   	out    %al,(%dx)
80103ed9:	66 c7 05 67 04 00 80 	movl   $0x80000467,(%di)
80103ee0:	00 00                	add    %al,(%bx,%si)
80103ee2:	89 c8                	mov    %cx,%ax
80103ee4:	c1 e8 04             	shr    $0x4,%ax
80103ee7:	66 a3 69 04          	mov    %eax,0x469
80103eeb:	00 80 c7 c0          	add    %al,-0x3f39(%bx,%si)
80103eef:	0c 70                	or     $0x70,%al
80103ef1:	11 80 8b 00          	adc    %ax,0x8b(%bx,%si)
80103ef5:	c1 e3 18             	shl    $0x18,%bx
80103ef8:	89 da                	mov    %bx,%dx
80103efa:	89 98 10 03          	mov    %bx,0x310(%bx,%si)
80103efe:	00 00                	add    %al,(%bx,%si)
80103f00:	8b 58 20             	mov    0x20(%bx,%si),%bx
80103f03:	c7 80 00 03 00 00    	movw   $0x0,0x300(%bx,%si)
80103f09:	00 c5                	add    %al,%ch
80103f0b:	00 00                	add    %al,(%bx,%si)
80103f0d:	8b 58 20             	mov    0x20(%bx,%si),%bx
80103f10:	c7 80 00 03 00 00    	movw   $0x0,0x300(%bx,%si)
80103f16:	00 85 00 00          	add    %al,0x0(%di)
80103f1a:	8b 58 20             	mov    0x20(%bx,%si),%bx
80103f1d:	89 90 10 03          	mov    %dx,0x310(%bx,%si)
80103f21:	00 00                	add    %al,(%bx,%si)
80103f23:	8b 58 20             	mov    0x20(%bx,%si),%bx
80103f26:	c1 e9 0c             	shr    $0xc,%cx
80103f29:	80 cd 06             	or     $0x6,%ch
80103f2c:	89 88 00 03          	mov    %cx,0x300(%bx,%si)
80103f30:	00 00                	add    %al,(%bx,%si)
80103f32:	8b 58 20             	mov    0x20(%bx,%si),%bx
80103f35:	89 90 10 03          	mov    %dx,0x310(%bx,%si)
80103f39:	00 00                	add    %al,(%bx,%si)
80103f3b:	8b 50 20             	mov    0x20(%bx,%si),%dx
80103f3e:	89 88 00 03          	mov    %cx,0x300(%bx,%si)
80103f42:	00 00                	add    %al,(%bx,%si)
80103f44:	8b 40 20             	mov    0x20(%bx,%si),%ax
80103f47:	5b                   	pop    %bx
80103f48:	5e                   	pop    %si
80103f49:	c3                   	ret    
80103f4a:	66 90                	xchg   %eax,%eax

80103f4c <mpsearch1>:
80103f4c:	55                   	push   %bp
80103f4d:	57                   	push   %di
80103f4e:	56                   	push   %si
80103f4f:	53                   	push   %bx
80103f50:	83 ec 1c             	sub    $0x1c,%sp
80103f53:	e8 34 18             	call   8010578a <__text_end_kern+0x2>
80103f56:	00 00                	add    %al,(%bx,%si)
80103f58:	81 c3 68 73          	add    $0x7368,%bx
80103f5c:	00 00                	add    %al,(%bx,%si)
80103f5e:	8d b8 00 00          	lea    0x0(%bx,%si),%di
80103f62:	00 80 8d 04          	add    %al,0x48d(%bx,%si)
80103f66:	17                   	pop    %ss
80103f67:	89 44 24             	mov    %ax,0x24(%si)
80103f6a:	0c 39                	or     $0x39,%al
80103f6c:	c7                   	(bad)  
80103f6d:	73 45                	jae    80103fb4 <mpsearch1+0x68>
80103f6f:	8d b3 c8 ae          	lea    -0x5138(%bp,%di),%si
80103f73:	ff                   	(bad)  
80103f74:	ff                   	(bad)  
80103f75:	eb 0c                	jmp    80103f83 <mpsearch1+0x37>
80103f77:	90                   	nop
80103f78:	8d 6f 10             	lea    0x10(%bx),%bp
80103f7b:	89 ef                	mov    %bp,%di
80103f7d:	39 6c 24             	cmp    %bp,0x24(%si)
80103f80:	0c 76                	or     $0x76,%al
80103f82:	31 50 6a             	xor    %dx,0x6a(%bx,%si)
80103f85:	04 56                	add    $0x56,%al
80103f87:	57                   	push   %di
80103f88:	e8 0b f6             	call   80103596 <memmove+0x5a>
80103f8b:	ff                   	(bad)  
80103f8c:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
80103f90:	85 c0                	test   %ax,%ax
80103f92:	75 e4                	jne    80103f78 <mpsearch1+0x2c>
80103f94:	89 fa                	mov    %di,%dx
80103f96:	8d 6f 10             	lea    0x10(%bx),%bp
80103f99:	8d 76 00             	lea    0x0(%bp),%si
80103f9c:	0f b6 0a             	movzbw (%bp,%si),%cx
80103f9f:	01 c8                	add    %cx,%ax
80103fa1:	42                   	inc    %dx
80103fa2:	39 d5                	cmp    %dx,%bp
80103fa4:	75 f6                	jne    80103f9c <mpsearch1+0x50>
80103fa6:	84 c0                	test   %al,%al
80103fa8:	75 d1                	jne    80103f7b <mpsearch1+0x2f>
80103faa:	89 f8                	mov    %di,%ax
80103fac:	83 c4 1c             	add    $0x1c,%sp
80103faf:	5b                   	pop    %bx
80103fb0:	5e                   	pop    %si
80103fb1:	5f                   	pop    %di
80103fb2:	5d                   	pop    %bp
80103fb3:	c3                   	ret    
80103fb4:	31 c0                	xor    %ax,%ax
80103fb6:	83 c4 1c             	add    $0x1c,%sp
80103fb9:	5b                   	pop    %bx
80103fba:	5e                   	pop    %si
80103fbb:	5f                   	pop    %di
80103fbc:	5d                   	pop    %bp
80103fbd:	c3                   	ret    
80103fbe:	66 90                	xchg   %eax,%eax

80103fc0 <mpinit>:
80103fc0:	55                   	push   %bp
80103fc1:	57                   	push   %di
80103fc2:	56                   	push   %si
80103fc3:	53                   	push   %bx
80103fc4:	83 ec 2c             	sub    $0x2c,%sp
80103fc7:	e8 c0 17             	call   8010578a <__text_end_kern+0x2>
80103fca:	00 00                	add    %al,(%bx,%si)
80103fcc:	81 c3 f4 72          	add    $0x72f4,%bx
80103fd0:	00 00                	add    %al,(%bx,%si)
80103fd2:	0f b6 05             	movzbw (%di),%ax
80103fd5:	0f 04                	(bad)  
80103fd7:	00 80 c1 e0          	add    %al,-0x1f3f(%bx,%si)
80103fdb:	08 0f                	or     %cl,(%bx)
80103fdd:	b6 15                	mov    $0x15,%dh
80103fdf:	0e                   	push   %cs
80103fe0:	04 00                	add    $0x0,%al
80103fe2:	80 09 d0             	orb    $0xd0,(%bx,%di)
80103fe5:	c1 e0 04             	shl    $0x4,%ax
80103fe8:	75 1b                	jne    80104005 <mpinit+0x45>
80103fea:	0f b6 05             	movzbw (%di),%ax
80103fed:	14 04                	adc    $0x4,%al
80103fef:	00 80 c1 e0          	add    %al,-0x1f3f(%bx,%si)
80103ff3:	08 0f                	or     %cl,(%bx)
80103ff5:	b6 15                	mov    $0x15,%dh
80103ff7:	13 04                	adc    (%si),%ax
80103ff9:	00 80 09 d0          	add    %al,-0x2ff7(%bx,%si)
80103ffd:	c1 e0 0a             	shl    $0xa,%ax
80104000:	2d 00 04             	sub    $0x400,%ax
80104003:	00 00                	add    %al,(%bx,%si)
80104005:	ba 00 04             	mov    $0x400,%dx
80104008:	00 00                	add    %al,(%bx,%si)
8010400a:	e8 3d ff             	call   80103f4a <lapicstartap+0x96>
8010400d:	ff                   	(bad)  
8010400e:	ff 89 44 24          	decw   0x2444(%bx,%di)
80104012:	18 85 c0 0f          	sbb    %al,0xfc0(%di)
80104016:	84 6d 01             	test   %ch,0x1(%di)
80104019:	00 00                	add    %al,(%bx,%si)
8010401b:	8b 44 24             	mov    0x24(%si),%ax
8010401e:	18 8b 70 04          	sbb    %cl,0x470(%bp,%di)
80104022:	85 f6                	test   %si,%si
80104024:	0f 84 ee 00          	je     80104116 <.L27+0x2e>
80104028:	00 00                	add    %al,(%bx,%si)
8010402a:	8d be 00 00          	lea    0x0(%bp),%di
8010402e:	00 80 52 6a          	add    %al,0x6a52(%bx,%si)
80104032:	04 8d                	add    $0x8d,%al
80104034:	83 cd ae             	or     $0xffae,%bp
80104037:	ff                   	(bad)  
80104038:	ff 50 57             	call   *0x57(%bx,%si)
8010403b:	e8 58 f5             	call   80103596 <memmove+0x5a>
8010403e:	ff                   	(bad)  
8010403f:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
80104043:	85 c0                	test   %ax,%ax
80104045:	0f 85 cd 00          	jne    80104116 <.L27+0x2e>
80104049:	00 00                	add    %al,(%bx,%si)
8010404b:	8a 96 06 00          	mov    0x6(%bp),%dl
8010404f:	00 80 80 fa          	add    %al,-0x580(%bx,%si)
80104053:	01 74 09             	add    %si,0x9(%si)
80104056:	80 fa 04             	cmp    $0x4,%dl
80104059:	0f 85 b9 00          	jne    80104116 <.L27+0x2e>
8010405d:	00 00                	add    %al,(%bx,%si)
8010405f:	0f b7 96 04 00       	movzww 0x4(%bp),%dx
80104064:	00 80 85 d2          	add    %al,-0x2d7b(%bx,%si)
80104068:	74 19                	je     80104083 <mpinit+0xc3>
8010406a:	31 c9                	xor    %cx,%cx
8010406c:	0f b6 ac 06 00       	movzbw 0x6(%si),%bp
80104071:	00 00                	add    %al,(%bx,%si)
80104073:	80 01 e9             	addb   $0xe9,(%bx,%di)
80104076:	40                   	inc    %ax
80104077:	39 c2                	cmp    %ax,%dx
80104079:	7f f1                	jg     8010406c <mpinit+0xac>
8010407b:	84 c9                	test   %cl,%cl
8010407d:	0f 85 95 00          	jne    80104116 <.L27+0x2e>
80104081:	00 00                	add    %al,(%bx,%si)
80104083:	c7 c0 24 70          	mov    $0x7024,%ax
80104087:	11 80 89 44          	adc    %ax,0x4489(%bx,%si)
8010408b:	24 10                	and    $0x10,%al
8010408d:	c7 00 01 00          	movw   $0x1,(%bx,%si)
80104091:	00 00                	add    %al,(%bx,%si)
80104093:	c7 c0 0c 70          	mov    $0x700c,%ax
80104097:	11 80 89 44          	adc    %ax,0x4489(%bx,%si)
8010409b:	24 1c                	and    $0x1c,%al
8010409d:	8b 8e 24 00          	mov    0x24(%bp),%cx
801040a1:	00 80 89 08          	add    %al,0x889(%bx,%si)
801040a5:	81 ee d4 ff          	sub    $0xffd4,%si
801040a9:	ff                   	(bad)  
801040aa:	7f 01                	jg     801040ad <mpinit+0xed>
801040ac:	d7                   	xlat   %ds:(%bx)
801040ad:	39 fe                	cmp    %di,%si
801040af:	0f 83 af 00          	jae    80104162 <.L28+0x1a>
801040b3:	00 00                	add    %al,(%bx,%si)
801040b5:	c7 c0 20 70          	mov    $0x7020,%ax
801040b9:	11 80 89 44          	adc    %ax,0x4489(%bx,%si)
801040bd:	24 14                	and    $0x14,%al
801040bf:	c7 c0 20 76          	mov    $0x7620,%ax
801040c3:	11 80 89 44          	adc    %ax,0x4489(%bx,%si)
801040c7:	24 0c                	and    $0xc,%al
801040c9:	c7 c0 40 70          	mov    $0x7040,%ax
801040cd:	11 80 89 c5          	adc    %ax,-0x3a77(%bx,%si)
801040d1:	8d 76 00             	lea    0x0(%bp),%si
801040d4:	80 3e 04 77 7f       	cmpb   $0x7f,0x7704
801040d9:	0f b6 16 8b 84       	movzbw -0x7b75,%dx
801040de:	93                   	xchg   %ax,%bx
801040df:	fc                   	cld    
801040e0:	a4                   	movsb  %ds:(%si),%es:(%di)
801040e1:	ff                   	(bad)  
801040e2:	ff 01                	incw   (%bx,%di)
801040e4:	d8 ff                	fdivr  %st(7),%st
801040e6:	e0 90                	loopne 80104078 <mpinit+0xb8>

801040e8 <.L27>:
801040e8:	83 c6 08             	add    $0x8,%si
801040eb:	39 f7                	cmp    %si,%di
801040ed:	77 e5                	ja     801040d4 <mpinit+0x114>
801040ef:	8b 44 24             	mov    0x24(%si),%ax
801040f2:	10 8b 00 85          	adc    %cl,-0x7b00(%bp,%di)
801040f6:	c0                   	(bad)  
801040f7:	75 6b                	jne    80104164 <.L28+0x1c>
801040f9:	c7 c0 20 76          	mov    $0x7620,%ax
801040fd:	11 80 c7 00          	adc    %ax,0xc7(%bx,%si)
80104101:	01 00                	add    %ax,(%bx,%si)
80104103:	00 00                	add    %al,(%bx,%si)
80104105:	8b 44 24             	mov    0x24(%si),%ax
80104108:	1c c7                	sbb    $0xc7,%al
8010410a:	00 00                	add    %al,(%bx,%si)
8010410c:	00 00                	add    %al,(%bx,%si)
8010410e:	00 c7                	add    %al,%bh
80104110:	c0 20 70             	shlb   $0x70,(%bx,%si)
80104113:	11 80 c6 00          	adc    %ax,0xc6(%bx,%si)
80104117:	00 83 c4 2c          	add    %al,0x2cc4(%bp,%di)
8010411b:	5b                   	pop    %bx
8010411c:	5e                   	pop    %si
8010411d:	5f                   	pop    %di
8010411e:	5d                   	pop    %bp
8010411f:	c3                   	ret    

80104120 <.L25>:
80104120:	8b 44 24             	mov    0x24(%si),%ax
80104123:	0c 8b                	or     $0x8b,%al
80104125:	10 83 fa 07          	adc    %al,0x7fa(%bp,%di)
80104129:	7f 18                	jg     80104143 <.L25+0x23>
8010412b:	8d 0c                	lea    (%si),%cx
8010412d:	12 01                	adc    (%bx,%di),%al
8010412f:	d1 c1                	rol    %cx
80104131:	e1 04                	loope  80104137 <.L25+0x17>
80104133:	29 d1                	sub    %dx,%cx
80104135:	8a 46 01             	mov    0x1(%bp),%al
80104138:	88 44 8d             	mov    %al,-0x73(%si)
8010413b:	00 42 8b             	add    %al,-0x75(%bp,%si)
8010413e:	44                   	inc    %sp
8010413f:	24 0c                	and    $0xc,%al
80104141:	89 10                	mov    %dx,(%bx,%si)
80104143:	83 c6 14             	add    $0x14,%si
80104146:	eb a3                	jmp    801040eb <.L27+0x3>

80104148 <.L28>:
80104148:	8b 44 24             	mov    0x24(%si),%ax
8010414b:	14 8a                	adc    $0x8a,%al
8010414d:	4e                   	dec    %si
8010414e:	01 88 08 83          	add    %cx,-0x7cf8(%bx,%si)
80104152:	c6                   	(bad)  
80104153:	08 eb                	or     %ch,%bl
80104155:	95                   	xchg   %ax,%bp
80104156:	66 90                	xchg   %eax,%eax
80104158:	8b 44 24             	mov    0x24(%si),%ax
8010415b:	10 c7                	adc    %al,%bh
8010415d:	00 00                	add    %al,(%bx,%si)
8010415f:	00 00                	add    %al,(%bx,%si)
80104161:	00 eb                	add    %ch,%bl
80104163:	87 8b 44 24          	xchg   %cx,0x2444(%bp,%di)
80104167:	18 80 78 0c          	sbb    %al,0xc78(%bx,%si)
8010416b:	00 74 aa             	add    %dh,-0x56(%si)
8010416e:	ba 22 00             	mov    $0x22,%dx
80104171:	00 00                	add    %al,(%bx,%si)
80104173:	b0 70                	mov    $0x70,%al
80104175:	ee                   	out    %al,(%dx)
80104176:	ba 23 00             	mov    $0x23,%dx
80104179:	00 00                	add    %al,(%bx,%si)
8010417b:	ec                   	in     (%dx),%al
8010417c:	83 c8 01             	or     $0x1,%ax
8010417f:	ee                   	out    %al,(%dx)
80104180:	83 c4 2c             	add    $0x2c,%sp
80104183:	5b                   	pop    %bx
80104184:	5e                   	pop    %si
80104185:	5f                   	pop    %di
80104186:	5d                   	pop    %bp
80104187:	c3                   	ret    
80104188:	ba 00 00             	mov    $0x0,%dx
8010418b:	01 00                	add    %ax,(%bx,%si)
8010418d:	b8 00 00             	mov    $0x0,%ax
80104190:	0f 00 e8             	verw   %ax
80104193:	b5 fd                	mov    $0xfd,%ch
80104195:	ff                   	(bad)  
80104196:	ff 89 44 24          	decw   0x2444(%bx,%di)
8010419a:	18 85 c0 0f          	sbb    %al,0xfc0(%di)
8010419e:	85 78 fe             	test   %di,-0x2(%bx,%si)
801041a1:	ff                   	(bad)  
801041a2:	ff                   	(bad)  
801041a3:	e9 70 ff             	jmp    80104116 <.L27+0x2e>
801041a6:	ff                   	(bad)  
801041a7:	ff                   	.byte 0xff

801041a8 <seginit>:
801041a8:	55                   	push   %bp
801041a9:	57                   	push   %di
801041aa:	56                   	push   %si
801041ab:	53                   	push   %bx
801041ac:	83 ec 1c             	sub    $0x1c,%sp
801041af:	e8 d8 15             	call   8010578a <__text_end_kern+0x2>
801041b2:	00 00                	add    %al,(%bx,%si)
801041b4:	81 c3 0c 71          	add    $0x710c,%bx
801041b8:	00 00                	add    %al,(%bx,%si)
801041ba:	e8 21 fc             	call   80103dde <lapic_init+0xee>
801041bd:	ff                   	(bad)  
801041be:	ff 8d 14 00          	decw   0x14(%di)
801041c2:	c7 c5 40 70          	mov    $0x7040,%bp
801041c6:	11 80 01 c2          	adc    %ax,-0x3dff(%bx,%si)
801041ca:	c1 e2 04             	shl    $0x4,%dx
801041cd:	29 c2                	sub    %ax,%dx
801041cf:	c1 e2 02             	shl    $0x2,%dx
801041d2:	8d 44 15             	lea    0x15(%si),%ax
801041d5:	00 66 c7             	add    %ah,-0x39(%bp)
801041d8:	40                   	inc    %ax
801041d9:	78 ff                	js     801041da <seginit+0x32>
801041db:	ff 66 c7             	jmp    *-0x39(%bp)
801041de:	40                   	inc    %ax
801041df:	7a 00                	jp     801041e1 <seginit+0x39>
801041e1:	00 c6                	add    %al,%dh
801041e3:	40                   	inc    %ax
801041e4:	7c 00                	jl     801041e6 <seginit+0x3e>
801041e6:	c6 40 7d 9a          	movb   $0x9a,0x7d(%bx,%si)
801041ea:	c6 40 7e cf          	movb   $0xcf,0x7e(%bx,%si)
801041ee:	c6 40 7f 00          	movb   $0x0,0x7f(%bx,%si)
801041f2:	66 c7 80 80 00 00 00 	movl   $0xffff0000,0x80(%bx,%si)
801041f9:	ff ff 
801041fb:	66 c7 80 82 00 00 00 	movl   $0x0,0x82(%bx,%si)
80104202:	00 00 
80104204:	c6 80 84 00 00       	movb   $0x0,0x84(%bx,%si)
80104209:	00 00                	add    %al,(%bx,%si)
8010420b:	c6 80 85 00 00       	movb   $0x0,0x85(%bx,%si)
80104210:	00 92 c6 80          	add    %dl,-0x7f3a(%bp,%si)
80104214:	86 00                	xchg   %al,(%bx,%si)
80104216:	00 00                	add    %al,(%bx,%si)
80104218:	cf                   	iret   
80104219:	c6 80 87 00 00       	movb   $0x0,0x87(%bx,%si)
8010421e:	00 00                	add    %al,(%bx,%si)
80104220:	66 c7 80 90 00 00 00 	movl   $0xffff0000,0x90(%bx,%si)
80104227:	ff ff 
80104229:	66 c7 80 92 00 00 00 	movl   $0x0,0x92(%bx,%si)
80104230:	00 00 
80104232:	c6 80 94 00 00       	movb   $0x0,0x94(%bx,%si)
80104237:	00 00                	add    %al,(%bx,%si)
80104239:	c6 80 95 00 00       	movb   $0x0,0x95(%bx,%si)
8010423e:	00 fa                	add    %bh,%dl
80104240:	c6 80 96 00 00       	movb   $0x0,0x96(%bx,%si)
80104245:	00 cf                	add    %cl,%bh
80104247:	c6 80 97 00 00       	movb   $0x0,0x97(%bx,%si)
8010424c:	00 00                	add    %al,(%bx,%si)
8010424e:	66 c7 80 98 00 00 00 	movl   $0xffff0000,0x98(%bx,%si)
80104255:	ff ff 
80104257:	66 c7 80 9a 00 00 00 	movl   $0x0,0x9a(%bx,%si)
8010425e:	00 00 
80104260:	c6 80 9c 00 00       	movb   $0x0,0x9c(%bx,%si)
80104265:	00 00                	add    %al,(%bx,%si)
80104267:	c6 80 9d 00 00       	movb   $0x0,0x9d(%bx,%si)
8010426c:	00 f2                	add    %dh,%dl
8010426e:	c6 80 9e 00 00       	movb   $0x0,0x9e(%bx,%si)
80104273:	00 cf                	add    %cl,%bh
80104275:	c6 80 9f 00 00       	movb   $0x0,0x9f(%bx,%si)
8010427a:	00 00                	add    %al,(%bx,%si)
8010427c:	8d 9c 15 b4          	lea    -0x4beb(%si),%bx
80104280:	00 00                	add    %al,(%bx,%si)
80104282:	00 66 c7             	add    %ah,-0x39(%bp)
80104285:	80 88 00 00 00       	orb    $0x0,0x0(%bx,%si)
8010428a:	00 00                	add    %al,(%bx,%si)
8010428c:	66 89 98 8a 00       	mov    %ebx,0x8a(%bx,%si)
80104291:	00 00                	add    %al,(%bx,%si)
80104293:	89 df                	mov    %bx,%di
80104295:	c1 ef 10             	shr    $0x10,%di
80104298:	89 f9                	mov    %di,%cx
8010429a:	88 88 8c 00          	mov    %cl,0x8c(%bx,%si)
8010429e:	00 00                	add    %al,(%bx,%si)
801042a0:	c6 80 8d 00 00       	movb   $0x0,0x8d(%bx,%si)
801042a5:	00 92 c6 80          	add    %dl,-0x7f3a(%bp,%si)
801042a9:	8e 00                	mov    (%bx,%si),%es
801042ab:	00 00                	add    %al,(%bx,%si)
801042ad:	c0 c1 eb             	rol    $0xeb,%cl
801042b0:	18 88 98 8f          	sbb    %cl,-0x7068(%bx,%si)
801042b4:	00 00                	add    %al,(%bx,%si)
801042b6:	00 8d 54 15          	add    %cl,0x1554(%di)
801042ba:	70 66                	jo     80104322 <mpmain+0x1e>
801042bc:	c7 44 24 0a 37       	movw   $0x370a,0x24(%si)
801042c1:	00 66 89             	add    %ah,-0x77(%bp)
801042c4:	54                   	push   %sp
801042c5:	24 0c                	and    $0xc,%al
801042c7:	c1 ea 10             	shr    $0x10,%dx
801042ca:	66 89 54 24          	mov    %edx,0x24(%si)
801042ce:	0e                   	push   %cs
801042cf:	8d 54 24             	lea    0x24(%si),%dx
801042d2:	0a 0f                	or     (%bx),%cl
801042d4:	01 12                	add    %dx,(%bp,%si)
801042d6:	ba 18 00             	mov    $0x18,%dx
801042d9:	00 00                	add    %al,(%bx,%si)
801042db:	8e ea                	mov    %dx,%gs
801042dd:	89 44 24             	mov    %ax,0x24(%si)
801042e0:	04 8b                	add    $0x8b,%al
801042e2:	44                   	inc    %sp
801042e3:	24 04                	and    $0x4,%al
801042e5:	65 a3 00 00          	mov    %ax,%gs:0x0
801042e9:	00 00                	add    %al,(%bx,%si)
801042eb:	c7 04 24 00          	movw   $0x24,(%si)
801042ef:	00 00                	add    %al,(%bx,%si)
801042f1:	00 8b 04 24          	add    %cl,0x2404(%bp,%di)
801042f5:	65 a3 04 00          	mov    %ax,%gs:0x4
801042f9:	00 00                	add    %al,(%bx,%si)
801042fb:	83 c4 1c             	add    $0x1c,%sp
801042fe:	5b                   	pop    %bx
801042ff:	5e                   	pop    %si
80104300:	5f                   	pop    %di
80104301:	5d                   	pop    %bp
80104302:	c3                   	ret    
80104303:	90                   	nop

80104304 <mpmain>:
80104304:	53                   	push   %bx
80104305:	83 ec 08             	sub    $0x8,%sp
80104308:	e8 7f 14             	call   8010578a <__text_end_kern+0x2>
8010430b:	00 00                	add    %al,(%bx,%si)
8010430d:	81 c3 b3 6f          	add    $0x6fb3,%bx
80104311:	00 00                	add    %al,(%bx,%si)
80104313:	e8 c8 fa             	call   80103dde <lapic_init+0xee>
80104316:	ff                   	(bad)  
80104317:	ff 83 ec 08          	incw   0x8ec(%bp,%di)
8010431b:	50                   	push   %ax
8010431c:	8d 83 d2 ae          	lea    -0x512e(%bp,%di),%ax
80104320:	ff                   	(bad)  
80104321:	ff 50 e8             	call   *-0x18(%bx,%si)
80104324:	94                   	xchg   %ax,%sp
80104325:	d0 ff                	sar    %bh
80104327:	ff                   	(bad)  
80104328:	e8 d7 f6             	call   80103a02 <uva2kva+0x36>
8010432b:	ff                   	(bad)  
8010432c:	ff 8d 83 e3          	decw   -0x1c7d(%di)
80104330:	ae                   	scas   %es:(%di),%al
80104331:	ff                   	(bad)  
80104332:	ff 89 04 24          	decw   0x2404(%bx,%di)
80104336:	e8 91 ef             	call   801032ca <__local_panic+0x2>
80104339:	ff                   	(bad)  
8010433a:	ff                   	.byte 0xff
8010433b:	90                   	nop

8010433c <mpenter>:
8010433c:	53                   	push   %bx
8010433d:	83 ec 08             	sub    $0x8,%sp
80104340:	e8 47 14             	call   8010578a <__text_end_kern+0x2>
80104343:	00 00                	add    %al,(%bx,%si)
80104345:	81 c3 7b 6f          	add    $0x6f7b,%bx
80104349:	00 00                	add    %al,(%bx,%si)
8010434b:	e8 58 fe             	call   801041a6 <.L28+0x5e>
8010434e:	ff                   	(bad)  
8010434f:	ff                   	(bad)  
80104350:	e8 9b f9             	call   80103cee <ioapicenable+0x3e>
80104353:	ff                   	(bad)  
80104354:	ff                   	(bad)  
80104355:	e8 aa ff             	call   80104302 <seginit+0x15a>
80104358:	ff                   	(bad)  
80104359:	ff 66 90             	jmp    *-0x70(%bp)

8010435c <startothers>:
8010435c:	55                   	push   %bp
8010435d:	57                   	push   %di
8010435e:	56                   	push   %si
8010435f:	53                   	push   %bx
80104360:	83 ec 40             	sub    $0x40,%sp
80104363:	e8 24 14             	call   8010578a <__text_end_kern+0x2>
80104366:	00 00                	add    %al,(%bx,%si)
80104368:	81 c3 58 6f          	add    $0x6f58,%bx
8010436c:	00 00                	add    %al,(%bx,%si)
8010436e:	c7 c2 04 54          	mov    $0x5404,%dx
80104372:	10 80 c7 c0          	adc    %al,-0x3f39(%bx,%si)
80104376:	70 54                	jo     801043cc <startothers+0x70>
80104378:	10 80 89 44          	adc    %al,0x4489(%bx,%si)
8010437c:	24 10                	and    $0x10,%al
8010437e:	29 d0                	sub    %dx,%ax
80104380:	50                   	push   %ax
80104381:	52                   	push   %dx
80104382:	68 00 70             	push   $0x7000
80104385:	00 80 e8 b0          	add    %al,-0x4f18(%bx,%si)
80104389:	f1                   	icebp  
8010438a:	ff                   	(bad)  
8010438b:	ff c7                	inc    %di
8010438d:	c7                   	(bad)  
8010438e:	20 76 11             	and    %dh,0x11(%bp)
80104391:	80 8b 17 8d 04       	orb    $0x4,-0x72e9(%bp,%di)
80104396:	12 01                	adc    (%bx,%di),%al
80104398:	d0 c1                	rol    %cl
8010439a:	e0 04                	loopne 801043a0 <startothers+0x44>
8010439c:	29 d0                	sub    %dx,%ax
8010439e:	c7 c6 40 70          	mov    $0x7040,%si
801043a2:	11 80 8d 04          	adc    %ax,0x48d(%bx,%si)
801043a6:	86 83 c4 10          	xchg   %al,0x10c4(%bp,%di)
801043aa:	39 f0                	cmp    %si,%ax
801043ac:	0f 86 e9 00          	jbe    80104499 <startothers+0x13d>
801043b0:	00 00                	add    %al,(%bx,%si)
801043b2:	89 f5                	mov    %si,%bp
801043b4:	c7 c0 00 a0          	mov    $0xa000,%ax
801043b8:	10 80 05 00          	adc    %al,0x5(%bx,%si)
801043bc:	00 00                	add    %al,(%bx,%si)
801043be:	80 89 44 24 0c       	orb    $0xc,0x2444(%bx,%di)
801043c3:	90                   	nop
801043c4:	e8 17 fa             	call   80103dde <lapic_init+0xee>
801043c7:	ff                   	(bad)  
801043c8:	ff 8d 0c 00          	decw   0xc(%di)
801043cc:	01 c1                	add    %ax,%cx
801043ce:	c1 e1 04             	shl    $0x4,%cx
801043d1:	29 c1                	sub    %ax,%cx
801043d3:	8d 04                	lea    (%si),%ax
801043d5:	8e 39                	mov    (%bx,%di),%?
801043d7:	c5 0f                	lds    (%bx),%cx
801043d9:	84 a0 00 00          	test   %ah,0x0(%bx,%si)
801043dd:	00 c7                	add    %al,%bh
801043df:	44                   	inc    %sp
801043e0:	24 24                	and    $0x24,%al
801043e2:	00 10                	add    %dl,(%bx,%si)
801043e4:	00 00                	add    %al,(%bx,%si)
801043e6:	c7 44 24 28 00       	movw   $0x28,0x24(%si)
801043eb:	00 00                	add    %al,(%bx,%si)
801043ed:	00 c7                	add    %al,%bh
801043ef:	44                   	inc    %sp
801043f0:	24 2c                	and    $0x2c,%al
801043f2:	00 00                	add    %al,(%bx,%si)
801043f4:	00 00                	add    %al,(%bx,%si)
801043f6:	83 ec 0c             	sub    $0xc,%sp
801043f9:	8d 44 24             	lea    0x24(%si),%ax
801043fc:	28 50 e8             	sub    %dl,-0x18(%bx,%si)
801043ff:	95                   	xchg   %ax,%bp
80104400:	e9 ff ff             	jmp    80104402 <startothers+0xa6>
80104403:	83 c4 10             	add    $0x10,%sp
80104406:	85 c0                	test   %ax,%ax
80104408:	0f 85 96 00          	jne    801044a2 <startothers+0x146>
8010440c:	00 00                	add    %al,(%bx,%si)
8010440e:	8b 44 24             	mov    0x24(%si),%ax
80104411:	1c 05                	sbb    $0x5,%al
80104413:	00 80 00 00          	add    %al,0x0(%bx,%si)
80104417:	a3 fc 6f             	mov    %ax,0x6ffc
8010441a:	00 80 8d 83          	add    %al,-0x7c73(%bx,%si)
8010441e:	7c 90                	jl     801043b0 <startothers+0x54>
80104420:	ff                   	(bad)  
80104421:	ff a3 f8 6f          	jmp    *0x6ff8(%bp,%di)
80104425:	00 80 8b 44          	add    %al,0x448b(%bx,%si)
80104429:	24 0c                	and    $0xc,%al
8010442b:	a3 f4 6f             	mov    %ax,0x6ff4
8010442e:	00 80 8d 83          	add    %al,-0x7c73(%bx,%si)
80104432:	44                   	inc    %sp
80104433:	fd                   	std    
80104434:	ff                   	(bad)  
80104435:	ff a3 f0 6f          	jmp    *0x6ff0(%bp,%di)
80104439:	00 80 c6 05          	add    %al,0x5c6(%bx,%si)
8010443d:	00 80 00 00          	add    %al,0x0(%bx,%si)
80104441:	00 83 ec 08          	add    %al,0x8ec(%bp,%di)
80104445:	68 00 70             	push   $0x7000
80104448:	00 00                	add    %al,(%bx,%si)
8010444a:	0f b6 45 00          	movzbw 0x0(%di),%ax
8010444e:	50                   	push   %ax
8010444f:	e8 60 fa             	call   80103eb2 <microdelay+0x2>
80104452:	ff                   	(bad)  
80104453:	ff a0 00 80          	jmp    *-0x8000(%bx,%si)
80104457:	00 00                	add    %al,(%bx,%si)
80104459:	83 c4 10             	add    $0x10,%sp
8010445c:	3c 07                	cmp    $0x7,%al
8010445e:	75 fc                	jne    8010445c <startothers+0x100>
80104460:	83 ec 0c             	sub    $0xc,%sp
80104463:	8d 83 f3 ae          	lea    -0x510d(%bp,%di),%ax
80104467:	ff                   	(bad)  
80104468:	ff 50 e8             	call   *-0x18(%bx,%si)
8010446b:	4d                   	dec    %bp
8010446c:	cf                   	iret   
8010446d:	ff                   	(bad)  
8010446e:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
80104472:	66 90                	xchg   %eax,%eax
80104474:	8b 85 a8 00          	mov    0xa8(%di),%ax
80104478:	00 00                	add    %al,(%bx,%si)
8010447a:	85 c0                	test   %ax,%ax
8010447c:	74 f6                	je     80104474 <startothers+0x118>
8010447e:	81 c5 bc 00          	add    $0xbc,%bp
80104482:	00 00                	add    %al,(%bx,%si)
80104484:	8b 0f                	mov    (%bx),%cx
80104486:	8d 04                	lea    (%si),%ax
80104488:	09 01                	or     %ax,(%bx,%di)
8010448a:	c8 c1 e0 04          	enter  $0xe0c1,$0x4
8010448e:	29 c8                	sub    %cx,%ax
80104490:	8d 04                	lea    (%si),%ax
80104492:	86 39                	xchg   %bh,(%bx,%di)
80104494:	c5 0f                	lds    (%bx),%cx
80104496:	82                   	(bad)  
80104497:	29 ff                	sub    %di,%di
80104499:	ff                   	(bad)  
8010449a:	ff 83 c4 3c          	incw   0x3cc4(%bp,%di)
8010449e:	5b                   	pop    %bx
8010449f:	5e                   	pop    %si
801044a0:	5f                   	pop    %di
801044a1:	5d                   	pop    %bp
801044a2:	c3                   	ret    
801044a3:	90                   	nop
801044a4:	b8 ff 7f             	mov    $0x7fff,%ax
801044a7:	00 00                	add    %al,(%bx,%si)
801044a9:	e9 69 ff             	jmp    80104415 <startothers+0xb9>
801044ac:	ff                   	(bad)  
801044ad:	ff 66 90             	jmp    *-0x70(%bp)

801044b0 <set_gs_cpu>:
801044b0:	8b 44 24             	mov    0x24(%si),%ax
801044b3:	04 65                	add    $0x65,%al
801044b5:	a3 00 00             	mov    %ax,0x0
801044b8:	00 00                	add    %al,(%bx,%si)
801044ba:	c3                   	ret    
801044bb:	90                   	nop

801044bc <get_gs_cpu>:
801044bc:	83 ec 10             	sub    $0x10,%sp
801044bf:	65 a1 00 00          	mov    %gs:0x0,%ax
801044c3:	00 00                	add    %al,(%bx,%si)
801044c5:	89 44 24             	mov    %ax,0x24(%si)
801044c8:	0c 8b                	or     $0x8b,%al
801044ca:	44                   	inc    %sp
801044cb:	24 0c                	and    $0xc,%al
801044cd:	83 c4 10             	add    $0x10,%sp
801044d0:	c3                   	ret    
801044d1:	8d 76 00             	lea    0x0(%bp),%si

801044d4 <set_gs_proc>:
801044d4:	8b 44 24             	mov    0x24(%si),%ax
801044d7:	04 65                	add    $0x65,%al
801044d9:	a3 04 00             	mov    %ax,0x4
801044dc:	00 00                	add    %al,(%bx,%si)
801044de:	c3                   	ret    
801044df:	90                   	nop

801044e0 <get_gs_proc>:
801044e0:	83 ec 10             	sub    $0x10,%sp
801044e3:	65 a1 00 00          	mov    %gs:0x0,%ax
801044e7:	00 00                	add    %al,(%bx,%si)
801044e9:	89 44 24             	mov    %ax,0x24(%si)
801044ec:	0c 8b                	or     $0x8b,%al
801044ee:	44                   	inc    %sp
801044ef:	24 0c                	and    $0xc,%al
801044f1:	83 c4 10             	add    $0x10,%sp
801044f4:	c3                   	ret    
801044f5:	66 90                	xchg   %eax,%eax
801044f7:	90                   	nop

801044f8 <initlock>:
801044f8:	8b 44 24             	mov    0x24(%si),%ax
801044fb:	04 8b                	add    $0x8b,%al
801044fd:	54                   	push   %sp
801044fe:	24 08                	and    $0x8,%al
80104500:	89 50 04             	mov    %dx,0x4(%bx,%si)
80104503:	c7 00 00 00          	movw   $0x0,(%bx,%si)
80104507:	00 00                	add    %al,(%bx,%si)
80104509:	c7 40 08 00 00       	movw   $0x0,0x8(%bx,%si)
8010450e:	00 00                	add    %al,(%bx,%si)
80104510:	c3                   	ret    
80104511:	8d 76 00             	lea    0x0(%bp),%si

80104514 <holding>:
80104514:	56                   	push   %si
80104515:	53                   	push   %bx
80104516:	51                   	push   %cx
80104517:	e8 70 12             	call   8010578a <__text_end_kern+0x2>
8010451a:	00 00                	add    %al,(%bx,%si)
8010451c:	81 c3 a4 6d          	add    $0x6da4,%bx
80104520:	00 00                	add    %al,(%bx,%si)
80104522:	8b 44 24             	mov    0x24(%si),%ax
80104525:	10 8b 30 85          	adc    %cl,-0x7ad0(%bp,%di)
80104529:	f6 75 08             	divb   0x8(%di)
8010452c:	31 c0                	xor    %ax,%ax
8010452e:	5a                   	pop    %dx
8010452f:	5b                   	pop    %bx
80104530:	5e                   	pop    %si
80104531:	c3                   	ret    
80104532:	66 90                	xchg   %eax,%eax
80104534:	8b 70 08             	mov    0x8(%bx,%si),%si
80104537:	e8 80 ff             	call   801044ba <set_gs_cpu+0xa>
8010453a:	ff                   	(bad)  
8010453b:	ff                   	(bad)  
8010453c:	39 c6                	cmp    %ax,%si
8010453e:	0f 94 c0             	sete   %al
80104541:	0f b6 c0             	movzbw %al,%ax
80104544:	5a                   	pop    %dx
80104545:	5b                   	pop    %bx
80104546:	5e                   	pop    %si
80104547:	c3                   	ret    

80104548 <pushcli>:
80104548:	56                   	push   %si
80104549:	53                   	push   %bx
8010454a:	52                   	push   %dx
8010454b:	e8 3c 12             	call   8010578a <__text_end_kern+0x2>
8010454e:	00 00                	add    %al,(%bx,%si)
80104550:	81 c3 70 6d          	add    $0x6d70,%bx
80104554:	00 00                	add    %al,(%bx,%si)
80104556:	9c                   	pushf  
80104557:	5e                   	pop    %si
80104558:	fa                   	cli    
80104559:	e8 5e ff             	call   801044ba <set_gs_cpu+0xa>
8010455c:	ff                   	(bad)  
8010455d:	ff 8b 90 ac          	decw   -0x5370(%bp,%di)
80104561:	00 00                	add    %al,(%bx,%si)
80104563:	00 85 d2 75          	add    %al,0x75d2(%di)
80104567:	0c 81                	or     $0x81,%al
80104569:	e6 00                	out    %al,$0x0
8010456b:	02 00                	add    (%bx,%si),%al
8010456d:	00 89 b0 b0          	add    %cl,-0x4f50(%bx,%di)
80104571:	00 00                	add    %al,(%bx,%si)
80104573:	00 42 89             	add    %al,-0x77(%bp,%si)
80104576:	90                   	nop
80104577:	ac                   	lods   %ds:(%si),%al
80104578:	00 00                	add    %al,(%bx,%si)
8010457a:	00 58 5b             	add    %bl,0x5b(%bx,%si)
8010457d:	5e                   	pop    %si
8010457e:	c3                   	ret    
8010457f:	90                   	nop

80104580 <acquire>:
80104580:	57                   	push   %di
80104581:	56                   	push   %si
80104582:	53                   	push   %bx
80104583:	e8 04 12             	call   8010578a <__text_end_kern+0x2>
80104586:	00 00                	add    %al,(%bx,%si)
80104588:	81 c3 38 6d          	add    $0x6d38,%bx
8010458c:	00 00                	add    %al,(%bx,%si)
8010458e:	8b 74 24             	mov    0x24(%si),%si
80104591:	10 e8                	adc    %ch,%al
80104593:	b1 ff                	mov    $0xff,%cl
80104595:	ff                   	(bad)  
80104596:	ff 8b 06 85          	decw   -0x7afa(%bp,%di)
8010459a:	c0                   	(bad)  
8010459b:	75 27                	jne    801045c4 <acquire+0x44>
8010459d:	b8 01 00             	mov    $0x1,%ax
801045a0:	00 00                	add    %al,(%bx,%si)
801045a2:	f0 87 06 85 c0       	lock xchg %ax,-0x3f7b
801045a7:	74 07                	je     801045b0 <acquire+0x30>
801045a9:	31 c0                	xor    %ax,%ax
801045ab:	5b                   	pop    %bx
801045ac:	5e                   	pop    %si
801045ad:	5f                   	pop    %di
801045ae:	c3                   	ret    
801045af:	90                   	nop
801045b0:	e8 07 ff             	call   801044ba <set_gs_cpu+0xa>
801045b3:	ff                   	(bad)  
801045b4:	ff 89 46 08          	decw   0x846(%bx,%di)
801045b8:	b8 01 00             	mov    $0x1,%ax
801045bb:	00 00                	add    %al,(%bx,%si)
801045bd:	5b                   	pop    %bx
801045be:	5e                   	pop    %si
801045bf:	5f                   	pop    %di
801045c0:	c3                   	ret    
801045c1:	8d 76 00             	lea    0x0(%bp),%si
801045c4:	8b 7e 08             	mov    0x8(%bp),%di
801045c7:	e8 f0 fe             	call   801044ba <set_gs_cpu+0xa>
801045ca:	ff                   	(bad)  
801045cb:	ff                   	(bad)  
801045cc:	39 c7                	cmp    %ax,%di
801045ce:	75 cd                	jne    8010459d <acquire+0x1d>
801045d0:	83 ec 0c             	sub    $0xc,%sp
801045d3:	8d 83 0d af          	lea    -0x50f3(%bp,%di),%ax
801045d7:	ff                   	(bad)  
801045d8:	ff 50 e8             	call   *-0x18(%bx,%si)
801045db:	ed                   	in     (%dx),%ax
801045dc:	ec                   	in     (%dx),%al
801045dd:	ff                   	(bad)  
801045de:	ff                   	.byte 0xff
801045df:	90                   	nop

801045e0 <popcli>:
801045e0:	53                   	push   %bx
801045e1:	83 ec 08             	sub    $0x8,%sp
801045e4:	e8 a3 11             	call   8010578a <__text_end_kern+0x2>
801045e7:	00 00                	add    %al,(%bx,%si)
801045e9:	81 c3 d7 6c          	add    $0x6cd7,%bx
801045ed:	00 00                	add    %al,(%bx,%si)
801045ef:	9c                   	pushf  
801045f0:	58                   	pop    %ax
801045f1:	f6 c4 02             	test   $0x2,%ah
801045f4:	75 39                	jne    8010462f <popcli+0x4f>
801045f6:	e8 c1 fe             	call   801044ba <set_gs_cpu+0xa>
801045f9:	ff                   	(bad)  
801045fa:	ff 8b 88 ac          	decw   -0x5378(%bp,%di)
801045fe:	00 00                	add    %al,(%bx,%si)
80104600:	00 8d 51 ff          	add    %cl,-0xaf(%di)
80104604:	89 90 ac 00          	mov    %dx,0xac(%bx,%si)
80104608:	00 00                	add    %al,(%bx,%si)
8010460a:	85 d2                	test   %dx,%dx
8010460c:	78 12                	js     80104620 <popcli+0x40>
8010460e:	75 0b                	jne    8010461b <popcli+0x3b>
80104610:	8b 80 b0 00          	mov    0xb0(%bx,%si),%ax
80104614:	00 00                	add    %al,(%bx,%si)
80104616:	85 c0                	test   %ax,%ax
80104618:	74 01                	je     8010461b <popcli+0x3b>
8010461a:	fb                   	sti    
8010461b:	83 c4 08             	add    $0x8,%sp
8010461e:	5b                   	pop    %bx
8010461f:	c3                   	ret    
80104620:	83 ec 0c             	sub    $0xc,%sp
80104623:	8d 83 41 af          	lea    -0x50bf(%bp,%di),%ax
80104627:	ff                   	(bad)  
80104628:	ff 50 e8             	call   *-0x18(%bx,%si)
8010462b:	9d                   	popf   
8010462c:	ec                   	in     (%dx),%al
8010462d:	ff                   	(bad)  
8010462e:	ff 83 ec 0c          	incw   0xcec(%bp,%di)
80104632:	8d 83 2b af          	lea    -0x50d5(%bp,%di),%ax
80104636:	ff                   	(bad)  
80104637:	ff 50 e8             	call   *-0x18(%bx,%si)
8010463a:	8e ec                	mov    %sp,%gs
8010463c:	ff                   	(bad)  
8010463d:	ff 66 90             	jmp    *-0x70(%bp)

80104640 <single_acquire>:
80104640:	57                   	push   %di
80104641:	56                   	push   %si
80104642:	53                   	push   %bx
80104643:	e8 44 11             	call   8010578a <__text_end_kern+0x2>
80104646:	00 00                	add    %al,(%bx,%si)
80104648:	81 c3 78 6c          	add    $0x6c78,%bx
8010464c:	00 00                	add    %al,(%bx,%si)
8010464e:	8b 74 24             	mov    0x24(%si),%si
80104651:	10 e8                	adc    %ch,%al
80104653:	f1                   	icebp  
80104654:	fe                   	(bad)  
80104655:	ff                   	(bad)  
80104656:	ff 8b 06 85          	decw   -0x7afa(%bp,%di)
8010465a:	c0                   	(bad)  
8010465b:	75 2b                	jne    80104688 <single_acquire+0x48>
8010465d:	b8 01 00             	mov    $0x1,%ax
80104660:	00 00                	add    %al,(%bx,%si)
80104662:	f0 87 06 85 c0       	lock xchg %ax,-0x3f7b
80104667:	75 13                	jne    8010467c <single_acquire+0x3c>
80104669:	e8 4e fe             	call   801044ba <set_gs_cpu+0xa>
8010466c:	ff                   	(bad)  
8010466d:	ff 89 46 08          	decw   0x846(%bx,%di)
80104671:	b8 01 00             	mov    $0x1,%ax
80104674:	00 00                	add    %al,(%bx,%si)
80104676:	5b                   	pop    %bx
80104677:	5e                   	pop    %si
80104678:	5f                   	pop    %di
80104679:	c3                   	ret    
8010467a:	66 90                	xchg   %eax,%eax
8010467c:	e8 5f ff             	call   801045de <acquire+0x5e>
8010467f:	ff                   	(bad)  
80104680:	ff 31                	pushw  (%bx,%di)
80104682:	c0 5b 5e 5f          	rcrb   $0x5f,0x5e(%bp,%di)
80104686:	c3                   	ret    
80104687:	90                   	nop
80104688:	8b 7e 08             	mov    0x8(%bp),%di
8010468b:	e8 2c fe             	call   801044ba <set_gs_cpu+0xa>
8010468e:	ff                   	(bad)  
8010468f:	ff                   	(bad)  
80104690:	39 c7                	cmp    %ax,%di
80104692:	75 c9                	jne    8010465d <single_acquire+0x1d>
80104694:	83 ec 0c             	sub    $0xc,%sp
80104697:	8d 83 a8 ac          	lea    -0x5358(%bp,%di),%ax
8010469b:	ff                   	(bad)  
8010469c:	ff 50 e8             	call   *-0x18(%bx,%si)
8010469f:	29 ec                	sub    %bp,%sp
801046a1:	ff                   	(bad)  
801046a2:	ff                   	.byte 0xff
801046a3:	90                   	nop

801046a4 <release>:
801046a4:	57                   	push   %di
801046a5:	56                   	push   %si
801046a6:	53                   	push   %bx
801046a7:	e8 e0 10             	call   8010578a <__text_end_kern+0x2>
801046aa:	00 00                	add    %al,(%bx,%si)
801046ac:	81 c3 14 6c          	add    $0x6c14,%bx
801046b0:	00 00                	add    %al,(%bx,%si)
801046b2:	8b 74 24             	mov    0x24(%si),%si
801046b5:	10 8b 06 85          	adc    %cl,-0x7afa(%bp,%di)
801046b9:	c0                   	(bad)  
801046ba:	75 10                	jne    801046cc <release+0x28>
801046bc:	83 ec 0c             	sub    $0xc,%sp
801046bf:	8d 83 d0 ac          	lea    -0x5330(%bp,%di),%ax
801046c3:	ff                   	(bad)  
801046c4:	ff 50 e8             	call   *-0x18(%bx,%si)
801046c7:	01 ec                	add    %bp,%sp
801046c9:	ff                   	(bad)  
801046ca:	ff 90 8b 7e          	call   *0x7e8b(%bx,%si)
801046ce:	08 e8                	or     %ch,%al
801046d0:	e8 fd ff             	call   801046d0 <release+0x2c>
801046d3:	ff                   	(bad)  
801046d4:	39 c7                	cmp    %ax,%di
801046d6:	75 e4                	jne    801046bc <release+0x18>
801046d8:	c7 46 08 00 00       	movw   $0x0,0x8(%bp)
801046dd:	00 00                	add    %al,(%bx,%si)
801046df:	c7 06 00 00 00 00    	movw   $0x0,0x0
801046e5:	e8 f6 fe             	call   801045de <acquire+0x5e>
801046e8:	ff                   	(bad)  
801046e9:	ff                   	(bad)  
801046ea:	b8 01 00             	mov    $0x1,%ax
801046ed:	00 00                	add    %al,(%bx,%si)
801046ef:	5b                   	pop    %bx
801046f0:	5e                   	pop    %si
801046f1:	5f                   	pop    %di
801046f2:	c3                   	ret    
801046f3:	90                   	nop

801046f4 <seminit>:
801046f4:	e8 9f 10             	call   80105796 <__x86.get_pc_thunk.ax+0x2>
801046f7:	00 00                	add    %al,(%bx,%si)
801046f9:	81 c2 c7 6b          	add    $0x6bc7,%dx
801046fd:	00 00                	add    %al,(%bx,%si)
801046ff:	8b 44 24             	mov    0x24(%si),%ax
80104702:	04 8b                	add    $0x8b,%al
80104704:	4c                   	dec    %sp
80104705:	24 08                	and    $0x8,%al
80104707:	89 08                	mov    %cx,(%bx,%si)
80104709:	8b 4c 24             	mov    0x24(%si),%cx
8010470c:	0c 89                	or     $0x89,%al
8010470e:	48                   	dec    %ax
8010470f:	10 8b 92 b0          	adc    %cl,-0x4f6e(%bp,%di)
80104713:	ff                   	(bad)  
80104714:	ff                   	(bad)  
80104715:	ff 89 50 08          	decw   0x850(%bx,%di)
80104719:	c7 40 04 00 00       	movw   $0x0,0x4(%bx,%si)
8010471e:	00 00                	add    %al,(%bx,%si)
80104720:	c7 40 0c 00 00       	movw   $0x0,0xc(%bx,%si)
80104725:	00 00                	add    %al,(%bx,%si)
80104727:	c3                   	ret    

80104728 <semup>:
80104728:	56                   	push   %si
80104729:	53                   	push   %bx
8010472a:	83 ec 10             	sub    $0x10,%sp
8010472d:	8b 5c 24             	mov    0x24(%si),%bx
80104730:	1c 8d                	sbb    $0x8d,%al
80104732:	73 04                	jae    80104738 <semup+0x10>
80104734:	56                   	push   %si
80104735:	e8 46 fe             	call   8010457e <pushcli+0x36>
80104738:	ff                   	(bad)  
80104739:	ff                   	(bad)  
8010473a:	ff 03                	incw   (%bp,%di)
8010473c:	89 34                	mov    %si,(%si)
8010473e:	24 e8                	and    $0xe8,%al
80104740:	60                   	pusha  
80104741:	ff                   	(bad)  
80104742:	ff                   	(bad)  
80104743:	ff                   	(bad)  
80104744:	b8 01 00             	mov    $0x1,%ax
80104747:	00 00                	add    %al,(%bx,%si)
80104749:	83 c4 14             	add    $0x14,%sp
8010474c:	5b                   	pop    %bx
8010474d:	5e                   	pop    %si
8010474e:	c3                   	ret    
8010474f:	90                   	nop

80104750 <single_semdown>:
80104750:	56                   	push   %si
80104751:	53                   	push   %bx
80104752:	83 ec 10             	sub    $0x10,%sp
80104755:	8b 5c 24             	mov    0x24(%si),%bx
80104758:	1c 8d                	sbb    $0x8d,%al
8010475a:	73 04                	jae    80104760 <single_semdown+0x10>
8010475c:	56                   	push   %si
8010475d:	e8 1e fe             	call   8010457e <pushcli+0x36>
80104760:	ff                   	(bad)  
80104761:	ff 8b 03 83          	decw   -0x7cfd(%bp,%di)
80104765:	c4 10                	les    (%bx,%si),%dx
80104767:	85 c0                	test   %ax,%ax
80104769:	7e 19                	jle    80104784 <single_semdown+0x34>
8010476b:	48                   	dec    %ax
8010476c:	89 03                	mov    %ax,(%bp,%di)
8010476e:	83 ec 0c             	sub    $0xc,%sp
80104771:	56                   	push   %si
80104772:	e8 2d ff             	call   801046a2 <single_acquire+0x62>
80104775:	ff                   	(bad)  
80104776:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
8010477a:	b8 01 00             	mov    $0x1,%ax
8010477d:	00 00                	add    %al,(%bx,%si)
8010477f:	5a                   	pop    %dx
80104780:	5b                   	pop    %bx
80104781:	5e                   	pop    %si
80104782:	c3                   	ret    
80104783:	90                   	nop
80104784:	31 c0                	xor    %ax,%ax
80104786:	5a                   	pop    %dx
80104787:	5b                   	pop    %bx
80104788:	5e                   	pop    %si
80104789:	c3                   	ret    
8010478a:	66 90                	xchg   %eax,%eax

8010478c <semdown>:
8010478c:	eb c2                	jmp    80104750 <single_semdown>
8010478e:	66 90                	xchg   %eax,%eax

80104790 <__read8>:
80104790:	8b 44 24             	mov    0x24(%si),%ax
80104793:	10 03                	adc    %al,(%bp,%di)
80104795:	44                   	inc    %sp
80104796:	24 08                	and    $0x8,%al
80104798:	0f b6 00             	movzbw (%bx,%si),%ax
8010479b:	8b 54 24             	mov    0x24(%si),%dx
8010479e:	18 89 02 c7          	sbb    %cl,-0x38fe(%bx,%di)
801047a2:	42                   	inc    %dx
801047a3:	04 00                	add    $0x0,%al
801047a5:	00 00                	add    %al,(%bx,%si)
801047a7:	00 31                	add    %dh,(%bx,%di)
801047a9:	c0 c3 90             	rol    $0x90,%bl

801047ac <__read16>:
801047ac:	8b 44 24             	mov    0x24(%si),%ax
801047af:	10 03                	adc    %al,(%bp,%di)
801047b1:	44                   	inc    %sp
801047b2:	24 08                	and    $0x8,%al
801047b4:	0f b7 00             	movzww (%bx,%si),%ax
801047b7:	8b 54 24             	mov    0x24(%si),%dx
801047ba:	18 89 02 c7          	sbb    %cl,-0x38fe(%bx,%di)
801047be:	42                   	inc    %dx
801047bf:	04 00                	add    $0x0,%al
801047c1:	00 00                	add    %al,(%bx,%si)
801047c3:	00 31                	add    %dh,(%bx,%di)
801047c5:	c0 c3 90             	rol    $0x90,%bl

801047c8 <__read32>:
801047c8:	8b 44 24             	mov    0x24(%si),%ax
801047cb:	10 03                	adc    %al,(%bp,%di)
801047cd:	44                   	inc    %sp
801047ce:	24 08                	and    $0x8,%al
801047d0:	8b 10                	mov    (%bx,%si),%dx
801047d2:	8b 44 24             	mov    0x24(%si),%ax
801047d5:	18 89 10 c7          	sbb    %cl,-0x38f0(%bx,%di)
801047d9:	40                   	inc    %ax
801047da:	04 00                	add    $0x0,%al
801047dc:	00 00                	add    %al,(%bx,%si)
801047de:	00 31                	add    %dh,(%bx,%di)
801047e0:	c0 c3 66             	rol    $0x66,%bl
801047e3:	90                   	nop

801047e4 <__write8>:
801047e4:	8b 44 24             	mov    0x24(%si),%ax
801047e7:	10 03                	adc    %al,(%bp,%di)
801047e9:	44                   	inc    %sp
801047ea:	24 08                	and    $0x8,%al
801047ec:	8b 54 24             	mov    0x24(%si),%dx
801047ef:	18 88 10 31          	sbb    %cl,0x3110(%bx,%si)
801047f3:	c0 c3 8d             	rol    $0x8d,%bl
801047f6:	76 00                	jbe    801047f8 <__write16>

801047f8 <__write16>:
801047f8:	8b 44 24             	mov    0x24(%si),%ax
801047fb:	10 03                	adc    %al,(%bp,%di)
801047fd:	44                   	inc    %sp
801047fe:	24 08                	and    $0x8,%al
80104800:	8b 54 24             	mov    0x24(%si),%dx
80104803:	18 66 89             	sbb    %ah,-0x77(%bp)
80104806:	10 31                	adc    %dh,(%bx,%di)
80104808:	c0 c3 66             	rol    $0x66,%bl
8010480b:	90                   	nop

8010480c <__write32>:
8010480c:	8b 44 24             	mov    0x24(%si),%ax
8010480f:	10 03                	adc    %al,(%bp,%di)
80104811:	44                   	inc    %sp
80104812:	24 08                	and    $0x8,%al
80104814:	8b 54 24             	mov    0x24(%si),%dx
80104817:	18 89 10 31          	sbb    %cl,0x3110(%bx,%di)
8010481b:	c0 c3 8d             	rol    $0x8d,%bl
8010481e:	76 00                	jbe    80104820 <__get_read_fp>

80104820 <__get_read_fp>:
80104820:	e8 73 0f             	call   80105796 <__x86.get_pc_thunk.ax+0x2>
80104823:	00 00                	add    %al,(%bx,%si)
80104825:	81 c2 9b 6a          	add    $0x6a9b,%dx
80104829:	00 00                	add    %al,(%bx,%si)
8010482b:	8b 44 24             	mov    0x24(%si),%ax
8010482e:	08 83 f8 10          	or     %al,0x10f8(%bp,%di)
80104832:	74 20                	je     80104854 <__get_read_fp+0x34>
80104834:	83 f8 20             	cmp    $0x20,%ax
80104837:	74 13                	je     8010484c <__get_read_fp+0x2c>
80104839:	83 f8 08             	cmp    $0x8,%ax
8010483c:	74 06                	je     80104844 <__get_read_fp+0x24>
8010483e:	31 c0                	xor    %ax,%ax
80104840:	c3                   	ret    
80104841:	8d 76 00             	lea    0x0(%bp),%si
80104844:	8d 82 d0 94          	lea    -0x6b30(%bp,%si),%ax
80104848:	ff                   	(bad)  
80104849:	ff c3                	inc    %bx
8010484b:	90                   	nop
8010484c:	8d 82 08 95          	lea    -0x6af8(%bp,%si),%ax
80104850:	ff                   	(bad)  
80104851:	ff c3                	inc    %bx
80104853:	90                   	nop
80104854:	8d 82 ec 94          	lea    -0x6b14(%bp,%si),%ax
80104858:	ff                   	(bad)  
80104859:	ff c3                	inc    %bx
8010485b:	90                   	nop

8010485c <__get_write_fp>:
8010485c:	e8 37 0f             	call   80105796 <__x86.get_pc_thunk.ax+0x2>
8010485f:	00 00                	add    %al,(%bx,%si)
80104861:	81 c2 5f 6a          	add    $0x6a5f,%dx
80104865:	00 00                	add    %al,(%bx,%si)
80104867:	8b 44 24             	mov    0x24(%si),%ax
8010486a:	08 83 f8 10          	or     %al,0x10f8(%bp,%di)
8010486e:	74 20                	je     80104890 <__get_write_fp+0x34>
80104870:	83 f8 20             	cmp    $0x20,%ax
80104873:	74 13                	je     80104888 <__get_write_fp+0x2c>
80104875:	83 f8 08             	cmp    $0x8,%ax
80104878:	74 06                	je     80104880 <__get_write_fp+0x24>
8010487a:	31 c0                	xor    %ax,%ax
8010487c:	c3                   	ret    
8010487d:	8d 76 00             	lea    0x0(%bp),%si
80104880:	8d 82 24 95          	lea    -0x6adc(%bp,%si),%ax
80104884:	ff                   	(bad)  
80104885:	ff c3                	inc    %bx
80104887:	90                   	nop
80104888:	8d 82 4c 95          	lea    -0x6ab4(%bp,%si),%ax
8010488c:	ff                   	(bad)  
8010488d:	ff c3                	inc    %bx
8010488f:	90                   	nop
80104890:	8d 82 38 95          	lea    -0x6ac8(%bp,%si),%ax
80104894:	ff                   	(bad)  
80104895:	ff c3                	inc    %bx
80104897:	90                   	nop

80104898 <__jump_handler>:
80104898:	e8 f7 0e             	call   80105792 <__x86.get_pc_thunk.si+0x2>
8010489b:	00 00                	add    %al,(%bx,%si)
8010489d:	05 23 6a             	add    $0x6a23,%ax
801048a0:	00 00                	add    %al,(%bx,%si)
801048a2:	8d 90 60 95          	lea    -0x6aa0(%bx,%si),%dx
801048a6:	ff                   	(bad)  
801048a7:	ff 89 90 14          	decw   0x1490(%bx,%di)
801048ab:	fe                   	(bad)  
801048ac:	ff                   	(bad)  
801048ad:	ff 8d 90 9c          	decw   -0x6370(%di)
801048b1:	95                   	xchg   %ax,%bp
801048b2:	ff                   	(bad)  
801048b3:	ff 89 90 18          	decw   0x1890(%bx,%di)
801048b7:	fe                   	(bad)  
801048b8:	ff                   	(bad)  
801048b9:	ff c3                	inc    %bx
801048bb:	90                   	nop

801048bc <__new>:
801048bc:	b8 ef ff             	mov    $0xffef,%ax
801048bf:	ff                   	(bad)  
801048c0:	ff c3                	inc    %bx
801048c2:	66 90                	xchg   %eax,%eax

801048c4 <__driver_init>:
801048c4:	57                   	push   %di
801048c5:	56                   	push   %si
801048c6:	53                   	push   %bx
801048c7:	e8 c0 0e             	call   8010578a <__text_end_kern+0x2>
801048ca:	00 00                	add    %al,(%bx,%si)
801048cc:	81 c3 f4 69          	add    $0x69f4,%bx
801048d0:	00 00                	add    %al,(%bx,%si)
801048d2:	83 ec 08             	sub    $0x8,%sp
801048d5:	8d bb c0 ff          	lea    -0x40(%bp,%di),%di
801048d9:	ff                   	(bad)  
801048da:	ff 57 6a             	call   *0x6a(%bx)
801048dd:	ff                   	(bad)  
801048de:	e8 41 cd             	call   80101622 <do_initcalls+0x2e>
801048e1:	ff                   	(bad)  
801048e2:	ff 58 5a             	lcall  *0x5a(%bx,%si)
801048e5:	6a 02                	push   $0x2
801048e7:	68 c8 00             	push   $0xc8
801048ea:	00 00                	add    %al,(%bx,%si)
801048ec:	e8 5b e7             	call   8010304a <__simple_free+0x2>
801048ef:	ff                   	(bad)  
801048f0:	ff 89 c6 89          	decw   -0x763a(%bx,%di)
801048f4:	3c 24                	cmp    $0x24,%al
801048f6:	6a ff                	push   $0xffff
801048f8:	8d 83 6a af          	lea    -0x5096(%bp,%di),%ax
801048fc:	ff                   	(bad)  
801048fd:	ff 50 6a             	call   *0x6a(%bx,%si)
80104900:	04 56                	add    $0x56,%al
80104902:	e8 41 cd             	call   80101646 <register_driver+0x22>
80104905:	ff                   	(bad)  
80104906:	ff 83 c4 14          	incw   0x14c4(%bp,%di)
8010490a:	56                   	push   %si
8010490b:	e8 64 cc             	call   80101572 <set_device_index+0x22>
8010490e:	ff                   	(bad)  
8010490f:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
80104913:	31 c0                	xor    %ax,%ax
80104915:	5b                   	pop    %bx
80104916:	5e                   	pop    %si
80104917:	5f                   	pop    %di
80104918:	c3                   	ret    
80104919:	8d 76 00             	lea    0x0(%bp),%si

8010491c <io_mem_init>:
8010491c:	53                   	push   %bx
8010491d:	83 ec 14             	sub    $0x14,%sp
80104920:	e8 67 0e             	call   8010578a <__text_end_kern+0x2>
80104923:	00 00                	add    %al,(%bx,%si)
80104925:	81 c3 9b 69          	add    $0x699b,%bx
80104929:	00 00                	add    %al,(%bx,%si)
8010492b:	8b 44 24             	mov    0x24(%si),%ax
8010492e:	1c 8d                	sbb    $0x8d,%al
80104930:	93                   	xchg   %ax,%bx
80104931:	60                   	pusha  
80104932:	95                   	xchg   %ax,%bp
80104933:	ff                   	(bad)  
80104934:	ff 89 90 b4          	decw   -0x4b70(%bx,%di)
80104938:	00 00                	add    %al,(%bx,%si)
8010493a:	00 8d 93 9c          	add    %cl,-0x636d(%di)
8010493e:	95                   	xchg   %ax,%bp
8010493f:	ff                   	(bad)  
80104940:	ff 89 90 b8          	decw   -0x4770(%bx,%di)
80104944:	00 00                	add    %al,(%bx,%si)
80104946:	00 8d 83 d8          	add    %cl,-0x277d(%di)
8010494a:	95                   	xchg   %ax,%bp
8010494b:	ff                   	(bad)  
8010494c:	ff 50 e8             	call   *-0x18(%bx,%si)
8010494f:	75 d4                	jne    80104925 <io_mem_init+0x9>
80104951:	ff                   	(bad)  
80104952:	ff 85 c0 0f          	incw   0xfc0(%di)
80104956:	95                   	xchg   %ax,%bp
80104957:	c0 0f b6             	rorb   $0xb6,(%bx)
8010495a:	c0                   	(bad)  
8010495b:	f7 d8                	neg    %ax
8010495d:	83 c4 18             	add    $0x18,%sp
80104960:	5b                   	pop    %bx
80104961:	c3                   	ret    
80104962:	66 90                	xchg   %eax,%eax

80104964 <__read8>:
80104964:	55                   	push   %bp
80104965:	57                   	push   %di
80104966:	56                   	push   %si
80104967:	53                   	push   %bx
80104968:	83 ec 1c             	sub    $0x1c,%sp
8010496b:	8b 6c 24             	mov    0x24(%si),%bp
8010496e:	30 8b 54 24          	xor    %cl,0x2454(%bp,%di)
80104972:	34 8b                	xor    $0x8b,%al
80104974:	4c                   	dec    %sp
80104975:	24 38                	and    $0x38,%al
80104977:	8b 74 24             	mov    0x24(%si),%si
8010497a:	3c 8b                	cmp    $0x8b,%al
8010497c:	7c 24                	jl     801049a2 <__read8+0x3e>
8010497e:	40                   	inc    %ax
8010497f:	8b 5d 48             	mov    0x48(%di),%bx
80104982:	85 db                	test   %bx,%bx
80104984:	74 3e                	je     801049c4 <__read8+0x60>
80104986:	89 54 24             	mov    %dx,0x24(%si)
80104989:	08 89 4c 24          	or     %cl,0x244c(%bx,%di)
8010498d:	0c 83                	or     $0x83,%al
8010498f:	ec                   	in     (%dx),%al
80104990:	08 6a 08             	or     %ch,0x8(%bp,%si)
80104993:	53                   	push   %bx
80104994:	ff 93 b4 00          	call   *0xb4(%bp,%di)
80104998:	00 00                	add    %al,(%bx,%si)
8010499a:	5a                   	pop    %dx
8010499b:	59                   	pop    %cx
8010499c:	ff 74 24             	pushw  0x24(%si)
8010499f:	4c                   	dec    %sp
801049a0:	8b 54 24             	mov    0x24(%si),%dx
801049a3:	14 8b                	adc    $0x8b,%al
801049a5:	4c                   	dec    %sp
801049a6:	24 18                	and    $0x18,%al
801049a8:	01 d6                	add    %dx,%si
801049aa:	11 cf                	adc    %cx,%di
801049ac:	57                   	push   %di
801049ad:	56                   	push   %si
801049ae:	ff 75 50             	pushw  0x50(%di)
801049b1:	ff 75 4c             	pushw  0x4c(%di)
801049b4:	53                   	push   %bx
801049b5:	ff d0                	call   *%ax
801049b7:	83 c4 20             	add    $0x20,%sp
801049ba:	31 c0                	xor    %ax,%ax
801049bc:	83 c4 1c             	add    $0x1c,%sp
801049bf:	5b                   	pop    %bx
801049c0:	5e                   	pop    %si
801049c1:	5f                   	pop    %di
801049c2:	5d                   	pop    %bp
801049c3:	c3                   	ret    
801049c4:	01 f2                	add    %si,%dx
801049c6:	ec                   	in     (%dx),%al
801049c7:	0f b6 d0             	movzbw %al,%dx
801049ca:	8b 44 24             	mov    0x24(%si),%ax
801049cd:	44                   	inc    %sp
801049ce:	89 10                	mov    %dx,(%bx,%si)
801049d0:	c7 40 04 00 00       	movw   $0x0,0x4(%bx,%si)
801049d5:	00 00                	add    %al,(%bx,%si)
801049d7:	31 c0                	xor    %ax,%ax
801049d9:	83 c4 1c             	add    $0x1c,%sp
801049dc:	5b                   	pop    %bx
801049dd:	5e                   	pop    %si
801049de:	5f                   	pop    %di
801049df:	5d                   	pop    %bp
801049e0:	c3                   	ret    
801049e1:	8d 76 00             	lea    0x0(%bp),%si

801049e4 <__write8>:
801049e4:	55                   	push   %bp
801049e5:	57                   	push   %di
801049e6:	56                   	push   %si
801049e7:	53                   	push   %bx
801049e8:	83 ec 1c             	sub    $0x1c,%sp
801049eb:	8b 74 24             	mov    0x24(%si),%si
801049ee:	30 8b 54 24          	xor    %cl,0x2454(%bp,%di)
801049f2:	34 8b                	xor    $0x8b,%al
801049f4:	4c                   	dec    %sp
801049f5:	24 38                	and    $0x38,%al
801049f7:	8b 7c 24             	mov    0x24(%si),%di
801049fa:	3c 8b                	cmp    $0x8b,%al
801049fc:	6c                   	insb   (%dx),%es:(%di)
801049fd:	24 40                	and    $0x40,%al
801049ff:	89 3c                	mov    %di,(%si)
80104a01:	24 89                	and    $0x89,%al
80104a03:	6c                   	insb   (%dx),%es:(%di)
80104a04:	24 04                	and    $0x4,%al
80104a06:	8b 7c 24             	mov    0x24(%si),%di
80104a09:	44                   	inc    %sp
80104a0a:	8b 6c 24             	mov    0x24(%si),%bp
80104a0d:	48                   	dec    %ax
80104a0e:	8b 5e 48             	mov    0x48(%bp),%bx
80104a11:	85 db                	test   %bx,%bx
80104a13:	74 4f                	je     80104a64 <__write8+0x80>
80104a15:	89 54 24             	mov    %dx,0x24(%si)
80104a18:	08 89 4c 24          	or     %cl,0x244c(%bx,%di)
80104a1c:	0c 83                	or     $0x83,%al
80104a1e:	ec                   	in     (%dx),%al
80104a1f:	08 6a 08             	or     %ch,0x8(%bp,%si)
80104a22:	53                   	push   %bx
80104a23:	ff 93 b8 00          	call   *0xb8(%bp,%di)
80104a27:	00 00                	add    %al,(%bx,%si)
80104a29:	89 7c 24             	mov    %di,0x24(%si)
80104a2c:	54                   	push   %sp
80104a2d:	89 6c 24             	mov    %bp,0x24(%si)
80104a30:	58                   	pop    %ax
80104a31:	8b 54 24             	mov    0x24(%si),%dx
80104a34:	18 8b 4c 24          	sbb    %cl,0x244c(%bp,%di)
80104a38:	1c 03                	sbb    $0x3,%al
80104a3a:	54                   	push   %sp
80104a3b:	24 10                	and    $0x10,%al
80104a3d:	13 4c 24             	adc    0x24(%si),%cx
80104a40:	14 89                	adc    $0x89,%al
80104a42:	54                   	push   %sp
80104a43:	24 4c                	and    $0x4c,%al
80104a45:	89 4c 24             	mov    %cx,0x24(%si)
80104a48:	50                   	push   %ax
80104a49:	8b 7e 50             	mov    0x50(%bp),%di
80104a4c:	8b 76 4c             	mov    0x4c(%bp),%si
80104a4f:	89 74 24             	mov    %si,0x24(%si)
80104a52:	44                   	inc    %sp
80104a53:	89 7c 24             	mov    %di,0x24(%si)
80104a56:	48                   	dec    %ax
80104a57:	89 5c 24             	mov    %bx,0x24(%si)
80104a5a:	40                   	inc    %ax
80104a5b:	83 c4 2c             	add    $0x2c,%sp
80104a5e:	5b                   	pop    %bx
80104a5f:	5e                   	pop    %si
80104a60:	5f                   	pop    %di
80104a61:	5d                   	pop    %bp
80104a62:	ff e0                	jmp    *%ax
80104a64:	03 14                	add    (%si),%dx
80104a66:	24 89                	and    $0x89,%al
80104a68:	f8                   	clc    
80104a69:	ee                   	out    %al,(%dx)
80104a6a:	31 c0                	xor    %ax,%ax
80104a6c:	83 c4 1c             	add    $0x1c,%sp
80104a6f:	5b                   	pop    %bx
80104a70:	5e                   	pop    %si
80104a71:	5f                   	pop    %di
80104a72:	5d                   	pop    %bp
80104a73:	c3                   	ret    

80104a74 <__write16>:
80104a74:	55                   	push   %bp
80104a75:	57                   	push   %di
80104a76:	56                   	push   %si
80104a77:	53                   	push   %bx
80104a78:	83 ec 1c             	sub    $0x1c,%sp
80104a7b:	8b 74 24             	mov    0x24(%si),%si
80104a7e:	30 8b 54 24          	xor    %cl,0x2454(%bp,%di)
80104a82:	34 8b                	xor    $0x8b,%al
80104a84:	4c                   	dec    %sp
80104a85:	24 38                	and    $0x38,%al
80104a87:	8b 7c 24             	mov    0x24(%si),%di
80104a8a:	3c 8b                	cmp    $0x8b,%al
80104a8c:	6c                   	insb   (%dx),%es:(%di)
80104a8d:	24 40                	and    $0x40,%al
80104a8f:	89 3c                	mov    %di,(%si)
80104a91:	24 89                	and    $0x89,%al
80104a93:	6c                   	insb   (%dx),%es:(%di)
80104a94:	24 04                	and    $0x4,%al
80104a96:	8b 7c 24             	mov    0x24(%si),%di
80104a99:	44                   	inc    %sp
80104a9a:	8b 6c 24             	mov    0x24(%si),%bp
80104a9d:	48                   	dec    %ax
80104a9e:	8b 5e 48             	mov    0x48(%bp),%bx
80104aa1:	85 db                	test   %bx,%bx
80104aa3:	74 4f                	je     80104af4 <__write16+0x80>
80104aa5:	89 54 24             	mov    %dx,0x24(%si)
80104aa8:	08 89 4c 24          	or     %cl,0x244c(%bx,%di)
80104aac:	0c 83                	or     $0x83,%al
80104aae:	ec                   	in     (%dx),%al
80104aaf:	08 6a 10             	or     %ch,0x10(%bp,%si)
80104ab2:	53                   	push   %bx
80104ab3:	ff 93 b8 00          	call   *0xb8(%bp,%di)
80104ab7:	00 00                	add    %al,(%bx,%si)
80104ab9:	89 7c 24             	mov    %di,0x24(%si)
80104abc:	54                   	push   %sp
80104abd:	89 6c 24             	mov    %bp,0x24(%si)
80104ac0:	58                   	pop    %ax
80104ac1:	8b 54 24             	mov    0x24(%si),%dx
80104ac4:	18 8b 4c 24          	sbb    %cl,0x244c(%bp,%di)
80104ac8:	1c 03                	sbb    $0x3,%al
80104aca:	54                   	push   %sp
80104acb:	24 10                	and    $0x10,%al
80104acd:	13 4c 24             	adc    0x24(%si),%cx
80104ad0:	14 89                	adc    $0x89,%al
80104ad2:	54                   	push   %sp
80104ad3:	24 4c                	and    $0x4c,%al
80104ad5:	89 4c 24             	mov    %cx,0x24(%si)
80104ad8:	50                   	push   %ax
80104ad9:	8b 7e 50             	mov    0x50(%bp),%di
80104adc:	8b 76 4c             	mov    0x4c(%bp),%si
80104adf:	89 74 24             	mov    %si,0x24(%si)
80104ae2:	44                   	inc    %sp
80104ae3:	89 7c 24             	mov    %di,0x24(%si)
80104ae6:	48                   	dec    %ax
80104ae7:	89 5c 24             	mov    %bx,0x24(%si)
80104aea:	40                   	inc    %ax
80104aeb:	83 c4 2c             	add    $0x2c,%sp
80104aee:	5b                   	pop    %bx
80104aef:	5e                   	pop    %si
80104af0:	5f                   	pop    %di
80104af1:	5d                   	pop    %bp
80104af2:	ff e0                	jmp    *%ax
80104af4:	03 14                	add    (%si),%dx
80104af6:	24 89                	and    $0x89,%al
80104af8:	f8                   	clc    
80104af9:	66 ef                	out    %eax,(%dx)
80104afb:	31 c0                	xor    %ax,%ax
80104afd:	83 c4 1c             	add    $0x1c,%sp
80104b00:	5b                   	pop    %bx
80104b01:	5e                   	pop    %si
80104b02:	5f                   	pop    %di
80104b03:	5d                   	pop    %bp
80104b04:	c3                   	ret    
80104b05:	8d 76 00             	lea    0x0(%bp),%si

80104b08 <__get_read_fp>:
80104b08:	e8 8b 0c             	call   80105796 <__x86.get_pc_thunk.ax+0x2>
80104b0b:	00 00                	add    %al,(%bx,%si)
80104b0d:	81 c2 b3 67          	add    $0x67b3,%dx
80104b11:	00 00                	add    %al,(%bx,%si)
80104b13:	8b 44 24             	mov    0x24(%si),%ax
80104b16:	08 83 f8 10          	or     %al,0x10f8(%bp,%di)
80104b1a:	74 20                	je     80104b3c <__get_read_fp+0x34>
80104b1c:	83 f8 20             	cmp    $0x20,%ax
80104b1f:	74 13                	je     80104b34 <__get_read_fp+0x2c>
80104b21:	83 f8 08             	cmp    $0x8,%ax
80104b24:	74 06                	je     80104b2c <__get_read_fp+0x24>
80104b26:	31 c0                	xor    %ax,%ax
80104b28:	c3                   	ret    
80104b29:	8d 76 00             	lea    0x0(%bp),%si
80104b2c:	8d 82 a4 96          	lea    -0x695c(%bp,%si),%ax
80104b30:	ff                   	(bad)  
80104b31:	ff c3                	inc    %bx
80104b33:	90                   	nop
80104b34:	8d 82 80 99          	lea    -0x6680(%bp,%si),%ax
80104b38:	ff                   	(bad)  
80104b39:	ff c3                	inc    %bx
80104b3b:	90                   	nop
80104b3c:	8d 82 f4 99          	lea    -0x660c(%bp,%si),%ax
80104b40:	ff                   	(bad)  
80104b41:	ff c3                	inc    %bx
80104b43:	90                   	nop

80104b44 <__get_write_fp>:
80104b44:	e8 4f 0c             	call   80105796 <__x86.get_pc_thunk.ax+0x2>
80104b47:	00 00                	add    %al,(%bx,%si)
80104b49:	81 c2 77 67          	add    $0x6777,%dx
80104b4d:	00 00                	add    %al,(%bx,%si)
80104b4f:	8b 44 24             	mov    0x24(%si),%ax
80104b52:	08 83 f8 10          	or     %al,0x10f8(%bp,%di)
80104b56:	74 20                	je     80104b78 <__get_write_fp+0x34>
80104b58:	83 f8 20             	cmp    $0x20,%ax
80104b5b:	74 13                	je     80104b70 <__get_write_fp+0x2c>
80104b5d:	83 f8 08             	cmp    $0x8,%ax
80104b60:	74 06                	je     80104b68 <__get_write_fp+0x24>
80104b62:	31 c0                	xor    %ax,%ax
80104b64:	c3                   	ret    
80104b65:	8d 76 00             	lea    0x0(%bp),%si
80104b68:	8d 82 24 97          	lea    -0x68dc(%bp,%si),%ax
80104b6c:	ff                   	(bad)  
80104b6d:	ff c3                	inc    %bx
80104b6f:	90                   	nop
80104b70:	8d 82 e4 98          	lea    -0x671c(%bp,%si),%ax
80104b74:	ff                   	(bad)  
80104b75:	ff c3                	inc    %bx
80104b77:	90                   	nop
80104b78:	8d 82 b4 97          	lea    -0x684c(%bp,%si),%ax
80104b7c:	ff                   	(bad)  
80104b7d:	ff c3                	inc    %bx
80104b7f:	90                   	nop

80104b80 <__jump_handler>:
80104b80:	e8 0f 0c             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80104b83:	00 00                	add    %al,(%bx,%si)
80104b85:	05 3b 67             	add    $0x673b,%ax
80104b88:	00 00                	add    %al,(%bx,%si)
80104b8a:	8d 90 48 98          	lea    -0x67b8(%bx,%si),%dx
80104b8e:	ff                   	(bad)  
80104b8f:	ff 89 90 f4          	decw   -0xb70(%bx,%di)
80104b93:	fe                   	(bad)  
80104b94:	ff                   	(bad)  
80104b95:	ff 8d 90 84          	decw   -0x7b70(%di)
80104b99:	98                   	cbtw   
80104b9a:	ff                   	(bad)  
80104b9b:	ff 89 90 f8          	decw   -0x770(%bx,%di)
80104b9f:	fe                   	(bad)  
80104ba0:	ff                   	(bad)  
80104ba1:	ff c3                	inc    %bx
80104ba3:	90                   	nop

80104ba4 <__write32>:
80104ba4:	55                   	push   %bp
80104ba5:	57                   	push   %di
80104ba6:	56                   	push   %si
80104ba7:	53                   	push   %bx
80104ba8:	83 ec 1c             	sub    $0x1c,%sp
80104bab:	e8 e4 0b             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80104bae:	00 00                	add    %al,(%bx,%si)
80104bb0:	05 10 67             	add    $0x6710,%ax
80104bb3:	00 00                	add    %al,(%bx,%si)
80104bb5:	8b 5c 24             	mov    0x24(%si),%bx
80104bb8:	30 8b 7c 24          	xor    %cl,0x247c(%bp,%di)
80104bbc:	34 8b                	xor    $0x8b,%al
80104bbe:	6c                   	insb   (%dx),%es:(%di)
80104bbf:	24 38                	and    $0x38,%al
80104bc1:	89 3c                	mov    %di,(%si)
80104bc3:	24 89                	and    $0x89,%al
80104bc5:	6c                   	insb   (%dx),%es:(%di)
80104bc6:	24 04                	and    $0x4,%al
80104bc8:	8b 74 24             	mov    0x24(%si),%si
80104bcb:	3c 8b                	cmp    $0x8b,%al
80104bcd:	7c 24                	jl     80104bf3 <__write32+0x4f>
80104bcf:	40                   	inc    %ax
80104bd0:	89 74 24             	mov    %si,0x24(%si)
80104bd3:	08 89 7c 24          	or     %cl,0x247c(%bx,%di)
80104bd7:	0c 8b                	or     $0x8b,%al
80104bd9:	7c 24                	jl     80104bff <__write32+0x5b>
80104bdb:	44                   	inc    %sp
80104bdc:	8b 6c 24             	mov    0x24(%si),%bp
80104bdf:	48                   	dec    %ax
80104be0:	8b 73 48             	mov    0x48(%bp,%di),%si
80104be3:	85 f6                	test   %si,%si
80104be5:	74 47                	je     80104c2e <__write32+0x8a>
80104be7:	83 ec 08             	sub    $0x8,%sp
80104bea:	6a 20                	push   $0x20
80104bec:	56                   	push   %si
80104bed:	ff 96 b8 00          	call   *0xb8(%bp)
80104bf1:	00 00                	add    %al,(%bx,%si)
80104bf3:	89 7c 24             	mov    %di,0x24(%si)
80104bf6:	54                   	push   %sp
80104bf7:	89 6c 24             	mov    %bp,0x24(%si)
80104bfa:	58                   	pop    %ax
80104bfb:	8b 54 24             	mov    0x24(%si),%dx
80104bfe:	10 8b 4c 24          	adc    %cl,0x244c(%bp,%di)
80104c02:	14 03                	adc    $0x3,%al
80104c04:	54                   	push   %sp
80104c05:	24 18                	and    $0x18,%al
80104c07:	13 4c 24             	adc    0x24(%si),%cx
80104c0a:	1c 89                	sbb    $0x89,%al
80104c0c:	54                   	push   %sp
80104c0d:	24 4c                	and    $0x4c,%al
80104c0f:	89 4c 24             	mov    %cx,0x24(%si)
80104c12:	50                   	push   %ax
80104c13:	8b 4b 4c             	mov    0x4c(%bp,%di),%cx
80104c16:	8b 5b 50             	mov    0x50(%bp,%di),%bx
80104c19:	89 4c 24             	mov    %cx,0x24(%si)
80104c1c:	44                   	inc    %sp
80104c1d:	89 5c 24             	mov    %bx,0x24(%si)
80104c20:	48                   	dec    %ax
80104c21:	89 74 24             	mov    %si,0x24(%si)
80104c24:	40                   	inc    %ax
80104c25:	83 c4 2c             	add    $0x2c,%sp
80104c28:	5b                   	pop    %bx
80104c29:	5e                   	pop    %si
80104c2a:	5f                   	pop    %di
80104c2b:	5d                   	pop    %bp
80104c2c:	ff e0                	jmp    *%ax
80104c2e:	83 ec 0c             	sub    $0xc,%sp
80104c31:	8d 90 71 af          	lea    -0x508f(%bx,%si),%dx
80104c35:	ff                   	(bad)  
80104c36:	ff 52 89             	call   *-0x77(%bp,%si)
80104c39:	c3                   	ret    
80104c3a:	e8 8d e6             	call   801032ca <__local_panic+0x2>
80104c3d:	ff                   	(bad)  
80104c3e:	ff                   	.byte 0xff
80104c3f:	90                   	nop

80104c40 <__read32>:
80104c40:	55                   	push   %bp
80104c41:	57                   	push   %di
80104c42:	56                   	push   %si
80104c43:	53                   	push   %bx
80104c44:	83 ec 1c             	sub    $0x1c,%sp
80104c47:	e8 48 0b             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80104c4a:	00 00                	add    %al,(%bx,%si)
80104c4c:	05 74 66             	add    $0x6674,%ax
80104c4f:	00 00                	add    %al,(%bx,%si)
80104c51:	8b 5c 24             	mov    0x24(%si),%bx
80104c54:	30 8b 74 24          	xor    %cl,0x2474(%bp,%di)
80104c58:	34 8b                	xor    $0x8b,%al
80104c5a:	7c 24                	jl     80104c80 <__read32+0x40>
80104c5c:	38 8b 54 24          	cmp    %cl,0x2454(%bp,%di)
80104c60:	3c 8b                	cmp    $0x8b,%al
80104c62:	4c                   	dec    %sp
80104c63:	24 40                	and    $0x40,%al
80104c65:	89 54 24             	mov    %dx,0x24(%si)
80104c68:	08 89 4c 24          	or     %cl,0x244c(%bx,%di)
80104c6c:	0c 8b                	or     $0x8b,%al
80104c6e:	6b 48 85 ed          	imul   $0xffed,-0x7b(%bx,%si),%cx
80104c72:	74 2f                	je     80104ca3 <__read32+0x63>
80104c74:	83 ec 08             	sub    $0x8,%sp
80104c77:	6a 20                	push   $0x20
80104c79:	55                   	push   %bp
80104c7a:	ff 95 b4 00          	call   *0xb4(%di)
80104c7e:	00 00                	add    %al,(%bx,%si)
80104c80:	5a                   	pop    %dx
80104c81:	59                   	pop    %cx
80104c82:	ff 74 24             	pushw  0x24(%si)
80104c85:	4c                   	dec    %sp
80104c86:	03 74 24             	add    0x24(%si),%si
80104c89:	14 13                	adc    $0x13,%al
80104c8b:	7c 24                	jl     80104cb1 <__read32+0x71>
80104c8d:	18 57 56             	sbb    %dl,0x56(%bx)
80104c90:	ff 73 50             	pushw  0x50(%bp,%di)
80104c93:	ff 73 4c             	pushw  0x4c(%bp,%di)
80104c96:	55                   	push   %bp
80104c97:	ff d0                	call   *%ax
80104c99:	31 c0                	xor    %ax,%ax
80104c9b:	83 c4 3c             	add    $0x3c,%sp
80104c9e:	5b                   	pop    %bx
80104c9f:	5e                   	pop    %si
80104ca0:	5f                   	pop    %di
80104ca1:	5d                   	pop    %bp
80104ca2:	c3                   	ret    
80104ca3:	83 ec 0c             	sub    $0xc,%sp
80104ca6:	8d 90 76 af          	lea    -0x508a(%bx,%si),%dx
80104caa:	ff                   	(bad)  
80104cab:	ff 52 89             	call   *-0x77(%bp,%si)
80104cae:	c3                   	ret    
80104caf:	e8 18 e6             	call   801032ca <__local_panic+0x2>
80104cb2:	ff                   	(bad)  
80104cb3:	ff                   	.byte 0xff

80104cb4 <__read16>:
80104cb4:	55                   	push   %bp
80104cb5:	57                   	push   %di
80104cb6:	56                   	push   %si
80104cb7:	53                   	push   %bx
80104cb8:	83 ec 1c             	sub    $0x1c,%sp
80104cbb:	e8 d4 0a             	call   80105792 <__x86.get_pc_thunk.si+0x2>
80104cbe:	00 00                	add    %al,(%bx,%si)
80104cc0:	05 00 66             	add    $0x6600,%ax
80104cc3:	00 00                	add    %al,(%bx,%si)
80104cc5:	8b 5c 24             	mov    0x24(%si),%bx
80104cc8:	30 8b 74 24          	xor    %cl,0x2474(%bp,%di)
80104ccc:	34 8b                	xor    $0x8b,%al
80104cce:	7c 24                	jl     80104cf4 <__read16+0x40>
80104cd0:	38 8b 54 24          	cmp    %cl,0x2454(%bp,%di)
80104cd4:	3c 8b                	cmp    $0x8b,%al
80104cd6:	4c                   	dec    %sp
80104cd7:	24 40                	and    $0x40,%al
80104cd9:	89 54 24             	mov    %dx,0x24(%si)
80104cdc:	08 89 4c 24          	or     %cl,0x244c(%bx,%di)
80104ce0:	0c 8b                	or     $0x8b,%al
80104ce2:	6b 48 85 ed          	imul   $0xffed,-0x7b(%bx,%si),%cx
80104ce6:	74 2f                	je     80104d17 <__read16+0x63>
80104ce8:	83 ec 08             	sub    $0x8,%sp
80104ceb:	6a 10                	push   $0x10
80104ced:	55                   	push   %bp
80104cee:	ff 95 b4 00          	call   *0xb4(%di)
80104cf2:	00 00                	add    %al,(%bx,%si)
80104cf4:	5a                   	pop    %dx
80104cf5:	59                   	pop    %cx
80104cf6:	ff 74 24             	pushw  0x24(%si)
80104cf9:	4c                   	dec    %sp
80104cfa:	03 74 24             	add    0x24(%si),%si
80104cfd:	14 13                	adc    $0x13,%al
80104cff:	7c 24                	jl     80104d25 <__read16+0x71>
80104d01:	18 57 56             	sbb    %dl,0x56(%bx)
80104d04:	ff 73 50             	pushw  0x50(%bp,%di)
80104d07:	ff 73 4c             	pushw  0x4c(%bp,%di)
80104d0a:	55                   	push   %bp
80104d0b:	ff d0                	call   *%ax
80104d0d:	31 c0                	xor    %ax,%ax
80104d0f:	83 c4 3c             	add    $0x3c,%sp
80104d12:	5b                   	pop    %bx
80104d13:	5e                   	pop    %si
80104d14:	5f                   	pop    %di
80104d15:	5d                   	pop    %bp
80104d16:	c3                   	ret    
80104d17:	83 ec 0c             	sub    $0xc,%sp
80104d1a:	8d 90 7a af          	lea    -0x5086(%bx,%si),%dx
80104d1e:	ff                   	(bad)  
80104d1f:	ff 52 89             	call   *-0x77(%bp,%si)
80104d22:	c3                   	ret    
80104d23:	e8 a4 e5             	call   801032ca <__local_panic+0x2>
80104d26:	ff                   	(bad)  
80104d27:	ff                   	.byte 0xff

80104d28 <__driver_init>:
80104d28:	57                   	push   %di
80104d29:	56                   	push   %si
80104d2a:	53                   	push   %bx
80104d2b:	e8 5c 0a             	call   8010578a <__text_end_kern+0x2>
80104d2e:	00 00                	add    %al,(%bx,%si)
80104d30:	81 c3 90 65          	add    $0x6590,%bx
80104d34:	00 00                	add    %al,(%bx,%si)
80104d36:	83 ec 08             	sub    $0x8,%sp
80104d39:	8d bb e0 ff          	lea    -0x20(%bp,%di),%di
80104d3d:	ff                   	(bad)  
80104d3e:	ff 57 6a             	call   *0x6a(%bx)
80104d41:	ff                   	(bad)  
80104d42:	e8 dd c8             	call   80101622 <do_initcalls+0x2e>
80104d45:	ff                   	(bad)  
80104d46:	ff 58 5a             	lcall  *0x5a(%bx,%si)
80104d49:	6a 02                	push   $0x2
80104d4b:	68 c8 00             	push   $0xc8
80104d4e:	00 00                	add    %al,(%bx,%si)
80104d50:	e8 f7 e2             	call   8010304a <__simple_free+0x2>
80104d53:	ff                   	(bad)  
80104d54:	ff 89 c6 89          	decw   -0x763a(%bx,%di)
80104d58:	3c 24                	cmp    $0x24,%al
80104d5a:	6a ff                	push   $0xffff
80104d5c:	8d 83 2a ad          	lea    -0x52d6(%bp,%di),%ax
80104d60:	ff                   	(bad)  
80104d61:	ff 50 6a             	call   *0x6a(%bx,%si)
80104d64:	04 56                	add    $0x56,%al
80104d66:	e8 dd c8             	call   80101646 <register_driver+0x22>
80104d69:	ff                   	(bad)  
80104d6a:	ff 83 c4 14          	incw   0x14c4(%bp,%di)
80104d6e:	56                   	push   %si
80104d6f:	e8 00 c8             	call   80101572 <set_device_index+0x22>
80104d72:	ff                   	(bad)  
80104d73:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
80104d77:	31 c0                	xor    %ax,%ax
80104d79:	5b                   	pop    %bx
80104d7a:	5e                   	pop    %si
80104d7b:	5f                   	pop    %di
80104d7c:	c3                   	ret    
80104d7d:	8d 76 00             	lea    0x0(%bp),%si

80104d80 <__new>:
80104d80:	55                   	push   %bp
80104d81:	57                   	push   %di
80104d82:	56                   	push   %si
80104d83:	53                   	push   %bx
80104d84:	83 ec 0c             	sub    $0xc,%sp
80104d87:	e8 00 0a             	call   8010578a <__text_end_kern+0x2>
80104d8a:	00 00                	add    %al,(%bx,%si)
80104d8c:	81 c3 34 65          	add    $0x6534,%bx
80104d90:	00 00                	add    %al,(%bx,%si)
80104d92:	8b 6c 24             	mov    0x24(%si),%bp
80104d95:	20 8d 75 40          	and    %cl,0x4075(%di)
80104d99:	b9 08 00             	mov    $0x8,%cx
80104d9c:	00 00                	add    %al,(%bx,%si)
80104d9e:	8d bb 7e af          	lea    -0x5082(%bp,%di),%di
80104da2:	ff                   	(bad)  
80104da3:	ff f3                	push   %bx
80104da5:	a6                   	cmpsb  %es:(%di),%ds:(%si)
80104da6:	0f 97 c2             	seta   %dl
80104da9:	0f 92 c0             	setb   %al
80104dac:	29 c2                	sub    %ax,%dx
80104dae:	0f be f2             	movsbw %dl,%si
80104db1:	85 f6                	test   %si,%si
80104db3:	0f 85 83 00          	jne    80104e3a <__new+0xba>
80104db7:	00 00                	add    %al,(%bx,%si)
80104db9:	83 ec 0c             	sub    $0xc,%sp
80104dbc:	8d 83 86 af          	lea    -0x507a(%bp,%di),%ax
80104dc0:	ff                   	(bad)  
80104dc1:	ff 50 e8             	call   *-0x18(%bx,%si)
80104dc4:	f4                   	hlt    
80104dc5:	c5 ff ff             	(bad)  
80104dc8:	58                   	pop    %ax
80104dc9:	5a                   	pop    %dx
80104dca:	6a 02                	push   $0x2
80104dcc:	68 c8 00             	push   $0xc8
80104dcf:	00 00                	add    %al,(%bx,%si)
80104dd1:	e8 76 e2             	call   8010304a <__simple_free+0x2>
80104dd4:	ff                   	(bad)  
80104dd5:	ff 89 c7 83          	decw   -0x7c39(%bx,%di)
80104dd9:	c4 10                	les    (%bx,%si),%dx
80104ddb:	85 c0                	test   %ax,%ax
80104ddd:	74 65                	je     80104e44 <__new+0xc4>
80104ddf:	83 ec 0c             	sub    $0xc,%sp
80104de2:	8d 83 e0 ff          	lea    -0x20(%bp,%di),%ax
80104de6:	ff                   	(bad)  
80104de7:	ff 50 6a             	call   *0x6a(%bx,%si)
80104dea:	ff 55 6a             	call   *0x6a(%di)
80104ded:	04 57                	add    $0x57,%al
80104def:	e8 54 c8             	call   80101646 <register_driver+0x22>
80104df2:	ff                   	(bad)  
80104df3:	ff 83 c4 14          	incw   0x14c4(%bp,%di)
80104df7:	8d 85 80 00          	lea    0x80(%di),%ax
80104dfb:	00 00                	add    %al,(%bx,%si)
80104dfd:	50                   	push   %ax
80104dfe:	e8 b1 c7             	call   801015b2 <dev_from_id+0xe>
80104e01:	ff                   	(bad)  
80104e02:	ff 89 47 48          	decw   0x4847(%bx,%di)
80104e06:	8b 85 c4 00          	mov    0xc4(%di),%ax
80104e0a:	00 00                	add    %al,(%bx,%si)
80104e0c:	8b 95 c8 00          	mov    0xc8(%di),%dx
80104e10:	00 00                	add    %al,(%bx,%si)
80104e12:	89 47 4c             	mov    %ax,0x4c(%bx)
80104e15:	89 57 50             	mov    %dx,0x50(%bx)
80104e18:	8b 85 c0 00          	mov    0xc0(%di),%ax
80104e1c:	00 00                	add    %al,(%bx,%si)
80104e1e:	89 87 9c 00          	mov    %ax,0x9c(%bx)
80104e22:	00 00                	add    %al,(%bx,%si)
80104e24:	89 3c                	mov    %di,(%si)
80104e26:	24 e8                	and    $0xe8,%al
80104e28:	48                   	dec    %ax
80104e29:	c7                   	(bad)  
80104e2a:	ff                   	(bad)  
80104e2b:	ff 83 c4 10          	incw   0x10c4(%bp,%di)
80104e2f:	89 f0                	mov    %si,%ax
80104e31:	83 c4 0c             	add    $0xc,%sp
80104e34:	5b                   	pop    %bx
80104e35:	5e                   	pop    %si
80104e36:	5f                   	pop    %di
80104e37:	5d                   	pop    %bp
80104e38:	c3                   	ret    
80104e39:	8d 76 00             	lea    0x0(%bp),%si
80104e3c:	be a5 ff             	mov    $0xffa5,%si
80104e3f:	ff                   	(bad)  
80104e40:	ff                   	(bad)  
80104e41:	eb ec                	jmp    80104e2f <__new+0xaf>
80104e43:	90                   	nop
80104e44:	be f4 ff             	mov    $0xfff4,%si
80104e47:	ff                   	(bad)  
80104e48:	ff                   	(bad)  
80104e49:	eb e4                	jmp    80104e2f <__new+0xaf>
80104e4b:	90                   	nop

80104e4c <portio_bus_connect>:
80104e4c:	8b 44 24             	mov    0x24(%si),%ax
80104e4f:	04 8b                	add    $0x8b,%al
80104e51:	54                   	push   %sp
80104e52:	24 0c                	and    $0xc,%al
80104e54:	8b 4c 24             	mov    0x24(%si),%cx
80104e57:	10 89 50 4c          	adc    %cl,0x4c50(%bx,%di)
80104e5b:	89 48 50             	mov    %cx,0x50(%bx,%si)
80104e5e:	8b 54 24             	mov    0x24(%si),%dx
80104e61:	08 89 50 48          	or     %cl,0x4850(%bx,%di)
80104e65:	c3                   	ret    
80104e66:	66 90                	xchg   %eax,%eax

80104e68 <io_port_init>:
80104e68:	53                   	push   %bx
80104e69:	83 ec 14             	sub    $0x14,%sp
80104e6c:	e8 1b 09             	call   8010578a <__text_end_kern+0x2>
80104e6f:	00 00                	add    %al,(%bx,%si)
80104e71:	81 c3 4f 64          	add    $0x644f,%bx
80104e75:	00 00                	add    %al,(%bx,%si)
80104e77:	8b 44 24             	mov    0x24(%si),%ax
80104e7a:	1c 8d                	sbb    $0x8d,%al
80104e7c:	93                   	xchg   %ax,%bx
80104e7d:	48                   	dec    %ax
80104e7e:	98                   	cbtw   
80104e7f:	ff                   	(bad)  
80104e80:	ff 89 90 b4          	decw   -0x4b70(%bx,%di)
80104e84:	00 00                	add    %al,(%bx,%si)
80104e86:	00 8d 93 84          	add    %cl,-0x7b6d(%di)
80104e8a:	98                   	cbtw   
80104e8b:	ff                   	(bad)  
80104e8c:	ff 89 90 b8          	decw   -0x4770(%bx,%di)
80104e90:	00 00                	add    %al,(%bx,%si)
80104e92:	00 8d 83 c0          	add    %cl,-0x3f7d(%di)
80104e96:	98                   	cbtw   
80104e97:	ff                   	(bad)  
80104e98:	ff 50 e8             	call   *-0x18(%bx,%si)
80104e9b:	29 cf                	sub    %cx,%di
80104e9d:	ff                   	(bad)  
80104e9e:	ff 85 c0 0f          	incw   0xfc0(%di)
80104ea2:	95                   	xchg   %ax,%bp
80104ea3:	c0 0f b6             	rorb   $0xb6,(%bx)
80104ea6:	c0                   	(bad)  
80104ea7:	f7 d8                	neg    %ax
80104ea9:	83 c4 18             	add    $0x18,%sp
80104eac:	5b                   	pop    %bx
80104ead:	c3                   	ret    
80104eae:	66 90                	xchg   %eax,%eax

80104eb0 <vsnprintf>:
80104eb0:	55                   	push   %bp
80104eb1:	57                   	push   %di
80104eb2:	56                   	push   %si
80104eb3:	53                   	push   %bx
80104eb4:	83 ec 4c             	sub    $0x4c,%sp
80104eb7:	e8 d0 08             	call   8010578a <__text_end_kern+0x2>
80104eba:	00 00                	add    %al,(%bx,%si)
80104ebc:	81 c3 04 64          	add    $0x6404,%bx
80104ec0:	00 00                	add    %al,(%bx,%si)
80104ec2:	8b 4c 24             	mov    0x24(%si),%cx
80104ec5:	68 31 ed             	push   $0xed31
80104ec8:	c7 44 24 0c 00       	movw   $0xc,0x24(%si)
80104ecd:	00 00                	add    %al,(%bx,%si)
80104ecf:	00 c7                	add    %al,%bh
80104ed1:	04 24                	add    $0x24,%al
80104ed3:	00 00                	add    %al,(%bx,%si)
80104ed5:	00 00                	add    %al,(%bx,%si)
80104ed7:	c7 44 24 14 00       	movw   $0x14,0x24(%si)
80104edc:	00 00                	add    %al,(%bx,%si)
80104ede:	00 8d 83 a3          	add    %cl,-0x5c7d(%di)
80104ee2:	af                   	scas   %es:(%di),%ax
80104ee3:	ff                   	(bad)  
80104ee4:	ff 89 44 24          	decw   0x2444(%bx,%di)
80104ee8:	1c 8d                	sbb    $0x8d,%al
80104eea:	44                   	inc    %sp
80104eeb:	24 26                	and    $0x26,%al
80104eed:	89 44 24             	mov    %ax,0x24(%si)
80104ef0:	08 8a 01 84          	or     %cl,-0x7bff(%bp,%si)
80104ef4:	c0                   	(bad)  
80104ef5:	74 28                	je     80104f1f <vsnprintf+0x6f>
80104ef7:	3c 25                	cmp    $0x25,%al
80104ef9:	74 49                	je     80104f44 <vsnprintf+0x94>
80104efb:	8b 54 24             	mov    0x24(%si),%dx
80104efe:	0c ff                	or     $0xff,%al
80104f00:	44                   	inc    %sp
80104f01:	24 0c                	and    $0xc,%al
80104f03:	8b 7c 24             	mov    0x24(%si),%di
80104f06:	0c 8b                	or     $0x8b,%al
80104f08:	74 24                	je     80104f2e <vsnprintf+0x7e>
80104f0a:	60                   	pusha  
80104f0b:	88 04                	mov    %al,(%si)
80104f0d:	16                   	push   %ss
80104f0e:	3b 7c 24             	cmp    0x24(%si),%di
80104f11:	64 0f 84 55 04       	fs je  8010536b <.L15+0x1d2>
80104f16:	00 00                	add    %al,(%bx,%si)
80104f18:	41                   	inc    %cx
80104f19:	8a 01                	mov    (%bx,%di),%al
80104f1b:	84 c0                	test   %al,%al
80104f1d:	75 d8                	jne    80104ef7 <vsnprintf+0x47>
80104f1f:	8b 7c 24             	mov    0x24(%si),%di
80104f22:	60                   	pusha  
80104f23:	8b 44 24             	mov    0x24(%si),%ax
80104f26:	0c c6                	or     $0xc6,%al
80104f28:	04 07                	add    $0x7,%al
80104f2a:	00 40 39             	add    %al,0x39(%bx,%si)
80104f2d:	44                   	inc    %sp
80104f2e:	24 64                	and    $0x64,%al
80104f30:	0f 84 00 04          	je     80105334 <.L15+0x19b>
80104f34:	00 00                	add    %al,(%bx,%si)
80104f36:	8b 44 24             	mov    0x24(%si),%ax
80104f39:	0c 83                	or     $0x83,%al
80104f3b:	c4 4c 5b             	les    0x5b(%si),%cx
80104f3e:	5e                   	pop    %si
80104f3f:	5f                   	pop    %di
80104f40:	5d                   	pop    %bp
80104f41:	c3                   	ret    
80104f42:	66 90                	xchg   %eax,%eax
80104f44:	8d 41 01             	lea    0x1(%bx,%di),%ax
80104f47:	89 44 24             	mov    %ax,0x24(%si)
80104f4a:	10 0f                	adc    %cl,(%bx)
80104f4c:	be 41 01             	mov    $0x141,%si
80104f4f:	8d 50 db             	lea    -0x25(%bx,%si),%dx
80104f52:	80 fa 53             	cmp    $0x53,%dl
80104f55:	0f 87 e0 00          	ja     80105039 <.L12+0x18>
80104f59:	00 00                	add    %al,(%bx,%si)
80104f5b:	0f b6 d2             	movzbw %dl,%dx
80104f5e:	8b bc 93 10          	mov    0x1093(%si),%di
80104f62:	a5                   	movsw  %ds:(%si),%es:(%di)
80104f63:	ff                   	(bad)  
80104f64:	ff 01                	incw   (%bx,%di)
80104f66:	df ff                	(bad)  
80104f68:	e7                   	.byte 0xe7

80104f69 <.L63>:
80104f69:	ba 10 00             	mov    $0x10,%dx
80104f6c:	00 00                	add    %al,(%bx,%si)
80104f6e:	c7 44 24 14 08       	movw   $0x814,0x24(%si)
80104f73:	00 00                	add    %al,(%bx,%si)
80104f75:	00 c7                	add    %al,%bh
80104f77:	44                   	inc    %sp
80104f78:	24 18                	and    $0x18,%al
80104f7a:	00 00                	add    %al,(%bx,%si)
80104f7c:	00 00                	add    %al,(%bx,%si)
80104f7e:	8b 44 24             	mov    0x24(%si),%ax
80104f81:	6c                   	insb   (%dx),%es:(%di)
80104f82:	8b 30                	mov    (%bx,%si),%si
80104f84:	31 ff                	xor    %di,%di
80104f86:	83 c0 04             	add    $0x4,%ax
80104f89:	89 44 24             	mov    %ax,0x24(%si)
80104f8c:	6c                   	insb   (%dx),%es:(%di)
80104f8d:	8d 76 00             	lea    0x0(%bp),%si
80104f90:	89 f9                	mov    %di,%cx
80104f92:	09 f1                	or     %si,%cx
80104f94:	0f 84 9d 02          	je     80105235 <.L15+0x9c>
80104f98:	00 00                	add    %al,(%bx,%si)
80104f9a:	89 14                	mov    %dx,(%si)
80104f9c:	24 c1                	and    $0xc1,%al
80104f9e:	fa                   	cli    
80104f9f:	1f                   	pop    %ds
80104fa0:	89 54 24             	mov    %dx,0x24(%si)
80104fa3:	04 31                	add    $0x31,%al
80104fa5:	ed                   	in     (%dx),%ax
80104fa6:	eb 28                	jmp    80104fd0 <.L63+0x67>
80104fa8:	83 c0 30             	add    $0x30,%ax
80104fab:	8b 4c 24             	mov    0x24(%si),%cx
80104fae:	08 88 04 29          	or     %cl,0x2904(%bx,%si)
80104fb2:	ff 74 24             	pushw  0x24(%si)
80104fb5:	04 ff                	add    $0xff,%al
80104fb7:	74 24                	je     80104fdd <.L63+0x74>
80104fb9:	04 57                	add    $0x57,%al
80104fbb:	56                   	push   %si
80104fbc:	e8 7b 05             	call   8010553a <handle_interrupt+0x22>
80104fbf:	00 00                	add    %al,(%bx,%si)
80104fc1:	83 c4 10             	add    $0x10,%sp
80104fc4:	89 c6                	mov    %ax,%si
80104fc6:	89 d7                	mov    %dx,%di
80104fc8:	09 c2                	or     %ax,%dx
80104fca:	0f 84 71 02          	je     8010523f <.L15+0xa6>
80104fce:	00 00                	add    %al,(%bx,%si)
80104fd0:	45                   	inc    %bp
80104fd1:	ff 74 24             	pushw  0x24(%si)
80104fd4:	04 ff                	add    $0xff,%al
80104fd6:	74 24                	je     80104ffc <.L62+0x10>
80104fd8:	04 57                	add    $0x57,%al
80104fda:	56                   	push   %si
80104fdb:	e8 6c 06             	call   8010564a <__udivdi3+0x10e>
80104fde:	00 00                	add    %al,(%bx,%si)
80104fe0:	83 c4 10             	add    $0x10,%sp
80104fe3:	3c 09                	cmp    $0x9,%al
80104fe5:	7e c1                	jle    80104fa8 <.L63+0x3f>
80104fe7:	83 c0 57             	add    $0x57,%ax
80104fea:	eb bf                	jmp    80104fab <.L63+0x42>

80104fec <.L62>:
80104fec:	ba 08 00             	mov    $0x8,%dx
80104fef:	00 00                	add    %al,(%bx,%si)
80104ff1:	85 ed                	test   %bp,%bp
80104ff3:	0f 84 72 01          	je     80105169 <.L17+0xb>
80104ff7:	00 00                	add    %al,(%bx,%si)
80104ff9:	8b 04                	mov    (%si),%ax
80104ffb:	24 25                	and    $0x25,%al
80104ffd:	00 01                	add    %al,(%bx,%di)
80104fff:	00 00                	add    %al,(%bx,%si)
80105001:	89 44 24             	mov    %ax,0x24(%si)
80105004:	18 4d 0f             	sbb    %cl,0xf(%di)
80105007:	84 72 ff             	test   %dh,-0x1(%bp,%si)
8010500a:	ff                   	(bad)  
8010500b:	ff 8b 44 24          	decw   0x2444(%bp,%di)
8010500f:	6c                   	insb   (%dx),%es:(%di)
80105010:	8b 30                	mov    (%bx,%si),%si
80105012:	8b 78 04             	mov    0x4(%bx,%si),%di
80105015:	83 c0 08             	add    $0x8,%ax
80105018:	89 44 24             	mov    %ax,0x24(%si)
8010501b:	6c                   	insb   (%dx),%es:(%di)
8010501c:	e9 6f ff             	jmp    80104f8e <.L63+0x25>
8010501f:	ff                   	(bad)  
80105020:	ff                   	.byte 0xff

80105021 <.L12>:
80105021:	45                   	inc    %bp
80105022:	8b 7c 24             	mov    0x24(%si),%di
80105025:	10 0f                	adc    %cl,(%bx)
80105027:	be 47 01             	mov    $0x147,%si
8010502a:	47                   	inc    %di
8010502b:	89 7c 24             	mov    %di,0x24(%si)
8010502e:	10 8d 50 db          	adc    %cl,-0x24b0(%di)
80105032:	80 fa 53             	cmp    $0x53,%dl
80105035:	0f 86 20 ff          	jbe    80104f59 <vsnprintf+0xa9>
80105039:	ff                   	(bad)  
8010503a:	ff                   	.byte 0xff

8010503b <.L5>:
8010503b:	8b 44 24             	mov    0x24(%si),%ax
8010503e:	0c 8d                	or     $0x8d,%al
80105040:	50                   	push   %ax
80105041:	01 8b 7c 24          	add    %cx,0x247c(%bp,%di)
80105045:	60                   	pusha  
80105046:	c6 04 07             	movb   $0x7,(%si)
80105049:	25 39 54             	and    $0x5439,%ax
8010504c:	24 64                	and    $0x64,%al
8010504e:	0f 84 cc 01          	je     8010521e <.L15+0x85>
80105052:	00 00                	add    %al,(%bx,%si)
80105054:	8b 4c 24             	mov    0x24(%si),%cx
80105057:	10 8a 01 89          	adc    %cl,-0x76ff(%bp,%si)
8010505b:	54                   	push   %sp
8010505c:	24 0c                	and    $0xc,%al
8010505e:	e9 9c fe             	jmp    80104efd <vsnprintf+0x4d>
80105061:	ff                   	(bad)  
80105062:	ff                   	.byte 0xff

80105063 <.L10>:
80105063:	8b 7c 24             	mov    0x24(%si),%di
80105066:	0c 89                	or     $0x89,%al
80105068:	f8                   	clc    
80105069:	40                   	inc    %ax
8010506a:	8b 4c 24             	mov    0x24(%si),%cx
8010506d:	6c                   	insb   (%dx),%es:(%di)
8010506e:	8d 51 04             	lea    0x4(%bx,%di),%dx
80105071:	8b 09                	mov    (%bx,%di),%cx
80105073:	8b 74 24             	mov    0x24(%si),%si
80105076:	60                   	pusha  
80105077:	88 0c                	mov    %cl,(%si)
80105079:	3e 39 44 24          	cmp    %ax,%ds:0x24(%si)
8010507d:	64 0f 84 37 03       	fs je  801053b9 <.L15+0x220>
80105082:	00 00                	add    %al,(%bx,%si)
80105084:	8b 4c 24             	mov    0x24(%si),%cx
80105087:	10 41 89             	adc    %al,-0x77(%bx,%di)
8010508a:	54                   	push   %sp
8010508b:	24 6c                	and    $0x6c,%al
8010508d:	89 44 24             	mov    %ax,0x24(%si)
80105090:	0c c7                	or     $0xc7,%al
80105092:	04 24                	add    $0x24,%al
80105094:	00 00                	add    %al,(%bx,%si)
80105096:	00 00                	add    %al,(%bx,%si)
80105098:	c7 44 24 14 00       	movw   $0x14,0x24(%si)
8010509d:	00 00                	add    %al,(%bx,%si)
8010509f:	00 e9                	add    %ch,%cl
801050a1:	4c                   	dec    %sp
801050a2:	fe                   	(bad)  
801050a3:	ff                   	(bad)  
801050a4:	ff                   	.byte 0xff

801050a5 <.L81>:
801050a5:	8b 4c 24             	mov    0x24(%si),%cx
801050a8:	10 8b 74 24          	adc    %cl,0x2474(%bp,%di)
801050ac:	14 8d                	adc    $0x8d,%al
801050ae:	76 00                	jbe    801050b0 <.L81+0xb>
801050b0:	8d 14                	lea    (%si),%dx
801050b2:	b6 01                	mov    $0x1,%dh
801050b4:	d2 8d 74 02          	rorb   %cl,0x274(%di)
801050b8:	d0 41 0f             	rolb   0xf(%bx,%di)
801050bb:	be 01 8d             	mov    $0x8d01,%si
801050be:	50                   	push   %ax
801050bf:	d0 80 fa 09          	rolb   0x9fa(%bx,%si)
801050c3:	76 eb                	jbe    801050b0 <.L81+0xb>
801050c5:	89 4c 24             	mov    %cx,0x24(%si)
801050c8:	10 89 74 24          	adc    %cl,0x2474(%bx,%di)
801050cc:	14 e9                	adc    $0xe9,%al
801050ce:	7d fe                	jge    801050ce <.L81+0x29>
801050d0:	ff                   	(bad)  
801050d1:	ff                   	.byte 0xff

801050d2 <.L11>:
801050d2:	8b 44 24             	mov    0x24(%si),%ax
801050d5:	6c                   	insb   (%dx),%es:(%di)
801050d6:	8b 30                	mov    (%bx,%si),%si
801050d8:	85 ed                	test   %bp,%bp
801050da:	0f 84 9e 02          	je     8010537c <.L15+0x1e3>
801050de:	00 00                	add    %al,(%bx,%si)
801050e0:	4d                   	dec    %bp
801050e1:	0f 84 97 02          	je     8010537c <.L15+0x1e3>
801050e5:	00 00                	add    %al,(%bx,%si)
801050e7:	8b 78 04             	mov    0x4(%bx,%si),%di
801050ea:	83 c0 08             	add    $0x8,%ax
801050ed:	89 44 24             	mov    %ax,0x24(%si)
801050f0:	6c                   	insb   (%dx),%es:(%di)
801050f1:	85 ff                	test   %di,%di
801050f3:	0f 88 99 02          	js     80105390 <.L15+0x1f7>
801050f7:	00 00                	add    %al,(%bx,%si)
801050f9:	8b 04                	mov    (%si),%ax
801050fb:	24 25                	and    $0x25,%al
801050fd:	00 01                	add    %al,(%bx,%di)
801050ff:	00 00                	add    %al,(%bx,%si)
80105101:	89 44 24             	mov    %ax,0x24(%si)
80105104:	18 ba 0a 00          	sbb    %bh,0xa(%bp,%si)
80105108:	00 00                	add    %al,(%bx,%si)
8010510a:	e9 81 fe             	jmp    80104f8e <.L63+0x25>
8010510d:	ff                   	(bad)  
8010510e:	ff                   	.byte 0xff

8010510f <.L8>:
8010510f:	8b 7c 24             	mov    0x24(%si),%di
80105112:	10 0f                	adc    %cl,(%bx)
80105114:	be 47 01             	mov    $0x147,%si
80105117:	47                   	inc    %di
80105118:	89 7c 24             	mov    %di,0x24(%si)
8010511b:	10 c7                	adc    %al,%bh
8010511d:	04 24                	add    $0x24,%al
8010511f:	02 00                	add    (%bx,%si),%al
80105121:	00 00                	add    %al,(%bx,%si)
80105123:	e9 27 fe             	jmp    80104f4d <vsnprintf+0x9d>
80105126:	ff                   	(bad)  
80105127:	ff                   	.byte 0xff

80105128 <.L6>:
80105128:	8b 7c 24             	mov    0x24(%si),%di
8010512b:	0c 89                	or     $0x89,%al
8010512d:	f8                   	clc    
8010512e:	40                   	inc    %ax
8010512f:	8b 4c 24             	mov    0x24(%si),%cx
80105132:	60                   	pusha  
80105133:	c6 04 39             	movb   $0x39,(%si)
80105136:	25 39 44             	and    $0x4439,%ax
80105139:	24 64                	and    $0x64,%al
8010513b:	0f 84 6a 02          	je     801053a9 <.L15+0x210>
8010513f:	00 00                	add    %al,(%bx,%si)
80105141:	8b 4c 24             	mov    0x24(%si),%cx
80105144:	10 41 89             	adc    %al,-0x77(%bx,%di)
80105147:	44                   	inc    %sp
80105148:	24 0c                	and    $0xc,%al
8010514a:	c7 04 24 00          	movw   $0x24,(%si)
8010514e:	00 00                	add    %al,(%bx,%si)
80105150:	00 c7                	add    %al,%bh
80105152:	44                   	inc    %sp
80105153:	24 14                	and    $0x14,%al
80105155:	00 00                	add    %al,(%bx,%si)
80105157:	00 00                	add    %al,(%bx,%si)
80105159:	e9 93 fd             	jmp    80104eef <vsnprintf+0x3f>
8010515c:	ff                   	(bad)  
8010515d:	ff                   	.byte 0xff

8010515e <.L17>:
8010515e:	ba 10 00             	mov    $0x10,%dx
80105161:	00 00                	add    %al,(%bx,%si)
80105163:	85 ed                	test   %bp,%bp
80105165:	0f 85 8e fe          	jne    80104ff7 <.L62+0xb>
80105169:	ff                   	(bad)  
8010516a:	ff 8b 44 24          	decw   0x2444(%bp,%di)
8010516e:	6c                   	insb   (%dx),%es:(%di)
8010516f:	8b 30                	mov    (%bx,%si),%si
80105171:	31 ff                	xor    %di,%di
80105173:	8b 04                	mov    (%si),%ax
80105175:	24 25                	and    $0x25,%al
80105177:	00 01                	add    %al,(%bx,%di)
80105179:	00 00                	add    %al,(%bx,%si)
8010517b:	89 44 24             	mov    %ax,0x24(%si)
8010517e:	18 8b 44 24          	sbb    %cl,0x2444(%bp,%di)
80105182:	6c                   	insb   (%dx),%es:(%di)
80105183:	83 c0 04             	add    $0x4,%ax
80105186:	89 44 24             	mov    %ax,0x24(%si)
80105189:	6c                   	insb   (%dx),%es:(%di)
8010518a:	e9 01 fe             	jmp    80104f8e <.L63+0x25>
8010518d:	ff                   	(bad)  
8010518e:	ff                   	.byte 0xff

8010518f <.L16>:
8010518f:	ba 0a 00             	mov    $0xa,%dx
80105192:	00 00                	add    %al,(%bx,%si)
80105194:	e9 58 fe             	jmp    80104fef <.L62+0x3>
80105197:	ff                   	(bad)  
80105198:	ff                   	.byte 0xff

80105199 <.L15>:
80105199:	8b 44 24             	mov    0x24(%si),%ax
8010519c:	6c                   	insb   (%dx),%es:(%di)
8010519d:	8b 30                	mov    (%bx,%si),%si
8010519f:	85 f6                	test   %si,%si
801051a1:	0f 84 24 02          	je     801053c9 <.L15+0x230>
801051a5:	00 00                	add    %al,(%bx,%si)
801051a7:	8a 06 84 c0          	mov    -0x3f7c,%al
801051ab:	0f 84 25 02          	je     801053d4 <.L15+0x23b>
801051af:	00 00                	add    %al,(%bx,%si)
801051b1:	8b 7c 24             	mov    0x24(%si),%di
801051b4:	0c 8d                	or     $0x8d,%al
801051b6:	57                   	push   %di
801051b7:	01 03                	add    %ax,(%bp,%di)
801051b9:	7c 24                	jl     801051df <.L15+0x46>
801051bb:	60                   	pusha  
801051bc:	88 07                	mov    %al,(%bx)
801051be:	39 54 24             	cmp    %dx,0x24(%si)
801051c1:	64 74 5c             	fs je  80105220 <.L15+0x87>
801051c4:	31 c0                	xor    %ax,%ax
801051c6:	89 2c                	mov    %bp,(%si)
801051c8:	24 8b                	and    $0x8b,%al
801051ca:	6c                   	insb   (%dx),%es:(%di)
801051cb:	24 64                	and    $0x64,%al
801051cd:	eb 09                	jmp    801051d8 <.L15+0x3f>
801051cf:	90                   	nop
801051d0:	42                   	inc    %dx
801051d1:	88 0c                	mov    %cl,(%si)
801051d3:	07                   	pop    %es
801051d4:	39 d5                	cmp    %dx,%bp
801051d6:	74 48                	je     80105220 <.L15+0x87>
801051d8:	40                   	inc    %ax
801051d9:	8a 0c                	mov    (%si),%cl
801051db:	06                   	push   %es
801051dc:	84 c9                	test   %cl,%cl
801051de:	75 f0                	jne    801051d0 <.L15+0x37>
801051e0:	8b 2c                	mov    (%si),%bp
801051e2:	24 39                	and    $0x39,%al
801051e4:	44                   	inc    %sp
801051e5:	24 14                	and    $0x14,%al
801051e7:	0f 8e 5e 01          	jle    80105349 <.L15+0x1b0>
801051eb:	00 00                	add    %al,(%bx,%si)
801051ed:	8d 4a 01             	lea    0x1(%bp,%si),%cx
801051f0:	8b 7c 24             	mov    0x24(%si),%di
801051f3:	60                   	pusha  
801051f4:	c6 04 17             	movb   $0x17,(%si)
801051f7:	20 39                	and    %bh,(%bx,%di)
801051f9:	4c                   	dec    %sp
801051fa:	24 64                	and    $0x64,%al
801051fc:	74 22                	je     80105220 <.L15+0x87>
801051fe:	03 54 24             	add    0x24(%si),%dx
80105201:	14 29                	adc    $0x29,%al
80105203:	c2 89 d0             	ret    $0xd089
80105206:	89 ca                	mov    %cx,%dx
80105208:	39 c2                	cmp    %ax,%dx
8010520a:	0f 84 3b 01          	je     80105349 <.L15+0x1b0>
8010520e:	00 00                	add    %al,(%bx,%si)
80105210:	42                   	inc    %dx
80105211:	8b 7c 24             	mov    0x24(%si),%di
80105214:	60                   	pusha  
80105215:	c6 44 17 ff          	movb   $0xff,0x17(%si)
80105219:	20 39                	and    %bh,(%bx,%di)
8010521b:	54                   	push   %sp
8010521c:	24 64                	and    $0x64,%al
8010521e:	75 e8                	jne    80105208 <.L15+0x6f>
80105220:	8b 44 24             	mov    0x24(%si),%ax
80105223:	60                   	pusha  
80105224:	8b 7c 24             	mov    0x24(%si),%di
80105227:	64 c6 44 38 ff       	movb   $0xff,%fs:0x38(%si)
8010522c:	00 89 f8 83          	add    %cl,-0x7c08(%bx,%di)
80105230:	c4 4c 5b             	les    0x5b(%si),%cx
80105233:	5e                   	pop    %si
80105234:	5f                   	pop    %di
80105235:	5d                   	pop    %bp
80105236:	c3                   	ret    
80105237:	c6 44 24 27          	movb   $0x27,0x24(%si)
8010523b:	30 bd 01 00          	xor    %bh,0x1(%di)
8010523f:	00 00                	add    %al,(%bx,%si)
80105241:	8b 44 24             	mov    0x24(%si),%ax
80105244:	14 85                	adc    $0x85,%al
80105246:	c0                   	(bad)  
80105247:	75 6b                	jne    801052b4 <.L15+0x11b>
80105249:	8b 4c 24             	mov    0x24(%si),%cx
8010524c:	18 85 c9 74          	sbb    %al,0x74c9(%di)
80105250:	1d 8b 7c             	sbb    $0x7c8b,%ax
80105253:	24 0c                	and    $0xc,%al
80105255:	89 f8                	mov    %di,%ax
80105257:	40                   	inc    %ax
80105258:	8b 4c 24             	mov    0x24(%si),%cx
8010525b:	60                   	pusha  
8010525c:	c6 04 39             	movb   $0x39,(%si)
8010525f:	2d 39 44             	sub    $0x4439,%ax
80105262:	24 64                	and    $0x64,%al
80105264:	0f 84 41 01          	je     801053a9 <.L15+0x210>
80105268:	00 00                	add    %al,(%bx,%si)
8010526a:	89 44 24             	mov    %ax,0x24(%si)
8010526d:	0c 8d                	or     $0x8d,%al
8010526f:	44                   	inc    %sp
80105270:	2c 26                	sub    $0x26,%al
80105272:	8b 54 24             	mov    0x24(%si),%dx
80105275:	0c 8b                	or     $0x8b,%al
80105277:	74 24                	je     8010529d <.L15+0x104>
80105279:	60                   	pusha  
8010527a:	39 44 24             	cmp    %ax,0x24(%si)
8010527d:	08 74 14             	or     %dh,0x14(%si)
80105280:	42                   	inc    %dx
80105281:	8a 08                	mov    (%bx,%si),%cl
80105283:	88 4c 16             	mov    %cl,0x16(%si)
80105286:	ff 48 39             	decw   0x39(%bx,%si)
80105289:	54                   	push   %sp
8010528a:	24 64                	and    $0x64,%al
8010528c:	74 92                	je     80105220 <.L15+0x87>
8010528e:	39 44 24             	cmp    %ax,0x24(%si)
80105291:	08 75 ec             	or     %dh,-0x14(%di)
80105294:	89 54 24             	mov    %dx,0x24(%si)
80105297:	0c 8b                	or     $0x8b,%al
80105299:	4c                   	dec    %sp
8010529a:	24 10                	and    $0x10,%al
8010529c:	41                   	inc    %cx
8010529d:	31 ed                	xor    %bp,%bp
8010529f:	c7 04 24 00          	movw   $0x24,(%si)
801052a3:	00 00                	add    %al,(%bx,%si)
801052a5:	00 c7                	add    %al,%bh
801052a7:	44                   	inc    %sp
801052a8:	24 14                	and    $0x14,%al
801052aa:	00 00                	add    %al,(%bx,%si)
801052ac:	00 00                	add    %al,(%bx,%si)
801052ae:	e9 3e fc             	jmp    80104eef <vsnprintf+0x3f>
801052b1:	ff                   	(bad)  
801052b2:	ff 90 8b 54          	call   *0x548b(%bx,%si)
801052b6:	24 18                	and    $0x18,%al
801052b8:	85 d2                	test   %dx,%dx
801052ba:	74 1d                	je     801052d9 <.L15+0x140>
801052bc:	8b 7c 24             	mov    0x24(%si),%di
801052bf:	0c 89                	or     $0x89,%al
801052c1:	f8                   	clc    
801052c2:	40                   	inc    %ax
801052c3:	8b 4c 24             	mov    0x24(%si),%cx
801052c6:	60                   	pusha  
801052c7:	c6 04 39             	movb   $0x39,(%si)
801052ca:	2d 39 44             	sub    $0x4439,%ax
801052cd:	24 64                	and    $0x64,%al
801052cf:	0f 84 d6 00          	je     801053a9 <.L15+0x210>
801052d3:	00 00                	add    %al,(%bx,%si)
801052d5:	89 44 24             	mov    %ax,0x24(%si)
801052d8:	0c 8b                	or     $0x8b,%al
801052da:	44                   	inc    %sp
801052db:	24 0c                	and    $0xc,%al
801052dd:	40                   	inc    %ax
801052de:	8b 4c 24             	mov    0x24(%si),%cx
801052e1:	14 8b                	adc    $0x8b,%al
801052e3:	7c 24                	jl     80105309 <.L15+0x170>
801052e5:	60                   	pusha  
801052e6:	8d 70 ff             	lea    -0x1(%bx,%si),%si
801052e9:	89 34                	mov    %si,(%si)
801052eb:	24 49                	and    $0x49,%al
801052ed:	83 f9 ff             	cmp    $0xffff,%cx
801052f0:	74 1c                	je     8010530e <.L15+0x175>
801052f2:	39 e9                	cmp    %bp,%cx
801052f4:	7c 1e                	jl     80105314 <.L15+0x17b>
801052f6:	c6 44 07 ff          	movb   $0xff,0x7(%si)
801052fa:	30 39                	xor    %bh,(%bx,%di)
801052fc:	44                   	inc    %sp
801052fd:	24 64                	and    $0x64,%al
801052ff:	74 21                	je     80105322 <.L15+0x189>
80105301:	40                   	inc    %ax
80105302:	8d 70 ff             	lea    -0x1(%bx,%si),%si
80105305:	89 34                	mov    %si,(%si)
80105307:	24 49                	and    $0x49,%al
80105309:	83 f9 ff             	cmp    $0xffff,%cx
8010530c:	75 e4                	jne    801052f2 <.L15+0x159>
8010530e:	89 74 24             	mov    %si,0x24(%si)
80105311:	0c eb                	or     $0xeb,%al
80105313:	84 8a 54 0c          	test   %cl,0xc54(%bp,%si)
80105317:	27                   	daa    
80105318:	88 54 07             	mov    %dl,0x7(%si)
8010531b:	ff                   	(bad)  
8010531c:	39 44 24             	cmp    %ax,0x24(%si)
8010531f:	64 75 df             	fs jne 80105301 <.L15+0x168>
80105322:	8b 14                	mov    (%si),%dx
80105324:	24 8b                	and    $0x8b,%al
80105326:	44                   	inc    %sp
80105327:	24 60                	and    $0x60,%al
80105329:	c6 04 10             	movb   $0x10,(%si)
8010532c:	00 8b 44 24          	add    %cl,0x2444(%bp,%di)
80105330:	64 e9 f9 fe          	fs jmp 8010522d <.L15+0x94>
80105334:	ff                   	(bad)  
80105335:	ff 89 f8 8b          	decw   -0x7408(%bx,%di)
80105339:	7c 24                	jl     8010535f <.L15+0x1c6>
8010533b:	64 c6 44 38 ff       	movb   $0xff,%fs:0x38(%si)
80105340:	00 89 f8 83          	add    %cl,-0x7c08(%bx,%di)
80105344:	c4 4c 5b             	les    0x5b(%si),%cx
80105347:	5e                   	pop    %si
80105348:	5f                   	pop    %di
80105349:	5d                   	pop    %bp
8010534a:	c3                   	ret    
8010534b:	83 44 24 6c          	addw   $0x6c,0x24(%si)
8010534f:	04 8b                	add    $0x8b,%al
80105351:	4c                   	dec    %sp
80105352:	24 10                	and    $0x10,%al
80105354:	41                   	inc    %cx
80105355:	89 54 24             	mov    %dx,0x24(%si)
80105358:	0c c7                	or     $0xc7,%al
8010535a:	04 24                	add    $0x24,%al
8010535c:	00 00                	add    %al,(%bx,%si)
8010535e:	00 00                	add    %al,(%bx,%si)
80105360:	c7 44 24 14 00       	movw   $0x14,0x24(%si)
80105365:	00 00                	add    %al,(%bx,%si)
80105367:	00 e9                	add    %ch,%cl
80105369:	84 fb                	test   %bh,%bl
8010536b:	ff                   	(bad)  
8010536c:	ff 8b 44 24          	decw   0x2444(%bp,%di)
80105370:	0c c6                	or     $0xc6,%al
80105372:	44                   	inc    %sp
80105373:	06                   	push   %es
80105374:	ff 00                	incw   (%bx,%si)
80105376:	83 c4 4c             	add    $0x4c,%sp
80105379:	5b                   	pop    %bx
8010537a:	5e                   	pop    %si
8010537b:	5f                   	pop    %di
8010537c:	5d                   	pop    %bp
8010537d:	c3                   	ret    
8010537e:	89 f7                	mov    %si,%di
80105380:	c1 ff 1f             	sar    $0x1f,%di
80105383:	83 c0 04             	add    $0x4,%ax
80105386:	89 44 24             	mov    %ax,0x24(%si)
80105389:	6c                   	insb   (%dx),%es:(%di)
8010538a:	85 ff                	test   %di,%di
8010538c:	0f 89 67 fd          	jns    801050f7 <.L11+0x25>
80105390:	ff                   	(bad)  
80105391:	ff f7                	push   %di
80105393:	de 83 d7 00          	fiadd  0xd7(%bp,%di)
80105397:	f7 df                	neg    %di
80105399:	c7 44 24 18 00       	movw   $0x18,0x24(%si)
8010539e:	01 00                	add    %ax,(%bx,%si)
801053a0:	00 ba 0a 00          	add    %bh,0xa(%bp,%si)
801053a4:	00 00                	add    %al,(%bx,%si)
801053a6:	e9 e5 fb             	jmp    80104f8e <.L63+0x25>
801053a9:	ff                   	(bad)  
801053aa:	ff 8b 7c 24          	decw   0x247c(%bp,%di)
801053ae:	64 c6 44 39 ff       	movb   $0xff,%fs:0x39(%si)
801053b3:	00 89 f8 e9          	add    %cl,-0x1608(%bx,%di)
801053b7:	74 fe                	je     801053b7 <.L15+0x21e>
801053b9:	ff                   	(bad)  
801053ba:	ff 8b 7c 24          	decw   0x247c(%bp,%di)
801053be:	64 c6 44 3e ff       	movb   $0xff,%fs:0x3e(%si)
801053c3:	00 89 f8 e9          	add    %cl,-0x1608(%bx,%di)
801053c7:	64 fe                	fs (bad) 
801053c9:	ff                   	(bad)  
801053ca:	ff b0 28 8b          	pushw  -0x74d8(%bx,%si)
801053ce:	74 24                	je     801053f4 <snprintf+0x10>
801053d0:	1c e9                	sbb    $0xe9,%al
801053d2:	db fd                	(bad)  
801053d4:	ff                   	(bad)  
801053d5:	ff 8b 54 24          	decw   0x2454(%bp,%di)
801053d9:	0c 31                	or     $0x31,%al
801053db:	c0 e9 02             	shr    $0x2,%cl
801053de:	fe                   	(bad)  
801053df:	ff                   	(bad)  
801053e0:	ff 8d 76 00          	decw   0x76(%di)

801053e4 <snprintf>:
801053e4:	83 ec 0c             	sub    $0xc,%sp
801053e7:	8d 44 24             	lea    0x24(%si),%ax
801053ea:	1c 50                	sbb    $0x50,%al
801053ec:	ff 74 24             	pushw  0x24(%si)
801053ef:	1c ff                	sbb    $0xff,%al
801053f1:	74 24                	je     80105417 <entryother_start+0x13>
801053f3:	1c ff                	sbb    $0xff,%al
801053f5:	74 24                	je     8010541b <entryother_start+0x17>
801053f7:	1c e8                	sbb    $0xe8,%al
801053f9:	b3 fa                	mov    $0xfa,%bl
801053fb:	ff                   	(bad)  
801053fc:	ff 83 c4 1c          	incw   0x1cc4(%bp,%di)
80105400:	c3                   	ret    
80105401:	66 90                	xchg   %eax,%eax
80105403:	90                   	nop

80105404 <entryother_start>:
80105404:	fa                   	cli    
80105405:	31 c0                	xor    %ax,%ax
80105407:	8e d8                	mov    %ax,%ds
80105409:	8e c0                	mov    %ax,%es
8010540b:	8e d0                	mov    %ax,%ss
8010540d:	0f 01 16 88 70       	lgdtw  0x7088
80105412:	0f 20 c0             	mov    %cr0,%eax
80105415:	66 83 c8 01          	or     $0x1,%eax
80105419:	0f 22 c0             	mov    %eax,%cr0
8010541c:	66 ea 20 70 00 00 08 	ljmpl  $0x8,$0x7020
80105423:	00 

80105424 <entrystart32>:
80105424:	66 b8 10 00 8e d8    	mov    $0xd88e0010,%eax
8010542a:	8e c0                	mov    %ax,%es
8010542c:	8e d0                	mov    %ax,%ss
8010542e:	66 b8 00 00 8e e0    	mov    $0xe08e0000,%eax
80105434:	8e e8                	mov    %ax,%gs
80105436:	f4                   	hlt    
80105437:	0f 20 e0             	mov    %cr4,%eax
8010543a:	83 c8 10             	or     $0x10,%ax
8010543d:	0f 22 e0             	mov    %eax,%cr4
80105440:	a1 f4 6f             	mov    0x6ff4,%ax
80105443:	00 00                	add    %al,(%bx,%si)
80105445:	0f 22 d8             	mov    %eax,%cr3
80105448:	0f 20 c0             	mov    %cr0,%eax
8010544b:	0d 01 00             	or     $0x1,%ax
8010544e:	01 80 0f 22          	add    %ax,0x220f(%bx,%si)
80105452:	c0 8b 25 fc 6f       	rorb   $0x6f,-0x3db(%bp,%di)
80105457:	00 00                	add    %al,(%bx,%si)
80105459:	ff 15                	call   *(%di)
8010545b:	f8                   	clc    
8010545c:	6f                   	outsw  %ds:(%si),(%dx)
8010545d:	00 00                	add    %al,(%bx,%si)
8010545f:	66 b8 00 8a 66 89    	mov    $0x89668a00,%eax
80105465:	c2 66 ef             	ret    $0xef66
80105468:	66 b8 e0 8a 66 ef    	mov    $0xef668ae0,%eax

8010546e <spin>:
8010546e:	eb fe                	jmp    8010546e <spin>

80105470 <entryother_end>:
80105470:	eb fe                	jmp    80105470 <entryother_end>
80105472:	66 90                	xchg   %eax,%eax

80105474 <entryother_gdt>:
	...
8010547c:	ff                   	(bad)  
8010547d:	ff 00                	incw   (%bx,%si)
8010547f:	00 00                	add    %al,(%bx,%si)
80105481:	9a cf 00 ff ff       	lcall  $0xffff,$0xcf
80105486:	00 00                	add    %al,(%bx,%si)
80105488:	00 92 cf 00          	add    %dl,0xcf(%bp,%si)

8010548c <entryother_gdtdesc>:
8010548c:	17                   	pop    %ss
8010548d:	00 74 54             	add    %dh,0x54(%si)
80105490:	10                   	.byte 0x10
80105491:	80                   	.byte 0x80

80105492 <set_cr_mmu>:
80105492:	31 c0                	xor    %ax,%ax
80105494:	50                   	push   %ax
80105495:	50                   	push   %ax
80105496:	0f 20 e0             	mov    %cr4,%eax
80105499:	83 c8 10             	or     $0x10,%ax
8010549c:	0f 22 e0             	mov    %eax,%cr4
8010549f:	b8 00 a0             	mov    $0xa000,%ax
801054a2:	10 00                	adc    %al,(%bx,%si)
801054a4:	0f 22 d8             	mov    %eax,%cr3
801054a7:	0f 20 c0             	mov    %cr0,%eax
801054aa:	0d 00 00             	or     $0x0,%ax
801054ad:	01 80 0f 22          	add    %ax,0x220f(%bx,%si)
801054b1:	c0 bc 00 70 11       	sarb   $0x11,0x7000(%si)
801054b6:	80 b8 cc 34 10       	cmpb   $0x10,0x34cc(%bx,%si)
801054bb:	80 ff e0             	cmp    $0xe0,%bh
801054be:	66 90                	xchg   %eax,%eax

801054c0 <handle_syscall>:
801054c0:	55                   	push   %bp
801054c1:	57                   	push   %di
801054c2:	56                   	push   %si
801054c3:	53                   	push   %bx
801054c4:	83 ec 0c             	sub    $0xc,%sp
801054c7:	e8 c0 02             	call   8010578a <__text_end_kern+0x2>
801054ca:	00 00                	add    %al,(%bx,%si)
801054cc:	81 c3 f4 5d          	add    $0x5df4,%bx
801054d0:	00 00                	add    %al,(%bx,%si)
801054d2:	8d 7c 24             	lea    0x24(%si),%di
801054d5:	24 83                	and    $0x83,%al
801054d7:	ec                   	in     (%dx),%al
801054d8:	08 ff                	or     %bh,%bh
801054da:	74 24                	je     80105500 <handle_syscall+0x40>
801054dc:	28 8d 83 aa          	sub    %cl,-0x557d(%di)
801054e0:	af                   	scas   %es:(%di),%ax
801054e1:	ff                   	(bad)  
801054e2:	ff 50 e8             	call   *-0x18(%bx,%si)
801054e5:	d3 be ff ff          	sarw   %cl,-0x1(%bp)
801054e9:	83 c4 10             	add    $0x10,%sp
801054ec:	31 f6                	xor    %si,%si
801054ee:	8d ab c0 af          	lea    -0x5040(%bp,%di),%bp
801054f2:	ff                   	(bad)  
801054f3:	ff 83 c7 04          	incw   0x4c7(%bp,%di)
801054f7:	50                   	push   %ax
801054f8:	ff 77 fc             	pushw  -0x4(%bx)
801054fb:	56                   	push   %si
801054fc:	55                   	push   %bp
801054fd:	e8 ba be             	call   801013ba <set_console+0x1e>
80105500:	ff                   	(bad)  
80105501:	ff 46 83             	incw   -0x7d(%bp)
80105504:	c4 10                	les    (%bx,%si),%dx
80105506:	83 fe 06             	cmp    $0x6,%si
80105509:	75 e9                	jne    801054f4 <handle_syscall+0x34>
8010550b:	31 c0                	xor    %ax,%ax
8010550d:	83 c4 0c             	add    $0xc,%sp
80105510:	5b                   	pop    %bx
80105511:	5e                   	pop    %si
80105512:	5f                   	pop    %di
80105513:	5d                   	pop    %bp
80105514:	c3                   	ret    
80105515:	8d 76 00             	lea    0x0(%bp),%si

80105518 <handle_interrupt>:
80105518:	53                   	push   %bx
80105519:	83 ec 10             	sub    $0x10,%sp
8010551c:	e8 6b 02             	call   8010578a <__text_end_kern+0x2>
8010551f:	00 00                	add    %al,(%bx,%si)
80105521:	81 c3 9f 5d          	add    $0x5d9f,%bx
80105525:	00 00                	add    %al,(%bx,%si)
80105527:	ff 74 24             	pushw  0x24(%si)
8010552a:	18 8d 83 d8          	sbb    %cl,-0x277d(%di)
8010552e:	af                   	scas   %es:(%di),%ax
8010552f:	ff                   	(bad)  
80105530:	ff 50 e8             	call   *-0x18(%bx,%si)
80105533:	85 be ff ff          	test   %di,-0x1(%bp)
80105537:	83 c4 18             	add    $0x18,%sp
8010553a:	5b                   	pop    %bx
8010553b:	c3                   	ret    

8010553c <__udivdi3>:
8010553c:	55                   	push   %bp
8010553d:	57                   	push   %di
8010553e:	56                   	push   %si
8010553f:	53                   	push   %bx
80105540:	83 ec 1c             	sub    $0x1c,%sp
80105543:	8b 5c 24             	mov    0x24(%si),%bx
80105546:	30 8b 4c 24          	xor    %cl,0x244c(%bp,%di)
8010554a:	34 8b                	xor    $0x8b,%al
8010554c:	7c 24                	jl     80105572 <__udivdi3+0x36>
8010554e:	38 89 5c 24          	cmp    %cl,0x245c(%bx,%di)
80105552:	04 89                	add    $0x89,%al
80105554:	ca 89 f8             	lret   $0xf889
80105557:	8b 74 24             	mov    0x24(%si),%si
8010555a:	3c 85                	cmp    $0x85,%al
8010555c:	f6 75 2d             	divb   0x2d(%di)
8010555f:	39 cf                	cmp    %cx,%di
80105561:	77 65                	ja     801055c8 <__udivdi3+0x8c>
80105563:	89 fd                	mov    %di,%bp
80105565:	85 ff                	test   %di,%di
80105567:	75 0b                	jne    80105574 <__udivdi3+0x38>
80105569:	b8 01 00             	mov    $0x1,%ax
8010556c:	00 00                	add    %al,(%bx,%si)
8010556e:	31 d2                	xor    %dx,%dx
80105570:	f7 f7                	div    %di
80105572:	89 c5                	mov    %ax,%bp
80105574:	31 d2                	xor    %dx,%dx
80105576:	89 c8                	mov    %cx,%ax
80105578:	f7 f5                	div    %bp
8010557a:	89 c1                	mov    %ax,%cx
8010557c:	89 d8                	mov    %bx,%ax
8010557e:	f7 f5                	div    %bp
80105580:	89 cf                	mov    %cx,%di
80105582:	89 fa                	mov    %di,%dx
80105584:	83 c4 1c             	add    $0x1c,%sp
80105587:	5b                   	pop    %bx
80105588:	5e                   	pop    %si
80105589:	5f                   	pop    %di
8010558a:	5d                   	pop    %bp
8010558b:	c3                   	ret    
8010558c:	39 ce                	cmp    %cx,%si
8010558e:	77 28                	ja     801055b8 <__udivdi3+0x7c>
80105590:	0f bd fe             	bsr    %si,%di
80105593:	83 f7 1f             	xor    $0x1f,%di
80105596:	75 40                	jne    801055d8 <__udivdi3+0x9c>
80105598:	39 ce                	cmp    %cx,%si
8010559a:	72 0a                	jb     801055a6 <__udivdi3+0x6a>
8010559c:	3b 44 24             	cmp    0x24(%si),%ax
8010559f:	04 0f                	add    $0xf,%al
801055a1:	87 9e 00 00          	xchg   %bx,0x0(%bp)
801055a5:	00 b8 01 00          	add    %bh,0x1(%bx,%si)
801055a9:	00 00                	add    %al,(%bx,%si)
801055ab:	89 fa                	mov    %di,%dx
801055ad:	83 c4 1c             	add    $0x1c,%sp
801055b0:	5b                   	pop    %bx
801055b1:	5e                   	pop    %si
801055b2:	5f                   	pop    %di
801055b3:	5d                   	pop    %bp
801055b4:	c3                   	ret    
801055b5:	8d 76 00             	lea    0x0(%bp),%si
801055b8:	31 ff                	xor    %di,%di
801055ba:	31 c0                	xor    %ax,%ax
801055bc:	89 fa                	mov    %di,%dx
801055be:	83 c4 1c             	add    $0x1c,%sp
801055c1:	5b                   	pop    %bx
801055c2:	5e                   	pop    %si
801055c3:	5f                   	pop    %di
801055c4:	5d                   	pop    %bp
801055c5:	c3                   	ret    
801055c6:	66 90                	xchg   %eax,%eax
801055c8:	89 d8                	mov    %bx,%ax
801055ca:	f7 f7                	div    %di
801055cc:	31 ff                	xor    %di,%di
801055ce:	89 fa                	mov    %di,%dx
801055d0:	83 c4 1c             	add    $0x1c,%sp
801055d3:	5b                   	pop    %bx
801055d4:	5e                   	pop    %si
801055d5:	5f                   	pop    %di
801055d6:	5d                   	pop    %bp
801055d7:	c3                   	ret    
801055d8:	bd 20 00             	mov    $0x20,%bp
801055db:	00 00                	add    %al,(%bx,%si)
801055dd:	29 fd                	sub    %di,%bp
801055df:	89 f9                	mov    %di,%cx
801055e1:	d3 e6                	shl    %cl,%si
801055e3:	89 c3                	mov    %ax,%bx
801055e5:	89 e9                	mov    %bp,%cx
801055e7:	d3 eb                	shr    %cl,%bx
801055e9:	89 d9                	mov    %bx,%cx
801055eb:	09 f1                	or     %si,%cx
801055ed:	89 4c 24             	mov    %cx,0x24(%si)
801055f0:	08 89 f9 d3          	or     %cl,-0x2c07(%bx,%di)
801055f4:	e0 89                	loopne 8010557f <__udivdi3+0x43>
801055f6:	44                   	inc    %sp
801055f7:	24 0c                	and    $0xc,%al
801055f9:	89 d6                	mov    %dx,%si
801055fb:	89 e9                	mov    %bp,%cx
801055fd:	d3 ee                	shr    %cl,%si
801055ff:	89 f9                	mov    %di,%cx
80105601:	d3 e2                	shl    %cl,%dx
80105603:	8b 5c 24             	mov    0x24(%si),%bx
80105606:	04 89                	add    $0x89,%al
80105608:	e9 d3 eb             	jmp    801041de <seginit+0x36>
8010560b:	09 da                	or     %bx,%dx
8010560d:	89 d0                	mov    %dx,%ax
8010560f:	89 f2                	mov    %si,%dx
80105611:	f7 74 24             	divw   0x24(%si)
80105614:	08 89 d6 89          	or     %cl,-0x762a(%bx,%di)
80105618:	c3                   	ret    
80105619:	f7 64 24             	mulw   0x24(%si)
8010561c:	0c 39                	or     $0x39,%al
8010561e:	d6                   	(bad)  
8010561f:	72 17                	jb     80105638 <__udivdi3+0xfc>
80105621:	74 09                	je     8010562c <__udivdi3+0xf0>
80105623:	89 d8                	mov    %bx,%ax
80105625:	31 ff                	xor    %di,%di
80105627:	e9 56 ff             	jmp    80105580 <__udivdi3+0x44>
8010562a:	ff                   	(bad)  
8010562b:	ff 8b 54 24          	decw   0x2454(%bp,%di)
8010562f:	04 89                	add    $0x89,%al
80105631:	f9                   	stc    
80105632:	d3 e2                	shl    %cl,%dx
80105634:	39 c2                	cmp    %ax,%dx
80105636:	73 eb                	jae    80105623 <__udivdi3+0xe7>
80105638:	8d 43 ff             	lea    -0x1(%bp,%di),%ax
8010563b:	31 ff                	xor    %di,%di
8010563d:	e9 40 ff             	jmp    80105580 <__udivdi3+0x44>
80105640:	ff                   	(bad)  
80105641:	ff 66 90             	jmp    *-0x70(%bp)
80105644:	31 c0                	xor    %ax,%ax
80105646:	e9 37 ff             	jmp    80105580 <__udivdi3+0x44>
80105649:	ff                   	(bad)  
8010564a:	ff                   	.byte 0xff
8010564b:	90                   	nop

8010564c <__umoddi3>:
8010564c:	55                   	push   %bp
8010564d:	57                   	push   %di
8010564e:	56                   	push   %si
8010564f:	53                   	push   %bx
80105650:	83 ec 1c             	sub    $0x1c,%sp
80105653:	8b 4c 24             	mov    0x24(%si),%cx
80105656:	30 8b 74 24          	xor    %cl,0x2474(%bp,%di)
8010565a:	34 8b                	xor    $0x8b,%al
8010565c:	7c 24                	jl     80105682 <__umoddi3+0x36>
8010565e:	38 8b 44 24          	cmp    %cl,0x2444(%bp,%di)
80105662:	3c 89                	cmp    $0x89,%al
80105664:	44                   	inc    %sp
80105665:	24 0c                	and    $0xc,%al
80105667:	89 4c 24             	mov    %cx,0x24(%si)
8010566a:	08 89 3c 24          	or     %cl,0x243c(%bx,%di)
8010566e:	89 4c 24             	mov    %cx,0x24(%si)
80105671:	04 89                	add    $0x89,%al
80105673:	f2 85 c0             	repnz test %ax,%ax
80105676:	75 18                	jne    80105690 <__umoddi3+0x44>
80105678:	39 f7                	cmp    %si,%di
8010567a:	0f 86 a0 00          	jbe    8010571e <__umoddi3+0xd2>
8010567e:	00 00                	add    %al,(%bx,%si)
80105680:	89 c8                	mov    %cx,%ax
80105682:	f7 f7                	div    %di
80105684:	89 d0                	mov    %dx,%ax
80105686:	31 d2                	xor    %dx,%dx
80105688:	83 c4 1c             	add    $0x1c,%sp
8010568b:	5b                   	pop    %bx
8010568c:	5e                   	pop    %si
8010568d:	5f                   	pop    %di
8010568e:	5d                   	pop    %bp
8010568f:	c3                   	ret    
80105690:	89 f3                	mov    %si,%bx
80105692:	39 f0                	cmp    %si,%ax
80105694:	0f 87 a6 00          	ja     8010573e <__umoddi3+0xf2>
80105698:	00 00                	add    %al,(%bx,%si)
8010569a:	0f bd e8             	bsr    %ax,%bp
8010569d:	83 f5 1f             	xor    $0x1f,%bp
801056a0:	0f 84 a6 00          	je     8010574a <__umoddi3+0xfe>
801056a4:	00 00                	add    %al,(%bx,%si)
801056a6:	bf 20 00             	mov    $0x20,%di
801056a9:	00 00                	add    %al,(%bx,%si)
801056ab:	29 ef                	sub    %bp,%di
801056ad:	89 e9                	mov    %bp,%cx
801056af:	d3 e0                	shl    %cl,%ax
801056b1:	8b 34                	mov    (%si),%si
801056b3:	24 89                	and    $0x89,%al
801056b5:	f2 89 f9             	repnz mov %di,%cx
801056b8:	d3 ea                	shr    %cl,%dx
801056ba:	09 c2                	or     %ax,%dx
801056bc:	89 14                	mov    %dx,(%si)
801056be:	24 89                	and    $0x89,%al
801056c0:	f2 89 e9             	repnz mov %bp,%cx
801056c3:	d3 e2                	shl    %cl,%dx
801056c5:	89 54 24             	mov    %dx,0x24(%si)
801056c8:	04 89                	add    $0x89,%al
801056ca:	de 89 f9 d3          	fimul  -0x2c07(%bx,%di)
801056ce:	ee                   	out    %al,(%dx)
801056cf:	89 e9                	mov    %bp,%cx
801056d1:	d3 e3                	shl    %cl,%bx
801056d3:	8b 54 24             	mov    0x24(%si),%dx
801056d6:	08 89 d0 89          	or     %cl,-0x7630(%bx,%di)
801056da:	f9                   	stc    
801056db:	d3 e8                	shr    %cl,%ax
801056dd:	09 d8                	or     %bx,%ax
801056df:	89 d3                	mov    %dx,%bx
801056e1:	89 e9                	mov    %bp,%cx
801056e3:	d3 e3                	shl    %cl,%bx
801056e5:	89 5c 24             	mov    %bx,0x24(%si)
801056e8:	08 89 f2 f7          	or     %cl,-0x80e(%bx,%di)
801056ec:	34 24                	xor    $0x24,%al
801056ee:	89 d6                	mov    %dx,%si
801056f0:	f7 64 24             	mulw   0x24(%si)
801056f3:	04 89                	add    $0x89,%al
801056f5:	c3                   	ret    
801056f6:	89 d1                	mov    %dx,%cx
801056f8:	39 d6                	cmp    %dx,%si
801056fa:	72 7c                	jb     80105778 <__umoddi3+0x12c>
801056fc:	74 72                	je     80105770 <__umoddi3+0x124>
801056fe:	8b 54 24             	mov    0x24(%si),%dx
80105701:	08 29                	or     %ch,(%bx,%di)
80105703:	da 19                	ficompl (%bx,%di)
80105705:	ce                   	into   
80105706:	89 f0                	mov    %si,%ax
80105708:	89 f9                	mov    %di,%cx
8010570a:	d3 e0                	shl    %cl,%ax
8010570c:	89 e9                	mov    %bp,%cx
8010570e:	d3 ea                	shr    %cl,%dx
80105710:	09 d0                	or     %dx,%ax
80105712:	89 e9                	mov    %bp,%cx
80105714:	d3 ee                	shr    %cl,%si
80105716:	89 f2                	mov    %si,%dx
80105718:	83 c4 1c             	add    $0x1c,%sp
8010571b:	5b                   	pop    %bx
8010571c:	5e                   	pop    %si
8010571d:	5f                   	pop    %di
8010571e:	5d                   	pop    %bp
8010571f:	c3                   	ret    
80105720:	89 fd                	mov    %di,%bp
80105722:	85 ff                	test   %di,%di
80105724:	75 0b                	jne    80105731 <__umoddi3+0xe5>
80105726:	b8 01 00             	mov    $0x1,%ax
80105729:	00 00                	add    %al,(%bx,%si)
8010572b:	31 d2                	xor    %dx,%dx
8010572d:	f7 f7                	div    %di
8010572f:	89 c5                	mov    %ax,%bp
80105731:	89 f0                	mov    %si,%ax
80105733:	31 d2                	xor    %dx,%dx
80105735:	f7 f5                	div    %bp
80105737:	89 c8                	mov    %cx,%ax
80105739:	f7 f5                	div    %bp
8010573b:	e9 44 ff             	jmp    80105682 <__umoddi3+0x36>
8010573e:	ff                   	(bad)  
8010573f:	ff 89 c8 89          	decw   -0x7638(%bx,%di)
80105743:	f2 83 c4 1c          	repnz add $0x1c,%sp
80105747:	5b                   	pop    %bx
80105748:	5e                   	pop    %si
80105749:	5f                   	pop    %di
8010574a:	5d                   	pop    %bp
8010574b:	c3                   	ret    
8010574c:	39 f0                	cmp    %si,%ax
8010574e:	72 05                	jb     80105755 <__umoddi3+0x109>
80105750:	39 0c                	cmp    %cx,(%si)
80105752:	24 77                	and    $0x77,%al
80105754:	0c 89                	or     $0x89,%al
80105756:	f2 29 f9             	repnz sub %di,%cx
80105759:	1b 54 24             	sbb    0x24(%si),%dx
8010575c:	0c 89                	or     $0x89,%al
8010575e:	4c                   	dec    %sp
8010575f:	24 04                	and    $0x4,%al
80105761:	8b 44 24             	mov    0x24(%si),%ax
80105764:	04 83                	add    $0x83,%al
80105766:	c4 1c                	les    (%si),%bx
80105768:	5b                   	pop    %bx
80105769:	5e                   	pop    %si
8010576a:	5f                   	pop    %di
8010576b:	5d                   	pop    %bp
8010576c:	c3                   	ret    
8010576d:	8d 76 00             	lea    0x0(%bp),%si
80105770:	39 44 24             	cmp    %ax,0x24(%si)
80105773:	08 73 88             	or     %dh,-0x78(%bp,%di)
80105776:	66 90                	xchg   %eax,%eax
80105778:	2b 44 24             	sub    0x24(%si),%ax
8010577b:	04 1b                	add    $0x1b,%al
8010577d:	14 24                	adc    $0x24,%al
8010577f:	89 d1                	mov    %dx,%cx
80105781:	89 c3                	mov    %ax,%bx
80105783:	e9 76 ff             	jmp    801056fc <__umoddi3+0xb0>
80105786:	ff                   	(bad)  
80105787:	ff                   	.byte 0xff

Disassembly of section .text.__x86.get_pc_thunk.cx:

80105788 <__x86.get_pc_thunk.cx>:
80105788:	8b 0c                	mov    (%si),%cx
8010578a:	24 c3                	and    $0xc3,%al

Disassembly of section .text.__x86.get_pc_thunk.bx:

8010578c <__x86.get_pc_thunk.bx>:
8010578c:	8b 1c                	mov    (%si),%bx
8010578e:	24 c3                	and    $0xc3,%al

Disassembly of section .text.__x86.get_pc_thunk.si:

80105790 <__x86.get_pc_thunk.si>:
80105790:	8b 34                	mov    (%si),%si
80105792:	24 c3                	and    $0xc3,%al

Disassembly of section .text.__x86.get_pc_thunk.ax:

80105794 <__x86.get_pc_thunk.ax>:
80105794:	8b 04                	mov    (%si),%ax
80105796:	24 c3                	and    $0xc3,%al

Disassembly of section .text.__x86.get_pc_thunk.dx:

80105798 <__x86.get_pc_thunk.dx>:
80105798:	8b 14                	mov    (%si),%dx
8010579a:	24 c3                	and    $0xc3,%al

Disassembly of section .text.__x86.get_pc_thunk.bp:

8010579c <__x86.get_pc_thunk.bp>:
8010579c:	8b 2c                	mov    (%si),%bp
8010579e:	24 c3                	and    $0xc3,%al

Disassembly of section .init:

80117624 <early_init_end-0x4>:
80117624:	00 00                	add    %al,(%bx,%si)
	...

80117628 <early_init_end>:
80117628:	4c                   	dec    %sp
80117629:	00 10                	add    %dl,(%bx,%si)
8011762b:	80                   	.byte 0x80

8011762c <__norm4_initcall___driver_init>:
8011762c:	c4 48 10 80                                         .H..

80117630 <__norm4_initcall___driver_init>:
80117630:	28 4d 10 80                                         (M..

80117634 <__norm7_initcall___driver_init>:
80117634:	90 03 10 80                                         ....
